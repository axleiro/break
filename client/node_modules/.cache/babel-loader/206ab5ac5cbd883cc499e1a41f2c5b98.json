{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/ClusterModal.tsx\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDebounceCallback } from \"@react-hook/debounce\";\nimport { useServer, serverName, useClusterModal, SERVERS, DEFAULT_SERVER, useCustomUrl } from \"../providers/server\";\nimport { useRpcUrlState } from \"providers/rpc\";\nimport { useConfig } from \"providers/server/http\";\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction ClusterModal() {\n  const [show, setShow] = useClusterModal();\n\n  const onClose = () => setShow(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal fade fixed-right${show ? \" show\" : \"\"}`,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"c-pointer\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Choose a Cluster\"), /*#__PURE__*/React.createElement(ClusterToggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Override RPC\"), /*#__PURE__*/React.createElement(CustomRpcInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nfunction CustomRpcInput() {\n  var _useConfig;\n\n  const [rpcUrl, setRpcUrl] = useRpcUrlState();\n  const [editing, setEditing] = React.useState(false);\n  const configRpcUrl = (_useConfig = useConfig()) === null || _useConfig === void 0 ? void 0 : _useConfig.rpcUrl;\n  const active = configRpcUrl !== rpcUrl;\n\n  const customClass = prefix => active ? `${prefix}-info` : \"\";\n\n  const onUrlInput = useDebounceCallback(url => {\n    if (url.length > 0) {\n      setRpcUrl(url);\n    } else if (configRpcUrl) {\n      setRpcUrl(configRpcUrl);\n    }\n  }, 500);\n  const defaultValue = active ? rpcUrl : \"\";\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    defaultValue: defaultValue,\n    placeholder: \"http://127.0.0.1:8899\",\n    className: `form-control form-control-prepended b-black ${inputTextClass} ${customClass(\"border\")}`,\n    onFocus: () => setEditing(true),\n    onBlur: () => setEditing(false),\n    onInput: e => onUrlInput(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  });\n}\n\nfunction CustomClusterInput() {\n  const [customUrl, setCustomUrl] = useCustomUrl();\n  const [editing, setEditing] = React.useState(false);\n  const onUrlInput = useDebounceCallback(url => {\n    setCustomUrl(url);\n  }, 500);\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    defaultValue: customUrl,\n    className: `form-control form-control-prepended b-black ${inputTextClass}`,\n    onFocus: () => setEditing(true),\n    onBlur: () => setEditing(false),\n    onInput: e => onUrlInput(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction ClusterToggle() {\n  const {\n    server\n  } = useServer();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group-toggle d-flex flex-wrap mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, SERVERS.map(next => {\n    const active = next === server;\n    const btnClass = active ? `active btn-dark border-info text-white` : \"btn-dark\";\n\n    const clusterLocation = location => {\n      const params = new URLSearchParams(location.search);\n\n      if (next !== DEFAULT_SERVER) {\n        params.set(\"cluster\", next);\n      } else {\n        params.delete(\"cluster\");\n      }\n\n      return { ...location,\n        search: params.toString()\n      };\n    };\n\n    return /*#__PURE__*/React.createElement(Link, {\n      key: next,\n      className: `btn text-center col-12 mb-3 ${btnClass}`,\n      to: clusterLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, serverName(next));\n  })), server === \"custom\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Custom Server URL\"), /*#__PURE__*/React.createElement(CustomClusterInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Note: This must be a break server url\")));\n}\n\nexport default ClusterModal;","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/ClusterModal.tsx"],"names":["React","Link","useLocation","useDebounceCallback","useServer","serverName","useClusterModal","SERVERS","DEFAULT_SERVER","useCustomUrl","useRpcUrlState","useConfig","useQuery","URLSearchParams","search","ClusterModal","show","setShow","onClose","e","stopPropagation","CustomRpcInput","rpcUrl","setRpcUrl","editing","setEditing","useState","configRpcUrl","active","customClass","prefix","onUrlInput","url","length","defaultValue","inputTextClass","currentTarget","value","CustomClusterInput","customUrl","setCustomUrl","ClusterToggle","server","map","next","btnClass","clusterLocation","location","params","set","delete","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useDebounceCallback } from \"@react-hook/debounce\";\nimport { Location } from \"history\";\nimport {\n  useServer,\n  serverName,\n  useClusterModal,\n  SERVERS,\n  DEFAULT_SERVER,\n  useCustomUrl,\n} from \"../providers/server\";\nimport { useRpcUrlState } from \"providers/rpc\";\nimport { useConfig } from \"providers/server/http\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction ClusterModal() {\n  const [show, setShow] = useClusterModal();\n  const onClose = () => setShow(false);\n  return (\n    <>\n      <div\n        className={`modal fade fixed-right${show ? \" show\" : \"\"}`}\n        onClick={onClose}\n      >\n        <div className=\"modal-dialog modal-dialog-vertical\">\n          <div className=\"modal-content\">\n            <div className=\"modal-body\" onClick={(e) => e.stopPropagation()}>\n              <span className=\"c-pointer\" onClick={onClose}>\n                &times;\n              </span>\n\n              <h2 className=\"text-center mb-4 mt-4\">Choose a Cluster</h2>\n\n              <ClusterToggle />\n\n              <h2 className=\"text-center mb-4 mt-5\">Override RPC</h2>\n\n              <CustomRpcInput />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction CustomRpcInput() {\n  const [rpcUrl, setRpcUrl] = useRpcUrlState();\n  const [editing, setEditing] = React.useState(false);\n  const configRpcUrl = useConfig()?.rpcUrl;\n  const active = configRpcUrl !== rpcUrl;\n\n  const customClass = (prefix: string) => (active ? `${prefix}-info` : \"\");\n  const onUrlInput = useDebounceCallback((url: string) => {\n    if (url.length > 0) {\n      setRpcUrl(url);\n    } else if (configRpcUrl) {\n      setRpcUrl(configRpcUrl);\n    }\n  }, 500);\n\n  const defaultValue = active ? rpcUrl : \"\";\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return (\n      <input\n        type=\"text\"\n        defaultValue={defaultValue}\n        placeholder=\"http://127.0.0.1:8899\"\n        className={`form-control form-control-prepended b-black ${inputTextClass} ${customClass(\n          \"border\"\n        )}`}\n        onFocus={() => setEditing(true)}\n        onBlur={() => setEditing(false)}\n        onInput={(e) => onUrlInput(e.currentTarget.value)}\n      />\n  );\n}\n\nfunction CustomClusterInput() {\n  const [customUrl, setCustomUrl] = useCustomUrl();\n  const [editing, setEditing] = React.useState(false);\n\n  const onUrlInput = useDebounceCallback((url: string) => {\n    setCustomUrl(url);\n  }, 500);\n\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return (\n    <input\n      type=\"text\"\n      defaultValue={customUrl}\n      className={`form-control form-control-prepended b-black ${inputTextClass}`}\n      onFocus={() => setEditing(true)}\n      onBlur={() => setEditing(false)}\n      onInput={(e) => onUrlInput(e.currentTarget.value)}\n    />\n  );\n}\n\nfunction ClusterToggle() {\n  const { server } = useServer();\n\n  return (\n    <>\n    <div className=\"btn-group-toggle d-flex flex-wrap mb-4\">\n      {SERVERS.map((next) => {\n        const active = next === server;\n        const btnClass = active\n          ? `active btn-dark border-info text-white`\n          : \"btn-dark\";\n\n        const clusterLocation = (location: Location) => {\n          const params = new URLSearchParams(location.search);\n          if (next !== DEFAULT_SERVER) {\n            params.set(\"cluster\", next);\n          } else {\n            params.delete(\"cluster\");\n          }\n          return {\n            ...location,\n            search: params.toString(),\n          };\n        };\n\n        return (\n          <Link\n            key={next}\n            className={`btn text-center col-12 mb-3 ${btnClass}`}\n            to={clusterLocation}\n          >\n            {serverName(next)}\n          </Link>\n        );\n      })}\n    </div>\n      {server === \"custom\" && (\n        <>\n          <h2 className=\"text-center mb-4 mt-4\">Custom Server URL</h2>\n          <CustomClusterInput />\n          <span className=\"text-muted text-center w-100\">\n            Note: This must be a break server url\n          </span>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ClusterModal;\n"]},"metadata":{},"sourceType":"module"}