{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/TxTableRow.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport \"styles/animate.scss\";\nimport { useSelectTransaction } from \"providers/transactions/selected\";\n\nfunction timeElapsed(sentAt, receivedAt = performance.now()) {\n  return parseFloat(((receivedAt - sentAt) / 1000).toFixed(3));\n}\n\nexport function TxTableRow({\n  transaction\n}) {\n  _s();\n\n  var _firstReceived, _firstReceivedAt, _timing, _timing$processed, _timing2, _timing2$confirmed;\n\n  const signature = transaction.details.signature;\n  const selectTransaction = useSelectTransaction();\n  const slotMetrics = useSlo;\n  let targetSlot;\n  let landedSlot;\n  let timing;\n  let firstReceived;\n  let firstReceivedAt;\n\n  if (transaction.status === \"success\") {\n    targetSlot = transaction.slot.target;\n    landedSlot = transaction.slot.landed;\n    timing = transaction.timing;\n\n    if (transaction.received.length > 0) {\n      firstReceived = transaction.received[0];\n      firstReceivedAt = timeElapsed(timing.sentAt, firstReceived.receivedAt);\n    }\n  } else if (transaction.status === \"timeout\") {} else {\n    targetSlot = transaction.pending.targetSlot;\n\n    if (transaction.received.length > 0) {\n      firstReceived = transaction.received[0];\n      firstReceivedAt = timeElapsed(transaction.pending.sentAt, firstReceived.receivedAt);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"debug-row\",\n    onClick: () => selectTransaction(signature),\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-monospace\",\n      children: [signature.slice(0, 10), \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: targetSlot || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: ((_firstReceived = firstReceived) === null || _firstReceived === void 0 ? void 0 : _firstReceived.slot) || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: landedSlot || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: ((_firstReceivedAt = firstReceivedAt) === null || _firstReceivedAt === void 0 ? void 0 : _firstReceivedAt.toFixed(3)) || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: ((_timing = timing) === null || _timing === void 0 ? void 0 : (_timing$processed = _timing.processed) === null || _timing$processed === void 0 ? void 0 : _timing$processed.toFixed(3)) || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: ((_timing2 = timing) === null || _timing2 === void 0 ? void 0 : (_timing2$confirmed = _timing2.confirmed) === null || _timing2$confirmed === void 0 ? void 0 : _timing2$confirmed.toFixed(3)) || \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TxTableRow, \"mvuLmEY2od9z4XX668F0VU5lW5s=\", false, function () {\n  return [useSelectTransaction];\n});\n\n_c = TxTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TxTableRow\");","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/TxTableRow.tsx"],"names":["React","useSelectTransaction","timeElapsed","sentAt","receivedAt","performance","now","parseFloat","toFixed","TxTableRow","transaction","signature","details","selectTransaction","slotMetrics","useSlo","targetSlot","landedSlot","timing","firstReceived","firstReceivedAt","status","slot","target","landed","received","length","pending","slice","processed","confirmed"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport \"styles/animate.scss\";\nimport { TransactionState } from \"providers/transactions\";\nimport { useSelectTransaction } from \"providers/transactions/selected\";\n\ninterface Props {\n  transaction: TransactionState;\n}\n\nfunction timeElapsed(\n  sentAt: number,\n  receivedAt: number = performance.now()\n): number {\n  return parseFloat(((receivedAt - sentAt) / 1000).toFixed(3));\n}\n\nexport function TxTableRow({ transaction }: Props) {\n  const signature = transaction.details.signature;\n  const selectTransaction = useSelectTransaction();\n  const slotMetrics = useSlo\n\n  let targetSlot;\n  let landedSlot;\n  let timing;\n  let firstReceived;\n  let firstReceivedAt;\n  if (transaction.status === \"success\") {\n    targetSlot = transaction.slot.target;\n    landedSlot = transaction.slot.landed;\n    timing = transaction.timing;\n    if (transaction.received.length > 0) {\n      firstReceived = transaction.received[0];\n      firstReceivedAt = timeElapsed(\n        timing.sentAt,\n        firstReceived.receivedAt\n      );\n    }\n  } else if (transaction.status === \"timeout\") {\n  } else {\n    targetSlot = transaction.pending.targetSlot;\n    if (transaction.received.length > 0) {\n      firstReceived = transaction.received[0];\n      firstReceivedAt = timeElapsed(\n        transaction.pending.sentAt,\n        firstReceived.receivedAt\n      );\n    }\n  }\n\n  return (\n    <tr className=\"debug-row\" onClick={() => selectTransaction(signature)}>\n      <td className=\"text-monospace\">{signature.slice(0, 10)}...</td>\n      <td>{targetSlot || \"-\"}</td>\n      <td>{firstReceived?.slot || \"-\"}</td>\n      <td>{landedSlot || \"-\"}</td>\n      <td>{firstReceivedAt?.toFixed(3) || \"-\"}</td>\n      <td>{timing?.processed?.toFixed(3) || \"-\"}</td>\n      <td>{timing?.confirmed?.toFixed(3) || \"-\"}</td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}