{"ast":null,"code":"import { Account } from \"@solana/web3.js\";\nimport Bugsnag from \"@bugsnag/js\";\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function reportError(err, context) {\n  console.error(context, err);\n  Bugsnag.notify(err, e => {\n    e.context = context;\n  });\n}\nexport function isLocalHost() {\n  const hostname = window.location.hostname;\n\n  switch (hostname) {\n    case \"localhost\":\n    case \"127.0.0.1\":\n    case \"0.0.0.0\":\n      return true;\n\n    default:\n      return false;\n  }\n}\nexport const PAYMENT_ACCOUNT = (() => {\n  const paymentKey = window.localStorage.getItem(\"paymentKey\");\n\n  if (paymentKey) {\n    return new Account(Buffer.from(paymentKey, \"base64\"));\n  } else {\n    const paymentAccount = new Account();\n    window.localStorage.setItem(\"paymentKey\", Buffer.from(paymentAccount.secretKey).toString(\"base64\"));\n    return paymentAccount;\n  }\n})();","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/utils/index.ts"],"names":["Account","Bugsnag","sleep","ms","Promise","resolve","setTimeout","reportError","err","context","console","error","notify","e","isLocalHost","hostname","window","location","PAYMENT_ACCOUNT","paymentKey","localStorage","getItem","Buffer","from","paymentAccount","setItem","secretKey","toString"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,OAAO,SAASC,KAAT,CAAeC,EAAf,EAA0C;AAC/C,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD;AAED,OAAO,SAASI,WAAT,CAAqBC,GAArB,EAAiCC,OAAjC,EAAkD;AACvDC,EAAAA,OAAO,CAACC,KAAR,CAAcF,OAAd,EAAuBD,GAAvB;AACAP,EAAAA,OAAO,CAACW,MAAR,CAAeJ,GAAf,EAAqBK,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACJ,OAAF,GAAYA,OAAZ;AACD,GAFD;AAGD;AAED,OAAO,SAASK,WAAT,GAAuB;AAC5B,QAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;;AACA,UAAQA,QAAR;AACE,SAAK,WAAL;AACA,SAAK,WAAL;AACA,SAAK,SAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAO,KAAP;AANJ;AAQD;AAED,OAAO,MAAMG,eAAe,GAAG,CAAC,MAAM;AACpC,QAAMC,UAAU,GAAGH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAnB;;AACA,MAAIF,UAAJ,EAAgB;AACd,WAAO,IAAInB,OAAJ,CAAYsB,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwB,QAAxB,CAAZ,CAAP;AACD,GAFD,MAEO;AACL,UAAMK,cAAc,GAAG,IAAIxB,OAAJ,EAAvB;AACAgB,IAAAA,MAAM,CAACI,YAAP,CAAoBK,OAApB,CACE,YADF,EAEEH,MAAM,CAACC,IAAP,CAAYC,cAAc,CAACE,SAA3B,EAAsCC,QAAtC,CAA+C,QAA/C,CAFF;AAIA,WAAOH,cAAP;AACD;AACF,CAZ8B,GAAxB","sourcesContent":["import { Account } from \"@solana/web3.js\";\nimport Bugsnag from \"@bugsnag/js\";\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function reportError(err: Error, context: string) {\n  console.error(context, err);\n  Bugsnag.notify(err, (e) => {\n    e.context = context;\n  });\n}\n\nexport function isLocalHost() {\n  const hostname = window.location.hostname;\n  switch (hostname) {\n    case \"localhost\":\n    case \"127.0.0.1\":\n    case \"0.0.0.0\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const PAYMENT_ACCOUNT = (() => {\n  const paymentKey = window.localStorage.getItem(\"paymentKey\");\n  if (paymentKey) {\n    return new Account(Buffer.from(paymentKey, \"base64\"));\n  } else {\n    const paymentAccount = new Account();\n    window.localStorage.setItem(\n      \"paymentKey\",\n      Buffer.from(paymentAccount.secretKey).toString(\"base64\")\n    );\n    return paymentAccount;\n  }\n})();\n"]},"metadata":{},"sourceType":"module"}