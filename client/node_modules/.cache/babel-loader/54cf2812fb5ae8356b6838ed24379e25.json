{"ast":null,"code":"import _objectSpread from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useHistory,useRouteMatch,useLocation}from\"react-router-dom\";import{useConfig,useRefreshAccounts,useAccounts,useIsFetching,useClearAccounts,useConnection}from\"providers/api\";import{useSocket}from\"providers/socket\";import{useBlockhash}from\"providers/blockhash\";import{useDispatch,ActionType}from\"providers/transactions\";export var COUNTDOWN_SECS=15;var GameStateContext=React.createContext(undefined);var CountdownContext=React.createContext(undefined);export function GameStateProvider(_ref){var children=_ref.children;var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),countdown=_React$useState2[0],setCountdown=_React$useState2[1];var _React$useState3=React.useState(\"loading\"),_React$useState4=_slicedToArray(_React$useState3,2),gameState=_React$useState4[0],setGameState=_React$useState4[1];var resultsTimerRef=React.useRef();var connection=useConnection();var history=useHistory();var location=useLocation();var blockhash=useBlockhash();var config=useConfig();var accounts=useAccounts();var socket=useSocket();var isResultsRoute=!!useRouteMatch(\"/results\");var isGameRoute=!!useRouteMatch(\"/game\");var isFetching=useIsFetching();React.useEffect(function(){setCountdown(undefined);},[isGameRoute,connection]);React.useEffect(function(){var paymentRequired=(config===null||config===void 0?void 0:config.paymentRequired)===true;var needsPayment=paymentRequired&&!isFetching&&!accounts;var doneLoading=blockhash&&config&&socket&&(needsPayment||accounts);if(!doneLoading){setGameState(\"loading\");}else if(needsPayment){setGameState(\"payment\");}else{setGameState(function(gameState){if(gameState===\"loading\"||gameState===\"payment\"){return isResultsRoute?\"reset\":\"play\";}return gameState;});}},[isResultsRoute,isFetching,blockhash,config,accounts,socket]);React.useEffect(function(){if(countdown!==undefined){if(!resultsTimerRef.current){resultsTimerRef.current=setTimeout(function(){setGameState(\"reset\");history.push(_objectSpread(_objectSpread({},location),{},{pathname:\"/results\"}));},COUNTDOWN_SECS*1000);}}else if(resultsTimerRef.current){clearTimeout(resultsTimerRef.current);resultsTimerRef.current=undefined;}},[countdown,history,location]);return/*#__PURE__*/React.createElement(GameStateContext.Provider,{value:[gameState,setGameState]},/*#__PURE__*/React.createElement(CountdownContext.Provider,{value:[countdown,setCountdown]},children));}export function useGameState(){var context=React.useContext(GameStateContext);if(!context){throw new Error(\"useGameState must be used within a GameStateProvider\");}return context;}export function useCountdown(){var context=React.useContext(CountdownContext);if(!context){throw new Error(\"useCountdown must be used within a GameStateProvider\");}return context;}export function useResetGame(){var _useConfig;var refreshAccounts=useRefreshAccounts();var paymentRequired=(_useConfig=useConfig())===null||_useConfig===void 0?void 0:_useConfig.paymentRequired;var clearAccounts=useClearAccounts();var history=useHistory();var location=useLocation();var dispatch=useDispatch();return React.useCallback(function(){dispatch({type:ActionType.ResetState});history.push(_objectSpread(_objectSpread({},location),{},{pathname:\"/game\"}));if(paymentRequired){clearAccounts();}else{refreshAccounts();}},[refreshAccounts,paymentRequired,clearAccounts,history,location,dispatch]);}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/game.tsx"],"names":["React","useHistory","useRouteMatch","useLocation","useConfig","useRefreshAccounts","useAccounts","useIsFetching","useClearAccounts","useConnection","useSocket","useBlockhash","useDispatch","ActionType","COUNTDOWN_SECS","GameStateContext","createContext","undefined","CountdownContext","GameStateProvider","children","useState","countdown","setCountdown","gameState","setGameState","resultsTimerRef","useRef","connection","history","location","blockhash","config","accounts","socket","isResultsRoute","isGameRoute","isFetching","useEffect","paymentRequired","needsPayment","doneLoading","current","setTimeout","push","pathname","clearTimeout","useGameState","context","useContext","Error","useCountdown","useResetGame","refreshAccounts","clearAccounts","dispatch","useCallback","type","ResetState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport {\n  useConfig,\n  useRefreshAccounts,\n  useAccounts,\n  useIsFetching,\n  useClearAccounts,\n  useConnection,\n} from \"providers/api\";\nimport { useSocket } from \"providers/socket\";\nimport { useBlockhash } from \"providers/blockhash\";\nimport { useDispatch, ActionType } from \"providers/transactions\";\n\nexport const COUNTDOWN_SECS = 15;\n\ntype GameState = \"loading\" | \"payment\" | \"play\" | \"reset\";\ntype SetGameState = React.Dispatch<React.SetStateAction<GameState>>;\nconst GameStateContext = React.createContext<\n  [GameState, SetGameState] | undefined\n>(undefined);\n\ntype SetCountdown = React.Dispatch<React.SetStateAction<number | undefined>>;\nconst CountdownContext = React.createContext<\n  [number | undefined, SetCountdown] | undefined\n>(undefined);\n\ntype Props = { children: React.ReactNode };\nexport function GameStateProvider({ children }: Props) {\n  const [countdown, setCountdown] = React.useState<number>();\n  const [gameState, setGameState] = React.useState<GameState>(\"loading\");\n  const resultsTimerRef = React.useRef<NodeJS.Timer>();\n  const connection = useConnection();\n  const history = useHistory();\n  const location = useLocation();\n  const blockhash = useBlockhash();\n  const config = useConfig();\n  const accounts = useAccounts();\n  const socket = useSocket();\n  const isResultsRoute = !!useRouteMatch(\"/results\");\n  const isGameRoute = !!useRouteMatch(\"/game\");\n  const isFetching = useIsFetching();\n\n  React.useEffect(() => {\n    setCountdown(undefined);\n  }, [isGameRoute, connection]);\n\n  React.useEffect(() => {\n    const paymentRequired = config?.paymentRequired === true;\n    const needsPayment = paymentRequired && !isFetching && !accounts;\n    const doneLoading =\n      blockhash && config && socket && (needsPayment || accounts);\n    if (!doneLoading) {\n      setGameState(\"loading\");\n    } else if (needsPayment) {\n      setGameState(\"payment\");\n    } else {\n      setGameState((gameState) => {\n        if (gameState === \"loading\" || gameState === \"payment\") {\n          return isResultsRoute ? \"reset\" : \"play\";\n        }\n        return gameState;\n      });\n    }\n  }, [isResultsRoute, isFetching, blockhash, config, accounts, socket]);\n\n  React.useEffect(() => {\n    if (countdown !== undefined) {\n      if (!resultsTimerRef.current) {\n        resultsTimerRef.current = setTimeout(() => {\n          setGameState(\"reset\");\n          history.push({ ...location, pathname: \"/results\" });\n        }, COUNTDOWN_SECS * 1000);\n      }\n    } else if (resultsTimerRef.current) {\n      clearTimeout(resultsTimerRef.current);\n      resultsTimerRef.current = undefined;\n    }\n  }, [countdown, history, location]);\n\n  return (\n    <GameStateContext.Provider value={[gameState, setGameState]}>\n      <CountdownContext.Provider value={[countdown, setCountdown]}>\n        {children}\n      </CountdownContext.Provider>\n    </GameStateContext.Provider>\n  );\n}\n\nexport function useGameState() {\n  const context = React.useContext(GameStateContext);\n  if (!context) {\n    throw new Error(`useGameState must be used within a GameStateProvider`);\n  }\n  return context;\n}\n\nexport function useCountdown() {\n  const context = React.useContext(CountdownContext);\n  if (!context) {\n    throw new Error(`useCountdown must be used within a GameStateProvider`);\n  }\n  return context;\n}\n\nexport function useResetGame() {\n  const refreshAccounts = useRefreshAccounts();\n  const paymentRequired = useConfig()?.paymentRequired;\n  const clearAccounts = useClearAccounts();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  return React.useCallback(() => {\n    dispatch({ type: ActionType.ResetState });\n    history.push({ ...location, pathname: \"/game\" });\n    if (paymentRequired) {\n      clearAccounts();\n    } else {\n      refreshAccounts();\n    }\n  }, [\n    refreshAccounts,\n    paymentRequired,\n    clearAccounts,\n    history,\n    location,\n    dispatch,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}