{"ast":null,"code":"import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Connection}from\"@solana/web3.js\";import{useConfig}from\"providers/server/http\";import{BlockhashProvider}from\"./blockhash\";import{BalanceProvider}from\"./balance\";import{jsx as _jsx}from\"react/jsx-runtime\";var StateContext=/*#__PURE__*/React.createContext(undefined);var ConnectionContext=/*#__PURE__*/React.createContext(undefined);export function RpcProvider(_ref){var _useConfig;var children=_ref.children;var state=React.useState();var _state=_slicedToArray(state,2),rpcUrl=_state[0],setRpcUrl=_state[1];// Reset rpc url whenever config is fetched\nvar configRpcUrl=(_useConfig=useConfig())===null||_useConfig===void 0?void 0:_useConfig.rpcUrl;React.useEffect(function(){setRpcUrl(configRpcUrl);},[configRpcUrl,setRpcUrl]);var connection=React.useMemo(function(){if(rpcUrl===undefined)return{};try{var _url=new URL(rpcUrl).toString();return{connection:new Connection(_url)};}catch(err){console.error(err);return{};}},[rpcUrl]);return/*#__PURE__*/_jsx(StateContext.Provider,{value:state,children:/*#__PURE__*/_jsx(ConnectionContext.Provider,{value:connection,children:/*#__PURE__*/_jsx(BlockhashProvider,{children:/*#__PURE__*/_jsx(BalanceProvider,{children:children})})})});}export function useRpcUrlState(){var state=React.useContext(StateContext);if(state===undefined){throw new Error(\"useRpcUrlState must be used within a RpcProvider\");}return state;}export function useConnection(){var state=React.useContext(ConnectionContext);if(state===undefined){throw new Error(\"useConnection must be used within a RpcProvider\");}return state.connection;}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/rpc/index.tsx"],"names":["React","Connection","useConfig","BlockhashProvider","BalanceProvider","StateContext","createContext","undefined","ConnectionContext","RpcProvider","children","state","useState","rpcUrl","setRpcUrl","configRpcUrl","useEffect","connection","useMemo","url","URL","toString","err","console","error","useRpcUrlState","useContext","Error","useConnection"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,OAASC,SAAT,KAA0B,uBAA1B,CACA,OAASC,iBAAT,KAAkC,aAAlC,CACA,OAASC,eAAT,KAAgC,WAAhC,C,2CASA,GAAMC,CAAAA,YAAY,cAAGL,KAAK,CAACM,aAAN,CAAuCC,SAAvC,CAArB,CACA,GAAMC,CAAAA,iBAAiB,cAAGR,KAAK,CAACM,aAAN,CACxBC,SADwB,CAA1B,CAKA,MAAO,SAASE,CAAAA,WAAT,MAAkD,mBAA3BC,CAAAA,QAA2B,MAA3BA,QAA2B,CACvD,GAAMC,CAAAA,KAAK,CAAGX,KAAK,CAACY,QAAN,EAAd,CADuD,0BAE3BD,KAF2B,IAEhDE,MAFgD,WAExCC,SAFwC,WAIvD;AACA,GAAMC,CAAAA,YAAY,aAAGb,SAAS,EAAZ,qCAAG,WAAaW,MAAlC,CACAb,KAAK,CAACgB,SAAN,CAAgB,UAAM,CACpBF,SAAS,CAACC,YAAD,CAAT,CACD,CAFD,CAEG,CAACA,YAAD,CAAeD,SAAf,CAFH,EAIA,GAAMG,CAAAA,UAA2B,CAAGjB,KAAK,CAACkB,OAAN,CAAc,UAAM,CACtD,GAAIL,MAAM,GAAKN,SAAf,CAA0B,MAAO,EAAP,CAC1B,GAAI,CACF,GAAMY,CAAAA,IAAG,CAAG,GAAIC,CAAAA,GAAJ,CAAQP,MAAR,EAAgBQ,QAAhB,EAAZ,CACA,MAAO,CAAEJ,UAAU,CAAE,GAAIhB,CAAAA,UAAJ,CAAekB,IAAf,CAAd,CAAP,CACD,CAAC,MAAOG,GAAP,CAAY,CACZC,OAAO,CAACC,KAAR,CAAcF,GAAd,EACA,MAAO,EAAP,CACD,CACF,CATmC,CASjC,CAACT,MAAD,CATiC,CAApC,CAWA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEF,KAA9B,uBACE,KAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAEM,UAAnC,uBACE,KAAC,iBAAD,wBACE,KAAC,eAAD,WAAkBP,QAAlB,EADF,EADF,EADF,EADF,CASD,CAED,MAAO,SAASe,CAAAA,cAAT,EAAiC,CACtC,GAAMd,CAAAA,KAAK,CAAGX,KAAK,CAAC0B,UAAN,CAAiBrB,YAAjB,CAAd,CACA,GAAIM,KAAK,GAAKJ,SAAd,CAAyB,CACvB,KAAM,IAAIoB,CAAAA,KAAJ,oDAAN,CACD,CACD,MAAOhB,CAAAA,KAAP,CACD,CAED,MAAO,SAASiB,CAAAA,aAAT,EAAiD,CACtD,GAAMjB,CAAAA,KAAK,CAAGX,KAAK,CAAC0B,UAAN,CAAiBlB,iBAAjB,CAAd,CACA,GAAIG,KAAK,GAAKJ,SAAd,CAAyB,CACvB,KAAM,IAAIoB,CAAAA,KAAJ,mDAAN,CACD,CACD,MAAOhB,CAAAA,KAAK,CAACM,UAAb,CACD","sourcesContent":["import React from \"react\";\nimport { Connection } from \"@solana/web3.js\";\nimport { useConfig } from \"providers/server/http\";\nimport { BlockhashProvider } from \"./blockhash\";\nimport { BalanceProvider } from \"./balance\";\n\ntype SetUrl = (url: string) => void;\ntype State = [string | undefined, SetUrl];\n\ntype ConnectionState = {\n  connection?: Connection;\n};\n\nconst StateContext = React.createContext<State | undefined>(undefined);\nconst ConnectionContext = React.createContext<ConnectionState | undefined>(\n  undefined\n);\n\ntype ProviderProps = { children: React.ReactNode };\nexport function RpcProvider({ children }: ProviderProps) {\n  const state = React.useState<string>();\n  const [rpcUrl, setRpcUrl] = state;\n\n  // Reset rpc url whenever config is fetched\n  const configRpcUrl = useConfig()?.rpcUrl;\n  React.useEffect(() => {\n    setRpcUrl(configRpcUrl);\n  }, [configRpcUrl, setRpcUrl]);\n\n  const connection: ConnectionState = React.useMemo(() => {\n    if (rpcUrl === undefined) return {};\n    try {\n      const url = new URL(rpcUrl).toString();\n      return { connection: new Connection(url) };\n    } catch (err) {\n      console.error(err);\n      return {};\n    }\n  }, [rpcUrl]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <ConnectionContext.Provider value={connection}>\n        <BlockhashProvider>\n          <BalanceProvider>{children}</BalanceProvider>\n        </BlockhashProvider>\n      </ConnectionContext.Provider>\n    </StateContext.Provider>\n  );\n}\n\nexport function useRpcUrlState(): State {\n  const state = React.useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(`useRpcUrlState must be used within a RpcProvider`);\n  }\n  return state;\n}\n\nexport function useConnection(): Connection | undefined {\n  const state = React.useContext(ConnectionContext);\n  if (state === undefined) {\n    throw new Error(`useConnection must be used within a RpcProvider`);\n  }\n  return state.connection;\n}\n"]},"metadata":{},"sourceType":"module"}