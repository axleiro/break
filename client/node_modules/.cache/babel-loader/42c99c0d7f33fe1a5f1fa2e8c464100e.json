{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/providers/worker.tsx\";\nimport * as React from \"react\";\nimport { CreateTransactionRPC } from \"workers/create-transaction-rpc\";\nconst StateContext = React.createContext(undefined);\nconst workerRPC = new CreateTransactionRPC();\nexport function WorkerProvider({\n  children\n}) {\n  const [state, setState] = React.useState(\"loading\");\n  React.useEffect(() => {\n    workerRPC.setReadyListener(() => {\n      setState(\"ready\");\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useWorkerState() {\n  const state = React.useContext(StateContext);\n\n  if (!state) {\n    throw new Error(`useWorkerState must be used within a WorkerProvider`);\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/worker.tsx"],"names":["React","CreateTransactionRPC","StateContext","createContext","undefined","workerRPC","WorkerProvider","children","state","setState","useState","useEffect","setReadyListener","useWorkerState","useContext","Error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,gCAArC;AAGA,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAN,CAAuCC,SAAvC,CAArB;AAEA,MAAMC,SAAS,GAAG,IAAIJ,oBAAJ,EAAlB;AAGA,OAAO,SAASK,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqD;AAC1D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAsB,SAAtB,CAA1B;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClBN,IAAAA,SAAS,CAACO,gBAAV,CAA2B,MAAM;AAC/BH,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAFD;AAGH,GAJD,EAIG,EAJH;AAMA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADF;AAKD;AAED,OAAO,SAASM,cAAT,GAA0B;AAC/B,QAAML,KAAK,GAAGR,KAAK,CAACc,UAAN,CAAiBZ,YAAjB,CAAd;;AACA,MAAI,CAACM,KAAL,EAAY;AACV,UAAM,IAAIO,KAAJ,CAAW,qDAAX,CAAN;AACD;;AAED,SAAOP,KAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { CreateTransactionRPC } from \"workers/create-transaction-rpc\";\n\ntype State = \"loading\" | \"ready\";\nconst StateContext = React.createContext<State | undefined>(undefined);\n\nconst workerRPC = new CreateTransactionRPC();\n\ntype ProviderProps = { children: React.ReactNode };\nexport function WorkerProvider({ children }: ProviderProps) {\n  const [state, setState] = React.useState<State>(\"loading\");\n\n  React.useEffect(() => {\n      workerRPC.setReadyListener(() => {\n        setState(\"ready\");\n      })\n  }, []);\n\n  return (\n    <StateContext.Provider value={state}>\n        {children}\n    </StateContext.Provider>\n  );\n}\n\nexport function useWorkerState() {\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(`useWorkerState must be used within a WorkerProvider`);\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}