{"ast":null,"code":"import{Account}from\"@solana/web3.js\";import Bugsnag from\"@bugsnag/js\";export function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});}export function reportError(err,context){console.error(context,err);Bugsnag.notify(err,function(e){e.context=context;});}export function isLocalHost(){var hostname=window.location.hostname;switch(hostname){case\"localhost\":case\"127.0.0.1\":case\"0.0.0.0\":return true;default:return false;}}export var PAYMENT_ACCOUNT=function(){var paymentKey=window.localStorage.getItem(\"paymentKey\");if(paymentKey){return new Account(Buffer.from(paymentKey,\"base64\"));}else{var paymentAccount=new Account();window.localStorage.setItem(\"paymentKey\",Buffer.from(paymentAccount.secretKey).toString(\"base64\"));return paymentAccount;}}();","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/utils/index.ts"],"names":["Account","Bugsnag","sleep","ms","Promise","resolve","setTimeout","reportError","err","context","console","error","notify","e","isLocalHost","hostname","window","location","PAYMENT_ACCOUNT","paymentKey","localStorage","getItem","Buffer","from","paymentAccount","setItem","secretKey","toString"],"mappings":"AAAA,OAASA,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,CAEA,MAAO,SAASC,CAAAA,KAAT,CAAeC,EAAf,CAA0C,CAC/C,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAUF,EAAV,CAAvB,EAAZ,CAAP,CACD,CAED,MAAO,SAASI,CAAAA,WAAT,CAAqBC,GAArB,CAAiCC,OAAjC,CAAkD,CACvDC,OAAO,CAACC,KAAR,CAAcF,OAAd,CAAuBD,GAAvB,EACAP,OAAO,CAACW,MAAR,CAAeJ,GAAf,CAAoB,SAACK,CAAD,CAAO,CACzBA,CAAC,CAACJ,OAAF,CAAYA,OAAZ,CACD,CAFD,EAGD,CAED,MAAO,SAASK,CAAAA,WAAT,EAAuB,CAC5B,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC,CACA,OAAQA,QAAR,EACE,IAAK,WAAL,CACA,IAAK,WAAL,CACA,IAAK,SAAL,CACE,MAAO,KAAP,CACF,QACE,MAAO,MAAP,CANJ,CAQD,CAED,MAAO,IAAMG,CAAAA,eAAe,CAAI,UAAM,CACpC,GAAMC,CAAAA,UAAU,CAAGH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAnB,CACA,GAAIF,UAAJ,CAAgB,CACd,MAAO,IAAInB,CAAAA,OAAJ,CAAYsB,MAAM,CAACC,IAAP,CAAYJ,UAAZ,CAAwB,QAAxB,CAAZ,CAAP,CACD,CAFD,IAEO,CACL,GAAMK,CAAAA,cAAc,CAAG,GAAIxB,CAAAA,OAAJ,EAAvB,CACAgB,MAAM,CAACI,YAAP,CAAoBK,OAApB,CACE,YADF,CAEEH,MAAM,CAACC,IAAP,CAAYC,cAAc,CAACE,SAA3B,EAAsCC,QAAtC,CAA+C,QAA/C,CAFF,EAIA,MAAOH,CAAAA,cAAP,CACD,CACF,CAZ8B,EAAxB","sourcesContent":["import { Account } from \"@solana/web3.js\";\nimport Bugsnag from \"@bugsnag/js\";\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function reportError(err: Error, context: string) {\n  console.error(context, err);\n  Bugsnag.notify(err, (e) => {\n    e.context = context;\n  });\n}\n\nexport function isLocalHost() {\n  const hostname = window.location.hostname;\n  switch (hostname) {\n    case \"localhost\":\n    case \"127.0.0.1\":\n    case \"0.0.0.0\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const PAYMENT_ACCOUNT = (() => {\n  const paymentKey = window.localStorage.getItem(\"paymentKey\");\n  if (paymentKey) {\n    return new Account(Buffer.from(paymentKey, \"base64\"));\n  } else {\n    const paymentAccount = new Account();\n    window.localStorage.setItem(\n      \"paymentKey\",\n      Buffer.from(paymentAccount.secretKey).toString(\"base64\")\n    );\n    return paymentAccount;\n  }\n})();\n"]},"metadata":{},"sourceType":"module"}