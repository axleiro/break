{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/TxTableRow.tsx\";\nimport * as React from \"react\";\nimport \"styles/animate.scss\";\nimport { useSelectTransaction } from \"providers/transactions/selected\";\nexport function TxTableRow({\n  transaction\n}) {\n  var _timing, _timing2, _timing3;\n\n  const signature = transaction.details.signature;\n  const selectTransaction = useSelectTransaction();\n  let targetSlot;\n  let landedSlot;\n  let timing;\n\n  if (transaction.status === \"success\") {\n    targetSlot = transaction.slot.target;\n    timing = transaction.timing;\n  } else if (transaction.status === \"timeout\") {} else {\n    targetSlot = transaction.pending.targetSlot;\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    onClick: () => selectTransaction(signature),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, targetSlot || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, landedSlot || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, ((_timing = timing) === null || _timing === void 0 ? void 0 : _timing.recent) || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, ((_timing2 = timing) === null || _timing2 === void 0 ? void 0 : _timing2.single) || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, ((_timing3 = timing) === null || _timing3 === void 0 ? void 0 : _timing3.singleGossip) || \"-\"));\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/TxTableRow.tsx"],"names":["React","useSelectTransaction","TxTableRow","transaction","signature","details","selectTransaction","targetSlot","landedSlot","timing","status","slot","target","pending","recent","single","singleGossip"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,qBAAP;AAEA,SAASC,oBAAT,QAAqC,iCAArC;AAMA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4C;AAAA;;AACnD,QAAMC,SAAS,GAAGD,WAAW,CAACE,OAAZ,CAAoBD,SAAtC;AACE,QAAME,iBAAiB,GAAGL,oBAAoB,EAA9C;AAEA,MAAIM,UAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,MAAJ;;AACA,MAAIN,WAAW,CAACO,MAAZ,KAAuB,SAA3B,EAAsC;AACpCH,IAAAA,UAAU,GAAGJ,WAAW,CAACQ,IAAZ,CAAiBC,MAA9B;AACAH,IAAAA,MAAM,GAAGN,WAAW,CAACM,MAArB;AACD,GAHD,MAGO,IAAIN,WAAW,CAACO,MAAZ,KAAuB,SAA3B,EAAsC,CAE5C,CAFM,MAEA;AACLH,IAAAA,UAAU,GAAGJ,WAAW,CAACU,OAAZ,CAAoBN,UAAjC;AACD;;AAED,sBACE;AAAI,IAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACF,SAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,UAAU,IAAI,GAAnB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,UAAU,IAAI,GAAnB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,YAAAC,MAAM,UAAN,0CAAQK,MAAR,KAAkB,GAAvB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,aAAAL,MAAM,UAAN,4CAAQM,MAAR,KAAkB,GAAvB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,aAAAN,MAAM,UAAN,4CAAQO,YAAR,KAAwB,GAA7B,CALJ,CADF;AASD","sourcesContent":["import * as React from \"react\";\n\nimport \"styles/animate.scss\";\nimport { TransactionState } from \"providers/transactions\";\nimport { useSelectTransaction } from \"providers/transactions/selected\";\n\ninterface Props {\n  transaction: TransactionState;\n}\n\nexport function TxTableRow({ transaction }: Props) {\nconst signature = transaction.details.signature;\n  const selectTransaction = useSelectTransaction();\n\n  let targetSlot;\n  let landedSlot;\n  let timing;\n  if (transaction.status === \"success\") {\n    targetSlot = transaction.slot.target;\n    timing = transaction.timing;\n  } else if (transaction.status === \"timeout\") {\n\n  } else {\n    targetSlot = transaction.pending.targetSlot;\n  }\n\n  return (\n    <tr onClick={() => selectTransaction(signature)}>\n        <td>{targetSlot || \"-\"}</td>\n        <td>{landedSlot || \"-\"}</td>\n        <td>{timing?.recent || \"-\"}</td>\n        <td>{timing?.single || \"-\"}</td>\n        <td>{timing?.singleGossip || \"-\"}</td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}