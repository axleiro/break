{"ast":null,"code":"import _slicedToArray from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport nacl from 'tweetnacl';\nimport BN from 'bn.js';\nimport { sha256 } from 'crypto-hash';\nimport fetch from 'node-fetch';\nimport jayson from 'jayson/lib/client/browser';\nimport { coerce, instance, string, tuple, literal, unknown, union, type, optional, number, boolean, record, nullable, array, create, object, assert as assert$3 } from 'superstruct';\nimport { Client } from 'rpc-websockets';\nimport secp256k1 from 'secp256k1';\nimport { keccak_256 } from 'js-sha3';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function get() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nvar byteLength_1 = byteLength;\nvar toByteArray_1 = toByteArray;\nvar fromByteArray_1 = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar base64Js = {\n  byteLength: byteLength_1,\n  toByteArray: toByteArray_1,\n  fromByteArray: fromByteArray_1\n};\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nvar read = function read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar write = function write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nvar ieee754 = {\n  read: read,\n  write: write\n};\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nvar buffer = createCommonjsModule(function (module, exports) {\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? // eslint-disable-line dot-notation\n  Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n  : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var _i = 0; _i < length; _i += 1) {\n      buf[_i] = array[_i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      var copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n\n    return fromArrayLike(arrayView);\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var _len = checked(obj.length) | 0;\n\n      var buf = createBuffer(_len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, _len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var _i2 = 0, _len2 = Math.min(x, y); _i2 < _len2; ++_i2) {\n      if (a[_i2] !== b[_i2]) {\n        x = a[_i2];\n        y = b[_i2];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n          buf.copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      } else {\n        buf.copy(buffer, pos);\n      }\n\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var _i3 = 0; _i3 < len; _i3 += 2) {\n      swap(this, _i3, _i3 + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var _i4 = 0; _i4 < len; _i4 += 4) {\n      swap(this, _i4, _i4 + 3);\n      swap(this, _i4 + 1, _i4 + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var _i5 = 0; _i5 < len; _i5 += 8) {\n      swap(this, _i5, _i5 + 7);\n      swap(this, _i5 + 1, _i5 + 6);\n      swap(this, _i5 + 2, _i5 + 5);\n      swap(this, _i5 + 3, _i5 + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var _i6 = 0; _i6 < len; ++_i6) {\n      if (thisCopy[_i6] !== targetCopy[_i6]) {\n        x = thisCopy[_i6];\n        y = targetCopy[_i6];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return asciiWrite(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64Js.fromByteArray(buf);\n    } else {\n      return base64Js.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte = void 0,\n            thirdByte = void 0,\n            fourthByte = void 0,\n            tempCodePoint = void 0;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i7 = start; _i7 < end; ++_i7) {\n      ret += String.fromCharCode(buf[_i7] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i8 = start; _i8 < end; ++_i8) {\n      ret += String.fromCharCode(buf[_i8]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var _i9 = start; _i9 < end; ++_i9) {\n      out += hexSliceLookupTable[buf[_i9]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n    for (var _i10 = 0; _i10 < bytes.length - 1; _i10 += 2) {\n      res += String.fromCharCode(bytes[_i10] + bytes[_i10 + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);\n    var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n  });\n  Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  });\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow\n\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));\n  });\n  Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = (first << 24) + // Overflow\n    this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);\n  });\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n  }\n\n  function wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n  Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n  Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var _code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && _code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = _code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var _len3 = bytes.length;\n\n      if (_len3 === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % _len3];\n      }\n    }\n\n    return this;\n  }; // CUSTOM ERRORS\n  // =============\n  // Simplified versions from Node, changed for Buffer-only usage\n\n\n  var errors = {};\n\n  function E(sym, getMessage, Base) {\n    errors[sym] = /*#__PURE__*/function (_Base) {\n      _inherits(NodeError, _Base);\n\n      var _super = _createSuper(NodeError);\n\n      function NodeError() {\n        var _this;\n\n        _classCallCheck(this, NodeError);\n\n        _this = _super.call(this);\n        Object.defineProperty(_assertThisInitialized(_this), 'message', {\n          value: getMessage.apply(_assertThisInitialized(_this), arguments),\n          writable: true,\n          configurable: true\n        }); // Add the error code to the name to include it in the stack trace.\n\n        _this.name = \"\".concat(_this.name, \" [\").concat(sym, \"]\"); // Access the stack to generate the error message including the error code\n        // from the name.\n\n        _this.stack; // eslint-disable-line no-unused-expressions\n        // Reset the name to the actual name.\n\n        delete _this.name;\n        return _this;\n      }\n\n      _createClass(NodeError, [{\n        key: \"code\",\n        get: function get() {\n          return sym;\n        },\n        set: function set(value) {\n          Object.defineProperty(this, 'code', {\n            configurable: true,\n            enumerable: true,\n            value: value,\n            writable: true\n          });\n        }\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"\".concat(this.name, \" [\").concat(sym, \"]: \").concat(this.message);\n        }\n      }]);\n\n      return NodeError;\n    }(Base);\n  }\n\n  E('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n    if (name) {\n      return \"\".concat(name, \" is outside of buffer bounds\");\n    }\n\n    return 'Attempt to access memory outside buffer bounds';\n  }, RangeError);\n  E('ERR_INVALID_ARG_TYPE', function (name, actual) {\n    return \"The \\\"\".concat(name, \"\\\" argument must be of type number. Received type \").concat(typeof actual);\n  }, TypeError);\n  E('ERR_OUT_OF_RANGE', function (str, range, input) {\n    var msg = \"The value of \\\"\".concat(str, \"\\\" is out of range.\");\n    var received = input;\n\n    if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n\n      if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n\n      received += 'n';\n    }\n\n    msg += \" It must be \".concat(range, \". Received \").concat(received);\n    return msg;\n  }, RangeError);\n\n  function addNumericalSeparator(val) {\n    var res = '';\n    var i = val.length;\n    var start = val[0] === '-' ? 1 : 0;\n\n    for (; i >= start + 4; i -= 3) {\n      res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n    }\n\n    return \"\".concat(val.slice(0, i)).concat(res);\n  } // CHECK FUNCTIONS\n  // ===============\n\n\n  function checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, 'offset');\n\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n      boundsError(offset, buf.length - (byteLength + 1));\n    }\n  }\n\n  function checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n      var n = typeof min === 'bigint' ? 'n' : '';\n      var range;\n\n      if (byteLength > 3) {\n        if (min === 0 || min === BigInt(0)) {\n          range = \">= 0\".concat(n, \" and < 2\").concat(n, \" ** \").concat((byteLength + 1) * 8).concat(n);\n        } else {\n          range = \">= -(2\".concat(n, \" ** \").concat((byteLength + 1) * 8 - 1).concat(n, \") and < 2 ** \") + \"\".concat((byteLength + 1) * 8 - 1).concat(n);\n        }\n      } else {\n        range = \">= \".concat(min).concat(n, \" and <= \").concat(max).concat(n);\n      }\n\n      throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n    }\n\n    checkBounds(buf, offset, byteLength);\n  }\n\n  function validateNumber(value, name) {\n    if (typeof value !== 'number') {\n      throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n    }\n  }\n\n  function boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n      validateNumber(value, type);\n      throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n    }\n\n    if (length < 0) {\n      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', \">= \".concat(type ? 1 : 0, \" and <= \").concat(length), value);\n  } // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var _i11 = 0; _i11 < length; ++_i11) {\n      codePoint = string.charCodeAt(_i11); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (_i11 + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var _i12 = 0; _i12 < str.length; ++_i12) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(_i12) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var _i13 = 0; _i13 < str.length; ++_i13) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(_i13);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64Js.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var _i14 = 0; _i14 < 16; ++_i14) {\n      var i16 = _i14 * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[_i14] + alphabet[j];\n      }\n    }\n\n    return table;\n  }(); // Return not function with Error if BigInt not supported\n\n\n  function defineBigIntMethod(fn) {\n    return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n  }\n\n  function BufferBigIntNotDefined() {\n    throw new Error('BigInt not supported');\n  }\n}); //      \n\nvar toBuffer = function toBuffer(arr) {\n  if (arr instanceof buffer.Buffer) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return buffer.Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return buffer.Buffer.from(arr);\n  }\n};\n/* eslint-disable node/no-deprecated-api */\n\n\nvar safeBuffer = createCommonjsModule(function (module, exports) {\n  var Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  } // Copy static methods from Buffer\n\n\n  copyProps(Buffer, SafeBuffer);\n\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n\n    return Buffer(arg, encodingOrOffset, length);\n  };\n\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    var buf = Buffer(size);\n\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n\n    return buf;\n  };\n\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    return Buffer(size);\n  };\n\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    return buffer.SlowBuffer(size);\n  };\n}); // base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar Buffer = safeBuffer.Buffer;\n\nvar baseX = function base(ALPHABET) {\n  var ALPHABET_MAP = {};\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0); // pre-compute lookup table\n\n  for (var z = 0; z < ALPHABET.length; z++) {\n    var x = ALPHABET.charAt(z);\n    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n    ALPHABET_MAP[x] = z;\n  }\n\n  function encode(source) {\n    if (source.length === 0) return '';\n    var digits = [0];\n\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % BASE;\n        carry = carry / BASE | 0;\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE);\n        carry = carry / BASE | 0;\n      }\n    }\n\n    var string = ''; // deal with leading zeros\n\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n      string += LEADER;\n    } // convert digits to a string\n\n\n    for (var q = digits.length - 1; q >= 0; --q) {\n      string += ALPHABET[digits[q]];\n    }\n\n    return string;\n  }\n\n  function decodeUnsafe(string) {\n    if (typeof string !== 'string') throw new TypeError('Expected String');\n    if (string.length === 0) return Buffer.allocUnsafe(0);\n    var bytes = [0];\n\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]];\n      if (value === undefined) return;\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE;\n        bytes[j] = carry & 0xff;\n        carry >>= 8;\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff);\n        carry >>= 8;\n      }\n    } // deal with leading zeros\n\n\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0);\n    }\n\n    return Buffer.from(bytes.reverse());\n  }\n\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) return buffer;\n    throw new Error('Non-base' + BASE + ' character');\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n};\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar bs58 = baseX(ALPHABET);\nvar naclLowLevel = nacl.lowlevel; // This type exists to workaround an esdoc parse error\n\n/**\n * Maximum length of derived pubkey seed\n */\n\nvar MAX_SEED_LENGTH = 32;\n/**\n * A public key\n */\n\nvar PublicKey = /*#__PURE__*/function () {\n  /**\n   * Create a new PublicKey object\n   */\n  function PublicKey(value) {\n    _classCallCheck(this, PublicKey);\n\n    _defineProperty(this, \"_bn\", void 0);\n\n    if (typeof value === 'string') {\n      // assume base 58 encoding by default\n      var decoded = bs58.decode(value);\n\n      if (decoded.length != 32) {\n        throw new Error(\"Invalid public key input\");\n      }\n\n      this._bn = new BN(decoded);\n    } else {\n      this._bn = new BN(value);\n    }\n\n    if (this._bn.byteLength() > 32) {\n      throw new Error(\"Invalid public key input\");\n    }\n  }\n  /**\n   * Checks if two publicKeys are equal\n   */\n\n\n  _createClass(PublicKey, [{\n    key: \"equals\",\n    value: function equals(publicKey) {\n      return this._bn.eq(publicKey._bn);\n    }\n    /**\n     * Return the base-58 representation of the public key\n     */\n\n  }, {\n    key: \"toBase58\",\n    value: function toBase58() {\n      return bs58.encode(this.toBuffer());\n    }\n    /**\n     * Return the Buffer representation of the public key\n     */\n\n  }, {\n    key: \"toBuffer\",\n    value: function toBuffer() {\n      var b = this._bn.toArrayLike(buffer.Buffer);\n\n      if (b.length === 32) {\n        return b;\n      }\n\n      var zeroPad = buffer.Buffer.alloc(32);\n      b.copy(zeroPad, 32 - b.length);\n      return zeroPad;\n    }\n    /**\n     * Returns a string representation of the public key\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.toBase58();\n    }\n    /**\n     * Derive a public key from another key, a seed, and a program ID.\n     */\n\n  }], [{\n    key: \"createWithSeed\",\n    value: function () {\n      var _createWithSeed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fromPublicKey, seed, programId) {\n        var buffer$1, hash;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                buffer$1 = buffer.Buffer.concat([fromPublicKey.toBuffer(), buffer.Buffer.from(seed), programId.toBuffer()]);\n                _context.next = 3;\n                return sha256(new Uint8Array(buffer$1));\n\n              case 3:\n                hash = _context.sent;\n                return _context.abrupt(\"return\", new PublicKey(buffer.Buffer.from(hash, 'hex')));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function createWithSeed(_x, _x2, _x3) {\n        return _createWithSeed.apply(this, arguments);\n      }\n\n      return createWithSeed;\n    }()\n    /**\n     * Derive a program address from seeds and a program ID.\n     */\n\n  }, {\n    key: \"createProgramAddress\",\n    value: function () {\n      var _createProgramAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(seeds, programId) {\n        var buffer$1, hash, publicKeyBytes;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                buffer$1 = buffer.Buffer.alloc(0);\n                seeds.forEach(function (seed) {\n                  if (seed.length > MAX_SEED_LENGTH) {\n                    throw new Error(\"Max seed length exceeded\");\n                  }\n\n                  buffer$1 = buffer.Buffer.concat([buffer$1, buffer.Buffer.from(seed)]);\n                });\n                buffer$1 = buffer.Buffer.concat([buffer$1, programId.toBuffer(), buffer.Buffer.from('ProgramDerivedAddress')]);\n                _context2.next = 5;\n                return sha256(new Uint8Array(buffer$1));\n\n              case 5:\n                hash = _context2.sent;\n                publicKeyBytes = new BN(hash, 16).toArray(null, 32);\n\n                if (!is_on_curve(publicKeyBytes)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid seeds, address must fall off the curve\");\n\n              case 9:\n                return _context2.abrupt(\"return\", new PublicKey(publicKeyBytes));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function createProgramAddress(_x4, _x5) {\n        return _createProgramAddress.apply(this, arguments);\n      }\n\n      return createProgramAddress;\n    }()\n    /**\n     * Find a valid program address\n     *\n     * Valid program addresses must fall off the ed25519 curve.  This function\n     * iterates a nonce until it finds one that when combined with the seeds\n     * results in a valid program address.\n     */\n\n  }, {\n    key: \"findProgramAddress\",\n    value: function () {\n      var _findProgramAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(seeds, programId) {\n        var nonce, address, seedsWithNonce;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                nonce = 255;\n\n              case 1:\n                if (!(nonce != 0)) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.prev = 2;\n                seedsWithNonce = seeds.concat(buffer.Buffer.from([nonce]));\n                _context3.next = 6;\n                return this.createProgramAddress(seedsWithNonce, programId);\n\n              case 6:\n                address = _context3.sent;\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                nonce--;\n                return _context3.abrupt(\"continue\", 1);\n\n              case 13:\n                return _context3.abrupt(\"return\", [address, nonce]);\n\n              case 16:\n                throw new Error(\"Unable to find a viable program address nonce\");\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function findProgramAddress(_x6, _x7) {\n        return _findProgramAddress.apply(this, arguments);\n      }\n\n      return findProgramAddress;\n    }()\n  }]);\n\n  return PublicKey;\n}(); // Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\n\n\nfunction is_on_curve(p) {\n  var r = [naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf()];\n  var t = naclLowLevel.gf(),\n      chk = naclLowLevel.gf(),\n      num = naclLowLevel.gf(),\n      den = naclLowLevel.gf(),\n      den2 = naclLowLevel.gf(),\n      den4 = naclLowLevel.gf(),\n      den6 = naclLowLevel.gf();\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\n\nvar gf1 = naclLowLevel.gf([1]);\nvar I = naclLowLevel.gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n/**\n * An account key pair (public and secret keys).\n */\n\n\nvar Account = /*#__PURE__*/function () {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  function Account(secretKey) {\n    _classCallCheck(this, Account);\n\n    _defineProperty(this, \"_keypair\", void 0);\n\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * The public key for this account\n   */\n\n\n  _createClass(Account, [{\n    key: \"publicKey\",\n    get: function get() {\n      return new PublicKey(this._keypair.publicKey);\n    }\n    /**\n     * The **unencrypted** secret key for this account\n     */\n\n  }, {\n    key: \"secretKey\",\n    get: function get() {\n      return this._keypair.secretKey;\n    }\n  }]);\n\n  return Account;\n}(); //      \n\n\nvar BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\nvar global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits;\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n\n  return keys;\n};\n\nvar pSlice = Array.prototype.slice;\n\nvar _functionsHaveNames;\n\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n\n  return _functionsHaveNames = function () {\n    return function foo() {}.name === 'foo';\n  }();\n}\n\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isView(arrbuf) {\n  if (buffer.isBuffer(arrbuf)) {\n    return false;\n  }\n\n  if (typeof global$1.ArrayBuffer !== 'function') {\n    return false;\n  }\n\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n\n  if (!arrbuf) {\n    return false;\n  }\n\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n\n  return false;\n} // 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n} // 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/; // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\n\nassert.AssertionError = AssertionError;\n\nfunction AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n\n    if (err.stack) {\n      var out = err.stack; // try to strip useless frames\n\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n} // assert.AssertionError instanceof Error\n\n\ninherits$1(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction inspect$1(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return inspect(something);\n  }\n\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\n\nfunction getMessage(self) {\n  return truncate(inspect$1(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect$1(self.expected), 128);\n} // At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n} // EXTENSION! allows for well behaved errors defined elsewhere.\n\n\nassert.fail = fail; // 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\n\nassert.ok = ok; // 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = equal;\n\nfunction equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n} // 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\n\nassert.notEqual = notEqual;\n\nfunction notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n} // 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\n\nassert.deepEqual = deepEqual;\n\nfunction deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\n\nassert.deepStrictEqual = deepStrictEqual;\n\nfunction deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (buffer.isBuffer(actual) && buffer.isBuffer(expected)) {\n    return compare(actual, expected) === 0; // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime(); // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase; // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') && (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected; // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0; // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (buffer.isBuffer(actual) !== buffer.isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {\n      actual: [],\n      expected: []\n    };\n    var actualIndex = memos.actual.indexOf(actual);\n\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false; // if one is a primitive, the other must be same\n\n  if (isPrimitive(a) || isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (ka.length !== kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n\n  return true;\n} // 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\n\nassert.notDeepEqual = notDeepEqual;\n\nfunction notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n} // 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\n\nassert.strictEqual = strictEqual;\n\nfunction strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n} // 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\nassert.notStrictEqual = notStrictEqual;\n\nfunction notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {// Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n} // 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\n\nassert.throws = throws;\n\nfunction throws(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(true, block, error, message);\n} // EXTENSION! This is annoying to write outside this module.\n\n\nassert.doesNotThrow = doesNotThrow;\n\nfunction doesNotThrow(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\n\nfunction ifError(err) {\n  if (err) throw err;\n}\n\nvar assert$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': assert,\n  AssertionError: AssertionError,\n  fail: fail,\n  ok: ok,\n  assert: ok,\n  equal: equal,\n  notEqual: notEqual,\n  deepEqual: deepEqual,\n  deepStrictEqual: deepStrictEqual,\n  notDeepEqual: notDeepEqual,\n  notDeepStrictEqual: notDeepStrictEqual,\n  strictEqual: strictEqual,\n  notStrictEqual: notStrictEqual,\n  throws: throws,\n  doesNotThrow: doesNotThrow,\n  ifError: ifError\n});\nvar assert$2 = /*@__PURE__*/getAugmentedNamespace(assert$1);\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\n\nvar Layout = /*#__PURE__*/function () {\n  function Layout(span, property) {\n    _classCallCheck(this, Layout);\n\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n\n\n    this.span = span;\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n\n    this.property = property;\n  }\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n\n\n  _createClass(Layout, [{\n    key: \"makeDestinationObject\",\n    value: function makeDestinationObject() {\n      return {};\n    }\n    /**\n     * Decode from a Buffer into an JavaScript value.\n     *\n     * @param {Buffer} b - the buffer from which encoded data is read.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {(Number|Array|Object)} - the value of the decoded data.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Encode a JavaScript value into a Buffer.\n     *\n     * @param {(Number|Array|Object)} src - the value to be encoded into\n     * the buffer.  The type accepted depends on the (sub-)type of {@link\n     * Layout}.\n     *\n     * @param {Buffer} b - the buffer into which encoded data will be\n     * written.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {Number} - the number of bytes encoded, including the\n     * space skipped for internal padding, but excluding data such as\n     * {@link Sequence#count|lengths} when stored {@link\n     * ExternalLayout|externally}.  This is the adjustment to `offset`\n     * producing the offset where data for the next layout would be\n     * written.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Buffer} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n\n  }, {\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 > this.span) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n\n  }, {\n    key: \"replicate\",\n    value: function replicate(property) {\n      var rv = Object.create(this.constructor.prototype);\n      Object.assign(rv, this);\n      rv.property = property;\n      return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      return undefined;\n    }\n  }]);\n\n  return Layout;\n}();\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\n\n\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n\n  return name;\n}\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\n\n\nvar ExternalLayout = /*#__PURE__*/function (_Layout) {\n  _inherits(ExternalLayout, _Layout);\n\n  var _super2 = _createSuper(ExternalLayout);\n\n  function ExternalLayout() {\n    _classCallCheck(this, ExternalLayout);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ExternalLayout, [{\n    key: \"isCount\",\n    value:\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    function isCount() {\n      throw new Error('ExternalLayout is abstract');\n    }\n  }]);\n\n  return ExternalLayout;\n}(Layout);\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\n\n\nvar OffsetLayout = /*#__PURE__*/function (_ExternalLayout) {\n  _inherits(OffsetLayout, _ExternalLayout);\n\n  var _super3 = _createSuper(OffsetLayout);\n\n  function OffsetLayout(layout, offset, property) {\n    var _this2;\n\n    _classCallCheck(this, OffsetLayout);\n\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    _this2 = _super3.call(this, layout.span, property || layout.property);\n    /** The subordinated layout. */\n\n    _this2.layout = layout;\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n\n    _this2.offset = offset;\n    return _this2;\n  }\n  /** @override */\n\n\n  _createClass(OffsetLayout, [{\n    key: \"isCount\",\n    value: function isCount() {\n      return this.layout instanceof UInt || this.layout instanceof UIntBE;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.encode(src, b, offset + this.offset);\n    }\n  }]);\n\n  return OffsetLayout;\n}(ExternalLayout);\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UInt = /*#__PURE__*/function (_Layout2) {\n  _inherits(UInt, _Layout2);\n\n  var _super4 = _createSuper(UInt);\n\n  function UInt(span, property) {\n    var _this3;\n\n    _classCallCheck(this, UInt);\n\n    _this3 = _super4.call(this, span, property);\n\n    if (6 < _this3.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this3;\n  }\n  /** @override */\n\n\n  _createClass(UInt, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntLE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntLE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UInt;\n}(Layout);\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UIntBE = /*#__PURE__*/function (_Layout3) {\n  _inherits(UIntBE, _Layout3);\n\n  var _super5 = _createSuper(UIntBE);\n\n  function UIntBE(span, property) {\n    var _this4;\n\n    _classCallCheck(this, UIntBE);\n\n    _this4 = _super5.call(this, span, property);\n\n    if (6 < _this4.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this4;\n  }\n  /** @override */\n\n\n  _createClass(UIntBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntBE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntBE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UIntBE;\n}(Layout);\n\nvar V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\n\nfunction divmodInt64(src) {\n  var hi32 = Math.floor(src / V2E32);\n  var lo32 = src - hi32 * V2E32; // assert.equal(roundedInt64(hi32, lo32), src);\n  // assert(0 <= lo32);\n\n  return {\n    hi32: hi32,\n    lo32: lo32\n  };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\n\n\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearUInt64 = /*#__PURE__*/function (_Layout4) {\n  _inherits(NearUInt64, _Layout4);\n\n  var _super6 = _createSuper(NearUInt64);\n\n  function NearUInt64(property) {\n    _classCallCheck(this, NearUInt64);\n\n    return _super6.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearUInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readUInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeUInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearUInt64;\n}(Layout);\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearInt64 = /*#__PURE__*/function (_Layout5) {\n  _inherits(NearInt64, _Layout5);\n\n  var _super7 = _createSuper(NearInt64);\n\n  function NearInt64(property) {\n    _classCallCheck(this, NearInt64);\n\n    return _super7.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearInt64;\n}(Layout);\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Sequence = /*#__PURE__*/function (_Layout6) {\n  _inherits(Sequence, _Layout6);\n\n  var _super8 = _createSuper(Sequence);\n\n  function Sequence(elementLayout, count, property) {\n    var _this5;\n\n    _classCallCheck(this, Sequence);\n\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n\n    if (!(count instanceof ExternalLayout && count.isCount() || Number.isInteger(count) && 0 <= count)) {\n      throw new TypeError('count must be non-negative integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(count instanceof ExternalLayout) && 0 < elementLayout.span) {\n      span = count * elementLayout.span;\n    }\n\n    _this5 = _super8.call(this, span, property);\n    /** The layout for individual elements of the sequence. */\n\n    _this5.elementLayout = elementLayout;\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n\n    _this5.count = count;\n    return _this5;\n  }\n  /** @override */\n\n\n  _createClass(Sequence, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      if (0 < this.elementLayout.span) {\n        span = count * this.elementLayout.span;\n      } else {\n        var idx = 0;\n\n        while (idx < count) {\n          span += this.elementLayout.getSpan(b, offset + span);\n          ++idx;\n        }\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var rv = [];\n      var i = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      while (i < count) {\n        rv.push(this.elementLayout.decode(b, offset));\n        offset += this.elementLayout.getSpan(b, offset);\n        i += 1;\n      }\n\n      return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var elo = this.elementLayout;\n      var span = src.reduce(function (span, v) {\n        return span + elo.encode(v, b, offset + span);\n      }, 0);\n\n      if (this.count instanceof ExternalLayout) {\n        this.count.encode(src.length, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Sequence;\n}(Layout);\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\n\n\nvar Structure = /*#__PURE__*/function (_Layout7) {\n  _inherits(Structure, _Layout7);\n\n  var _super9 = _createSuper(Structure);\n\n  function Structure(fields, property, decodePrefixes) {\n    var _this6;\n\n    _classCallCheck(this, Structure);\n\n    if (!(Array.isArray(fields) && fields.reduce(function (acc, v) {\n      return acc && v instanceof Layout;\n    }, true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n\n    if ('boolean' === typeof property && undefined === decodePrefixes) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n    /* Verify absence of unnamed variable-length fields. */\n\n\n    var _iterator = _createForOfIteratorHelper(fields),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var fd = _step.value;\n\n        if (0 > fd.span && undefined === fd.property) {\n          throw new Error('fields cannot contain unnamed variable-length layout');\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var span = -1;\n\n    try {\n      span = fields.reduce(function (span, fd) {\n        return span + fd.getSpan();\n      }, 0);\n    } catch (e) {}\n\n    _this6 = _super9.call(this, span, property);\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n\n    _this6.fields = fields;\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n\n    _this6.decodePrefixes = !!decodePrefixes;\n    return _this6;\n  }\n  /** @override */\n\n\n  _createClass(Structure, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n\n      try {\n        span = this.fields.reduce(function (span, fd) {\n          var fsp = fd.getSpan(b, offset);\n          offset += fsp;\n          return span + fsp;\n        }, 0);\n      } catch (e) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var dest = this.makeDestinationObject();\n\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var fd = _step2.value;\n\n          if (undefined !== fd.property) {\n            dest[fd.property] = fd.decode(b, offset);\n          }\n\n          offset += fd.getSpan(b, offset);\n\n          if (this.decodePrefixes && b.length === offset) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var firstOffset = offset;\n      var lastOffset = 0;\n      var lastWrote = 0;\n\n      var _iterator3 = _createForOfIteratorHelper(this.fields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var fd = _step3.value;\n          var span = fd.span;\n          lastWrote = 0 < span ? span : 0;\n\n          if (undefined === fd.property) {\n            /* By construction the field must be fixed-length (because\n             * unnamed variable-length fields are disallowed when\n             * encoding).  But check it anyway. */\n            assert$2(0 < span);\n          } else {\n            var fv = src[fd.property];\n\n            if (undefined !== fv) {\n              lastWrote = fd.encode(fv, b, offset);\n\n              if (0 > span) {\n                /* Read the as-encoded span, which is not necessarily the\n                 * same as what we wrote. */\n                span = fd.getSpan(b, offset);\n              }\n            }\n          }\n\n          lastOffset = offset;\n          offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return lastOffset + lastWrote - firstOffset;\n    }\n    /** @override */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      var dest = this.makeDestinationObject();\n\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var fd = _step4.value;\n\n          if (undefined !== fd.property && 0 < values.length) {\n            dest[fd.property] = values.shift();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n\n  }, {\n    key: \"layoutFor\",\n    value: function layoutFor(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.fields),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var fd = _step5.value;\n\n          if (fd.property === property) {\n            return fd;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n\n  }, {\n    key: \"offsetOf\",\n    value: function offsetOf(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var offset = 0;\n\n      var _iterator6 = _createForOfIteratorHelper(this.fields),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var fd = _step6.value;\n\n          if (fd.property === property) {\n            return offset;\n          }\n\n          if (0 > fd.span) {\n            offset = -1;\n          } else if (0 <= offset) {\n            offset += fd.span;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }]);\n\n  return Structure;\n}(Layout);\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Blob = /*#__PURE__*/function (_Layout8) {\n  _inherits(Blob, _Layout8);\n\n  var _super10 = _createSuper(Blob);\n\n  function Blob(length, property) {\n    var _this7;\n\n    _classCallCheck(this, Blob);\n\n    if (!(length instanceof ExternalLayout && length.isCount() || Number.isInteger(length) && 0 <= length)) {\n      throw new TypeError('length must be positive integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n\n    _this7 = _super10.call(this, span, property);\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n\n    _this7.length = length;\n    return _this7;\n  }\n  /** @override */\n\n\n  _createClass(Blob, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return b.slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      var span = this.length;\n\n      if (this.length instanceof ExternalLayout) {\n        span = src.length;\n      }\n\n      if (!(src instanceof buffer.Buffer && span === src.length)) {\n        throw new TypeError(nameWithProperty('Blob.encode', this) + ' requires (length ' + span + ') Buffer as src');\n      }\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      b.write(src.toString('hex'), offset, span, 'hex');\n\n      if (this.length instanceof ExternalLayout) {\n        this.length.encode(span, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Blob;\n}(Layout);\n/** Factory for {@link OffsetLayout}. */\n\n\nvar offset = function offset(layout, _offset, property) {\n  return new OffsetLayout(layout, _offset, property);\n};\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\n\n\nvar u8 = function u8(property) {\n  return new UInt(1, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\n\n\nvar u16 = function u16(property) {\n  return new UInt(2, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\n\n\nvar u32 = function u32(property) {\n  return new UInt(4, property);\n};\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\n\n\nvar nu64 = function nu64(property) {\n  return new NearUInt64(property);\n};\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\n\n\nvar ns64 = function ns64(property) {\n  return new NearInt64(property);\n};\n/** Factory for {@link Structure} values. */\n\n\nvar struct = function struct(fields, property, decodePrefixes) {\n  return new Structure(fields, property, decodePrefixes);\n};\n/** Factory for {@link Sequence} values. */\n\n\nvar seq = function seq(elementLayout, count, property) {\n  return new Sequence(elementLayout, count, property);\n};\n/** Factory for {@link Blob} values. */\n\n\nvar blob = function blob(length, property) {\n  return new Blob(length, property);\n}; //      \n\n/**\n * Layout for a public key\n */\n\n\nvar publicKey = function publicKey() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'publicKey';\n  return blob(32, property);\n};\n/**\n * Layout for a Rust String type\n */\n\n\nvar rustString = function rustString() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'string';\n  var rsl = struct([u32('length'), u32('lengthPadding'), blob(offset(u32(), -8), 'chars')], property);\n\n  var _decode = rsl.decode.bind(rsl);\n\n  var _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = function (buffer, offset) {\n    var data = _decode(buffer, offset);\n\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = function (str, buffer$1, offset) {\n    var data = {\n      chars: buffer.Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer$1, offset);\n  };\n\n  rsl.alloc = function (str) {\n    return u32().span + u32().span + buffer.Buffer.from(str, 'utf8').length;\n  };\n\n  return rsl;\n};\n/**\n * Layout for an Authorized object\n */\n\n\nvar authorized = function authorized() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'authorized';\n  return struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n/**\n * Layout for a Lockup object\n */\n\n\nvar lockup = function lockup() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'lockup';\n  return struct([ns64('unixTimestamp'), ns64('epoch'), publicKey('custodian')], property);\n};\n\nfunction getAlloc(type, fields) {\n  var alloc = 0;\n  type.layout.fields.forEach(function (item) {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n} //      \n\n\nfunction decodeLength(bytes) {\n  var len = 0;\n  var size = 0;\n\n  for (;;) {\n    var elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n\n  return len;\n}\n\nfunction encodeLength(bytes, len) {\n  var rem_len = len;\n\n  for (;;) {\n    var elem = rem_len & 0x7f;\n    rem_len >>= 7;\n\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n/**\n * The message header, identifying signed and read-only account\n *\n * @typedef {Object} MessageHeader\n * @property {number} numRequiredSignatures The number of signatures required for this message to be considered valid. The\n * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n * @property {number} numReadonlySignedAccounts: The last `numReadonlySignedAccounts` of the signed keys are read-only accounts\n * @property {number} numReadonlyUnsignedAccounts The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts\n */\n\n/**\n * An instruction to execute by a program\n *\n * @typedef {Object} CompiledInstruction\n * @property {number} programIdIndex Index into the transaction keys array indicating the program account that executes this instruction\n * @property {number[]} accounts Ordered indices into the transaction keys array indicating which accounts to pass to the program\n * @property {string} data The program input data encoded as base 58\n */\n\n/**\n * Message constructor arguments\n *\n * @typedef {Object} MessageArgs\n * @property {MessageHeader} header The message header, identifying signed and read-only `accountKeys`\n * @property {string[]} accounts All the account keys used by this transaction\n * @property {Blockhash} recentBlockhash The hash of a recent ledger block\n * @property {CompiledInstruction[]} instructions Instructions that will be executed in sequence and committed in one atomic transaction if all succeed.\n */\n\n\nvar PUBKEY_LENGTH = 32;\n/**\n * List of instructions to be processed atomically\n */\n\nvar Message = /*#__PURE__*/function () {\n  function Message(args) {\n    _classCallCheck(this, Message);\n\n    _defineProperty(this, \"header\", void 0);\n\n    _defineProperty(this, \"accountKeys\", void 0);\n\n    _defineProperty(this, \"recentBlockhash\", void 0);\n\n    _defineProperty(this, \"instructions\", void 0);\n\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(function (account) {\n      return new PublicKey(account);\n    });\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n  }\n\n  _createClass(Message, [{\n    key: \"isAccountWritable\",\n    value: function isAccountWritable(index) {\n      return index < this.header.numRequiredSignatures - this.header.numReadonlySignedAccounts || index >= this.header.numRequiredSignatures && index < this.accountKeys.length - this.header.numReadonlyUnsignedAccounts;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      var numKeys = this.accountKeys.length;\n      var keyCount = [];\n      encodeLength(keyCount, numKeys);\n      var instructions = this.instructions.map(function (instruction) {\n        var accounts = instruction.accounts,\n            programIdIndex = instruction.programIdIndex;\n        var data = bs58.decode(instruction.data);\n        var keyIndicesCount = [];\n        encodeLength(keyIndicesCount, accounts.length);\n        var dataCount = [];\n        encodeLength(dataCount, data.length);\n        return {\n          programIdIndex: programIdIndex,\n          keyIndicesCount: buffer.Buffer.from(keyIndicesCount),\n          keyIndices: buffer.Buffer.from(accounts),\n          dataLength: buffer.Buffer.from(dataCount),\n          data: data\n        };\n      });\n      var instructionCount = [];\n      encodeLength(instructionCount, instructions.length);\n      var instructionBuffer = buffer.Buffer.alloc(PACKET_DATA_SIZE);\n      buffer.Buffer.from(instructionCount).copy(instructionBuffer);\n      var instructionBufferLength = instructionCount.length;\n      instructions.forEach(function (instruction) {\n        var instructionLayout = struct([u8('programIdIndex'), blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), seq(u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), blob(instruction.dataLength.length, 'dataLength'), seq(u8('userdatum'), instruction.data.length, 'data')]);\n        var length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n        instructionBufferLength += length;\n      });\n      instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n      var signDataLayout = struct([blob(1, 'numRequiredSignatures'), blob(1, 'numReadonlySignedAccounts'), blob(1, 'numReadonlyUnsignedAccounts'), blob(keyCount.length, 'keyCount'), seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n      var transaction = {\n        numRequiredSignatures: buffer.Buffer.from([this.header.numRequiredSignatures]),\n        numReadonlySignedAccounts: buffer.Buffer.from([this.header.numReadonlySignedAccounts]),\n        numReadonlyUnsignedAccounts: buffer.Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n        keyCount: buffer.Buffer.from(keyCount),\n        keys: this.accountKeys.map(function (key) {\n          return key.toBuffer();\n        }),\n        recentBlockhash: bs58.decode(this.recentBlockhash)\n      };\n      var signData = buffer.Buffer.alloc(2048);\n      var length = signDataLayout.encode(transaction, signData);\n      instructionBuffer.copy(signData, length);\n      return signData.slice(0, length + instructionBuffer.length);\n    }\n    /**\n     * Decode a compiled message into a Message object.\n     */\n\n  }], [{\n    key: \"from\",\n    value: function from(buffer$1) {\n      // Slice up wire data\n      var byteArray = _toConsumableArray(buffer$1);\n\n      var numRequiredSignatures = byteArray.shift();\n      var numReadonlySignedAccounts = byteArray.shift();\n      var numReadonlyUnsignedAccounts = byteArray.shift();\n      var accountCount = decodeLength(byteArray);\n      var accountKeys = [];\n\n      for (var _i15 = 0; _i15 < accountCount; _i15++) {\n        var account = byteArray.slice(0, PUBKEY_LENGTH);\n        byteArray = byteArray.slice(PUBKEY_LENGTH);\n        accountKeys.push(bs58.encode(buffer.Buffer.from(account)));\n      }\n\n      var recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      var instructionCount = decodeLength(byteArray);\n      var instructions = [];\n\n      for (var _i16 = 0; _i16 < instructionCount; _i16++) {\n        var instruction = {};\n        instruction.programIdIndex = byteArray.shift();\n\n        var _accountCount = decodeLength(byteArray);\n\n        instruction.accounts = byteArray.slice(0, _accountCount);\n        byteArray = byteArray.slice(_accountCount);\n        var dataLength = decodeLength(byteArray);\n        var data = byteArray.slice(0, dataLength);\n        instruction.data = bs58.encode(buffer.Buffer.from(data));\n        byteArray = byteArray.slice(dataLength);\n        instructions.push(instruction);\n      }\n\n      var messageArgs = {\n        header: {\n          numRequiredSignatures: numRequiredSignatures,\n          numReadonlySignedAccounts: numReadonlySignedAccounts,\n          numReadonlyUnsignedAccounts: numReadonlyUnsignedAccounts\n        },\n        recentBlockhash: bs58.encode(buffer.Buffer.from(recentBlockhash)),\n        accountKeys: accountKeys,\n        instructions: instructions\n      };\n      return new Message(messageArgs);\n    }\n  }]);\n\n  return Message;\n}();\n/**\n * @typedef {string} TransactionSignature\n */\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\n\n\nvar DEFAULT_SIGNATURE = buffer.Buffer.alloc(64).fill(0);\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\n\nvar PACKET_DATA_SIZE = 1280 - 40 - 8;\nvar SIGNATURE_LENGTH = 64;\n/**\n * Account metadata used to define instructions\n *\n * @typedef {Object} AccountMeta\n * @property {PublicKey} pubkey An account's public key\n * @property {boolean} isSigner True if an instruction requires a transaction signature matching `pubkey`\n * @property {boolean} isWritable True if the `pubkey` can be loaded as a read-write account.\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionInstructionCtorFields\n * @property {?Array<PublicKey>} keys\n * @property {?PublicKey} programId\n * @property {?Buffer} data\n */\n\n/**\n * Configuration object for Transaction.serialize()\n *\n * @typedef {Object} SerializeConfig\n * @property {boolean|undefined} requireAllSignatures Require all transaction signatures be present (default: true)\n * @property {boolean|undefined} verifySignatures Verify provided signatures (default: true)\n */\n\n/**\n * Transaction Instruction class\n */\n\nvar TransactionInstruction =\n/**\n * Public keys to include in this transaction\n * Boolean represents whether this pubkey needs to sign the transaction\n */\n\n/**\n * Program Id to execute\n */\n\n/**\n * Program input\n */\nfunction TransactionInstruction(opts) {\n  _classCallCheck(this, TransactionInstruction);\n\n  _defineProperty(this, \"keys\", []);\n\n  _defineProperty(this, \"programId\", void 0);\n\n  _defineProperty(this, \"data\", buffer.Buffer.alloc(0));\n\n  opts && Object.assign(this, opts);\n};\n/**\n * @private\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionCtorFields\n * @property {?Blockhash} recentBlockhash A recent blockhash\n * @property {?PublicKey} feePayer The transaction fee payer\n * @property {?Array<SignaturePubkeyPair>} signatures One or more signatures\n *\n */\n\n/**\n * NonceInformation to be used to build a Transaction.\n *\n * @typedef {Object} NonceInformation\n * @property {Blockhash} nonce The current Nonce blockhash\n * @property {TransactionInstruction} nonceInstruction AdvanceNonceAccount Instruction\n */\n\n/**\n * Transaction class\n */\n\n\nvar Transaction = /*#__PURE__*/function () {\n  /**\n   * The transaction fee payer\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  function Transaction(opts) {\n    _classCallCheck(this, Transaction);\n\n    _defineProperty(this, \"signatures\", []);\n\n    _defineProperty(this, \"feePayer\", void 0);\n\n    _defineProperty(this, \"instructions\", []);\n\n    _defineProperty(this, \"recentBlockhash\", void 0);\n\n    _defineProperty(this, \"nonceInfo\", void 0);\n\n    opts && Object.assign(this, opts);\n  }\n  /**\n   * Add one or more instructions to this Transaction\n   */\n\n\n  _createClass(Transaction, [{\n    key: \"signature\",\n    get:\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n\n    /**\n     * The first (payer) Transaction signature\n     */\n    function get() {\n      if (this.signatures.length > 0) {\n        return this.signatures[0].signature;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var _this8 = this;\n\n      for (var _len4 = arguments.length, items = new Array(_len4), _key = 0; _key < _len4; _key++) {\n        items[_key] = arguments[_key];\n      }\n\n      if (items.length === 0) {\n        throw new Error('No instructions');\n      }\n\n      items.forEach(function (item) {\n        if ('instructions' in item) {\n          _this8.instructions = _this8.instructions.concat(item.instructions);\n        } else if ('data' in item && 'programId' in item && 'keys' in item) {\n          _this8.instructions.push(item);\n        } else {\n          _this8.instructions.push(new TransactionInstruction(item));\n        }\n      });\n      return this;\n    }\n    /**\n     * Compile transaction data\n     */\n\n  }, {\n    key: \"compileMessage\",\n    value: function compileMessage() {\n      var nonceInfo = this.nonceInfo;\n\n      if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n        this.recentBlockhash = nonceInfo.nonce;\n        this.instructions.unshift(nonceInfo.nonceInstruction);\n      }\n\n      var recentBlockhash = this.recentBlockhash;\n\n      if (!recentBlockhash) {\n        throw new Error('Transaction recentBlockhash required');\n      }\n\n      if (this.instructions.length < 1) {\n        throw new Error('No instructions provided');\n      }\n\n      var feePayer;\n\n      if (this.feePayer) {\n        feePayer = this.feePayer;\n      } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n        // Use implicit fee payer\n        feePayer = this.signatures[0].publicKey;\n      } else {\n        throw new Error('Transaction fee payer required');\n      }\n\n      var programIds = [];\n      var accountMetas = [];\n      this.instructions.forEach(function (instruction) {\n        instruction.keys.forEach(function (accountMeta) {\n          accountMetas.push(_objectSpread({}, accountMeta));\n        });\n        var programId = instruction.programId.toString();\n\n        if (!programIds.includes(programId)) {\n          programIds.push(programId);\n        }\n      }); // Append programID account metas\n\n      programIds.forEach(function (programId) {\n        accountMetas.push({\n          pubkey: new PublicKey(programId),\n          isSigner: false,\n          isWritable: false\n        });\n      }); // Sort. Prioritizing first by signer, then by writable\n\n      accountMetas.sort(function (x, y) {\n        var checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n        var checkWritable = x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n        return checkSigner || checkWritable;\n      }); // Cull duplicate account metas\n\n      var uniqueMetas = [];\n      accountMetas.forEach(function (accountMeta) {\n        var pubkeyString = accountMeta.pubkey.toString();\n        var uniqueIndex = uniqueMetas.findIndex(function (x) {\n          return x.pubkey.toString() === pubkeyString;\n        });\n\n        if (uniqueIndex > -1) {\n          uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        } else {\n          uniqueMetas.push(accountMeta);\n        }\n      }); // Move fee payer to the front\n\n      var feePayerIndex = uniqueMetas.findIndex(function (x) {\n        return x.pubkey.equals(feePayer);\n      });\n\n      if (feePayerIndex > -1) {\n        var _uniqueMetas$splice = uniqueMetas.splice(feePayerIndex, 1),\n            _uniqueMetas$splice2 = _slicedToArray(_uniqueMetas$splice, 1),\n            payerMeta = _uniqueMetas$splice2[0];\n\n        payerMeta.isSigner = true;\n        payerMeta.isWritable = true;\n        uniqueMetas.unshift(payerMeta);\n      } else {\n        uniqueMetas.unshift({\n          pubkey: feePayer,\n          isSigner: true,\n          isWritable: true\n        });\n      } // Disallow unknown signers\n\n\n      var _iterator7 = _createForOfIteratorHelper(this.signatures),\n          _step7;\n\n      try {\n        var _loop = function _loop() {\n          var signature = _step7.value;\n          var uniqueIndex = uniqueMetas.findIndex(function (x) {\n            return x.pubkey.equals(signature.publicKey);\n          });\n\n          if (uniqueIndex > -1) {\n            if (!uniqueMetas[uniqueIndex].isSigner) {\n              uniqueMetas[uniqueIndex].isSigner = true;\n              console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n            }\n          } else {\n            throw new Error(\"unknown signer: \".concat(signature.publicKey.toString()));\n          }\n        };\n\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var numRequiredSignatures = 0;\n      var numReadonlySignedAccounts = 0;\n      var numReadonlyUnsignedAccounts = 0; // Split out signing from non-signing keys and count header values\n\n      var signedKeys = [];\n      var unsignedKeys = [];\n      uniqueMetas.forEach(function (_ref) {\n        var pubkey = _ref.pubkey,\n            isSigner = _ref.isSigner,\n            isWritable = _ref.isWritable;\n\n        if (isSigner) {\n          signedKeys.push(pubkey.toString());\n          numRequiredSignatures += 1;\n\n          if (!isWritable) {\n            numReadonlySignedAccounts += 1;\n          }\n        } else {\n          unsignedKeys.push(pubkey.toString());\n\n          if (!isWritable) {\n            numReadonlyUnsignedAccounts += 1;\n          }\n        }\n      });\n      var accountKeys = signedKeys.concat(unsignedKeys);\n      var instructions = this.instructions.map(function (instruction) {\n        var data = instruction.data,\n            programId = instruction.programId;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(function (meta) {\n            return accountKeys.indexOf(meta.pubkey.toString());\n          }),\n          data: bs58.encode(data)\n        };\n      });\n      instructions.forEach(function (instruction) {\n        assert(instruction.programIdIndex >= 0);\n        instruction.accounts.forEach(function (keyIndex) {\n          return assert(keyIndex >= 0);\n        });\n      });\n      return new Message({\n        header: {\n          numRequiredSignatures: numRequiredSignatures,\n          numReadonlySignedAccounts: numReadonlySignedAccounts,\n          numReadonlyUnsignedAccounts: numReadonlyUnsignedAccounts\n        },\n        accountKeys: accountKeys,\n        recentBlockhash: recentBlockhash,\n        instructions: instructions\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_compile\",\n    value: function _compile() {\n      var message = this.compileMessage();\n      var signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n\n      if (this.signatures.length === signedKeys.length) {\n        var valid = this.signatures.every(function (pair, index) {\n          return signedKeys[index].equals(pair.publicKey);\n        });\n        if (valid) return message;\n      }\n\n      this.signatures = signedKeys.map(function (publicKey) {\n        return {\n          signature: null,\n          publicKey: publicKey\n        };\n      });\n      return message;\n    }\n    /**\n     * Get a buffer of the Transaction data that need to be covered by signatures\n     */\n\n  }, {\n    key: \"serializeMessage\",\n    value: function serializeMessage() {\n      return this._compile().serialize();\n    }\n    /**\n     * Specify the public keys which will be used to sign the Transaction.\n     * The first signer will be used as the transaction fee payer account.\n     *\n     * Signatures can be added with either `partialSign` or `addSignature`\n     *\n     * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n     * specified and it can be set in the Transaction constructor or with the\n     * `feePayer` property.\n     */\n\n  }, {\n    key: \"setSigners\",\n    value: function setSigners() {\n      for (var _len5 = arguments.length, signers = new Array(_len5), _key2 = 0; _key2 < _len5; _key2++) {\n        signers[_key2] = arguments[_key2];\n      }\n\n      if (signers.length === 0) {\n        throw new Error('No signers');\n      }\n\n      var seen = new Set();\n      this.signatures = signers.filter(function (publicKey) {\n        var key = publicKey.toString();\n\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      }).map(function (publicKey) {\n        return {\n          signature: null,\n          publicKey: publicKey\n        };\n      });\n    }\n    /**\n     * Sign the Transaction with the specified accounts. Multiple signatures may\n     * be applied to a Transaction. The first signature is considered \"primary\"\n     * and is used identify and confirm transactions.\n     *\n     * If the Transaction `feePayer` is not set, the first signer will be used\n     * as the transaction fee payer account.\n     *\n     * Transaction fields should not be modified after the first call to `sign`,\n     * as doing so may invalidate the signature and cause the Transaction to be\n     * rejected.\n     *\n     * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      for (var _len6 = arguments.length, signers = new Array(_len6), _key3 = 0; _key3 < _len6; _key3++) {\n        signers[_key3] = arguments[_key3];\n      }\n\n      if (signers.length === 0) {\n        throw new Error('No signers');\n      } // Dedupe signers\n\n\n      var seen = new Set();\n      var uniqueSigners = [];\n\n      for (var _i17 = 0, _signers = signers; _i17 < _signers.length; _i17++) {\n        var signer = _signers[_i17];\n        var key = signer.publicKey.toString();\n\n        if (seen.has(key)) {\n          continue;\n        } else {\n          seen.add(key);\n          uniqueSigners.push(signer);\n        }\n      }\n\n      this.signatures = uniqueSigners.map(function (signer) {\n        return {\n          signature: null,\n          publicKey: signer.publicKey\n        };\n      });\n\n      var message = this._compile();\n\n      this._partialSign.apply(this, [message].concat(uniqueSigners));\n\n      this._verifySignatures(message.serialize(), true);\n    }\n    /**\n     * Partially sign a transaction with the specified accounts. All accounts must\n     * correspond to either the fee payer or a signer account in the transaction\n     * instructions.\n     *\n     * All the caveats from the `sign` method apply to `partialSign`\n     */\n\n  }, {\n    key: \"partialSign\",\n    value: function partialSign() {\n      for (var _len7 = arguments.length, signers = new Array(_len7), _key4 = 0; _key4 < _len7; _key4++) {\n        signers[_key4] = arguments[_key4];\n      }\n\n      if (signers.length === 0) {\n        throw new Error('No signers');\n      } // Dedupe signers\n\n\n      var seen = new Set();\n      var uniqueSigners = [];\n\n      for (var _i18 = 0, _signers2 = signers; _i18 < _signers2.length; _i18++) {\n        var signer = _signers2[_i18];\n        var key = signer.publicKey.toString();\n\n        if (seen.has(key)) {\n          continue;\n        } else {\n          seen.add(key);\n          uniqueSigners.push(signer);\n        }\n      }\n\n      var message = this._compile();\n\n      this._partialSign.apply(this, [message].concat(uniqueSigners));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_partialSign\",\n    value: function _partialSign(message) {\n      var _this9 = this;\n\n      var signData = message.serialize();\n\n      for (var _len8 = arguments.length, signers = new Array(_len8 > 1 ? _len8 - 1 : 0), _key5 = 1; _key5 < _len8; _key5++) {\n        signers[_key5 - 1] = arguments[_key5];\n      }\n\n      signers.forEach(function (signer) {\n        var signature = nacl.sign.detached(signData, signer.secretKey);\n\n        _this9._addSignature(signer.publicKey, signature);\n      });\n    }\n    /**\n     * Add an externally created signature to a transaction. The public key\n     * must correspond to either the fee payer or a signer account in the transaction\n     * instructions.\n     */\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(pubkey, signature) {\n      this._compile(); // Ensure signatures array is populated\n\n\n      this._addSignature(pubkey, signature);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_addSignature\",\n    value: function _addSignature(pubkey, signature) {\n      assert(signature.length === 64);\n      var index = this.signatures.findIndex(function (sigpair) {\n        return pubkey.equals(sigpair.publicKey);\n      });\n\n      if (index < 0) {\n        throw new Error(\"unknown signer: \".concat(pubkey.toString()));\n      }\n\n      this.signatures[index].signature = buffer.Buffer.from(signature);\n    }\n    /**\n     * Verify signatures of a complete, signed Transaction\n     */\n\n  }, {\n    key: \"verifySignatures\",\n    value: function verifySignatures() {\n      return this._verifySignatures(this.serializeMessage(), true);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_verifySignatures\",\n    value: function _verifySignatures(signData, requireAllSignatures) {\n      var _iterator8 = _createForOfIteratorHelper(this.signatures),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _step8$value = _step8.value,\n              signature = _step8$value.signature,\n              _publicKey = _step8$value.publicKey;\n\n          if (signature === null) {\n            if (requireAllSignatures) {\n              return false;\n            }\n          } else {\n            if (!nacl.sign.detached.verify(signData, signature, _publicKey.toBuffer())) {\n              return false;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return true;\n    }\n    /**\n     * Serialize the Transaction in the wire format.\n     */\n\n  }, {\n    key: \"serialize\",\n    value: function serialize(config) {\n      var _Object$assign = Object.assign({\n        requireAllSignatures: true,\n        verifySignatures: true\n      }, config),\n          requireAllSignatures = _Object$assign.requireAllSignatures,\n          verifySignatures = _Object$assign.verifySignatures;\n\n      var signData = this.serializeMessage();\n\n      if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n        throw new Error('Signature verification failed');\n      }\n\n      return this._serialize(signData);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_serialize\",\n    value: function _serialize(signData) {\n      var signatures = this.signatures;\n      var signatureCount = [];\n      encodeLength(signatureCount, signatures.length);\n      var transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n      var wireTransaction = buffer.Buffer.alloc(transactionLength);\n      assert(signatures.length < 256);\n      buffer.Buffer.from(signatureCount).copy(wireTransaction, 0);\n      signatures.forEach(function (_ref2, index) {\n        var signature = _ref2.signature;\n\n        if (signature !== null) {\n          assert(signature.length === 64, \"signature has invalid length\");\n          buffer.Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n        }\n      });\n      signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n      assert(wireTransaction.length <= PACKET_DATA_SIZE, \"Transaction too large: \".concat(wireTransaction.length, \" > \").concat(PACKET_DATA_SIZE));\n      return wireTransaction;\n    }\n    /**\n     * Deprecated method\n     * @private\n     */\n\n  }, {\n    key: \"keys\",\n    get: function get() {\n      assert(this.instructions.length === 1);\n      return this.instructions[0].keys.map(function (keyObj) {\n        return keyObj.pubkey;\n      });\n    }\n    /**\n     * Deprecated method\n     * @private\n     */\n\n  }, {\n    key: \"programId\",\n    get: function get() {\n      assert(this.instructions.length === 1);\n      return this.instructions[0].programId;\n    }\n    /**\n     * Deprecated method\n     * @private\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      assert(this.instructions.length === 1);\n      return this.instructions[0].data;\n    }\n    /**\n     * Parse a wire transaction into a Transaction object.\n     */\n\n  }], [{\n    key: \"from\",\n    value: function from(buffer$1) {\n      // Slice up wire data\n      var byteArray = _toConsumableArray(buffer$1);\n\n      var signatureCount = decodeLength(byteArray);\n      var signatures = [];\n\n      for (var _i19 = 0; _i19 < signatureCount; _i19++) {\n        var signature = byteArray.slice(0, SIGNATURE_LENGTH);\n        byteArray = byteArray.slice(SIGNATURE_LENGTH);\n        signatures.push(bs58.encode(buffer.Buffer.from(signature)));\n      }\n\n      return Transaction.populate(Message.from(byteArray), signatures);\n    }\n    /**\n     * Populate Transaction object from message and signatures\n     */\n\n  }, {\n    key: \"populate\",\n    value: function populate(message, signatures) {\n      var transaction = new Transaction();\n      transaction.recentBlockhash = message.recentBlockhash;\n\n      if (message.header.numRequiredSignatures > 0) {\n        transaction.feePayer = message.accountKeys[0];\n      }\n\n      signatures.forEach(function (signature, index) {\n        var sigPubkeyPair = {\n          signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n          publicKey: message.accountKeys[index]\n        };\n        transaction.signatures.push(sigPubkeyPair);\n      });\n      message.instructions.forEach(function (instruction) {\n        var keys = instruction.accounts.map(function (account) {\n          var pubkey = message.accountKeys[account];\n          return {\n            pubkey: pubkey,\n            isSigner: transaction.signatures.some(function (keyObj) {\n              return keyObj.publicKey.toString() === pubkey.toString();\n            }),\n            isWritable: message.isAccountWritable(account)\n          };\n        });\n        transaction.instructions.push(new TransactionInstruction({\n          keys: keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data)\n        }));\n      });\n      return transaction;\n    }\n  }]);\n\n  return Transaction;\n}(); //      \n\n\nvar SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nvar SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nvar SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nvar SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nvar SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\nvar SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n\nvar punycode = createCommonjsModule(function (module, exports) {\n  (function (root) {\n    /** Detect free variables */\n    var freeExports = exports && !exports.nodeType && exports;\n    var freeModule = module && !module.nodeType && module;\n    var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;\n\n    if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n      root = freeGlobal;\n    }\n    /**\n     * The `punycode` object.\n     * @name punycode\n     * @type Object\n     */\n\n\n    var punycode,\n\n    /** Highest positive signed 32-bit float value */\n    maxInt = 2147483647,\n        // aka. 0x7FFFFFFF or 2^31-1\n\n    /** Bootstring parameters */\n    base = 36,\n        tMin = 1,\n        tMax = 26,\n        skew = 38,\n        damp = 700,\n        initialBias = 72,\n        initialN = 128,\n        // 0x80\n    delimiter = '-',\n        // '\\x2D'\n\n    /** Regular expressions */\n    regexPunycode = /^xn--/,\n        regexNonASCII = /[^\\x20-\\x7E]/,\n        // unprintable ASCII chars + non-ASCII chars\n    regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n        // RFC 3490 separators\n\n    /** Error messages */\n    errors = {\n      'overflow': 'Overflow: input needs wider integers to process',\n      'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n      'invalid-input': 'Invalid input'\n    },\n\n    /** Convenience shortcuts */\n    baseMinusTMin = base - tMin,\n        floor = Math.floor,\n        stringFromCharCode = String.fromCharCode,\n\n    /** Temporary variable */\n    key;\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * A generic error utility function.\n     * @private\n     * @param {String} type The error type.\n     * @returns {Error} Throws a `RangeError` with the applicable error message.\n     */\n\n    function error(type) {\n      throw new RangeError(errors[type]);\n    }\n    /**\n     * A generic `Array#map` utility function.\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} callback The function that gets called for every array\n     * item.\n     * @returns {Array} A new array of values returned by the callback function.\n     */\n\n\n    function map(array, fn) {\n      var length = array.length;\n      var result = [];\n\n      while (length--) {\n        result[length] = fn(array[length]);\n      }\n\n      return result;\n    }\n    /**\n     * A simple `Array#map`-like wrapper to work with domain name strings or email\n     * addresses.\n     * @private\n     * @param {String} domain The domain name or email address.\n     * @param {Function} callback The function that gets called for every\n     * character.\n     * @returns {Array} A new string of characters returned by the callback\n     * function.\n     */\n\n\n    function mapDomain(string, fn) {\n      var parts = string.split('@');\n      var result = '';\n\n      if (parts.length > 1) {\n        // In email addresses, only the domain name should be punycoded. Leave\n        // the local part (i.e. everything up to `@`) intact.\n        result = parts[0] + '@';\n        string = parts[1];\n      } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n      string = string.replace(regexSeparators, '\\x2E');\n      var labels = string.split('.');\n      var encoded = map(labels, fn).join('.');\n      return result + encoded;\n    }\n    /**\n     * Creates an array containing the numeric code points of each Unicode\n     * character in the string. While JavaScript uses UCS-2 internally,\n     * this function will convert a pair of surrogate halves (each of which\n     * UCS-2 exposes as separate characters) into a single code point,\n     * matching UTF-16.\n     * @see `punycode.ucs2.encode`\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode.ucs2\n     * @name decode\n     * @param {String} string The Unicode input string (UCS-2).\n     * @returns {Array} The new array of code points.\n     */\n\n\n    function ucs2decode(string) {\n      var output = [],\n          counter = 0,\n          length = string.length,\n          value,\n          extra;\n\n      while (counter < length) {\n        value = string.charCodeAt(counter++);\n\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n          // high surrogate, and there is a next character\n          extra = string.charCodeAt(counter++);\n\n          if ((extra & 0xFC00) == 0xDC00) {\n            // low surrogate\n            output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n          } else {\n            // unmatched surrogate; only append this code unit, in case the next\n            // code unit is the high surrogate of a surrogate pair\n            output.push(value);\n            counter--;\n          }\n        } else {\n          output.push(value);\n        }\n      }\n\n      return output;\n    }\n    /**\n     * Creates a string based on an array of numeric code points.\n     * @see `punycode.ucs2.decode`\n     * @memberOf punycode.ucs2\n     * @name encode\n     * @param {Array} codePoints The array of numeric code points.\n     * @returns {String} The new Unicode string (UCS-2).\n     */\n\n\n    function ucs2encode(array) {\n      return map(array, function (value) {\n        var output = '';\n\n        if (value > 0xFFFF) {\n          value -= 0x10000;\n          output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n          value = 0xDC00 | value & 0x3FF;\n        }\n\n        output += stringFromCharCode(value);\n        return output;\n      }).join('');\n    }\n    /**\n     * Converts a basic code point into a digit/integer.\n     * @see `digitToBasic()`\n     * @private\n     * @param {Number} codePoint The basic numeric code point value.\n     * @returns {Number} The numeric value of a basic code point (for use in\n     * representing integers) in the range `0` to `base - 1`, or `base` if\n     * the code point does not represent a value.\n     */\n\n\n    function basicToDigit(codePoint) {\n      if (codePoint - 48 < 10) {\n        return codePoint - 22;\n      }\n\n      if (codePoint - 65 < 26) {\n        return codePoint - 65;\n      }\n\n      if (codePoint - 97 < 26) {\n        return codePoint - 97;\n      }\n\n      return base;\n    }\n    /**\n     * Converts a digit/integer into a basic code point.\n     * @see `basicToDigit()`\n     * @private\n     * @param {Number} digit The numeric value of a basic code point.\n     * @returns {Number} The basic code point whose value (when used for\n     * representing integers) is `digit`, which needs to be in the range\n     * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n     * used; else, the lowercase form is used. The behavior is undefined\n     * if `flag` is non-zero and `digit` has no uppercase form.\n     */\n\n\n    function digitToBasic(digit, flag) {\n      //  0..25 map to ASCII a..z or A..Z\n      // 26..35 map to ASCII 0..9\n      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n    }\n    /**\n     * Bias adaptation function as per section 3.4 of RFC 3492.\n     * https://tools.ietf.org/html/rfc3492#section-3.4\n     * @private\n     */\n\n\n    function adapt(delta, numPoints, firstTime) {\n      var k = 0;\n      delta = firstTime ? floor(delta / damp) : delta >> 1;\n      delta += floor(delta / numPoints);\n\n      for (;\n      /* no initialization */\n      delta > baseMinusTMin * tMax >> 1; k += base) {\n        delta = floor(delta / baseMinusTMin);\n      }\n\n      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n    }\n    /**\n     * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n     * symbols.\n     * @memberOf punycode\n     * @param {String} input The Punycode string of ASCII-only symbols.\n     * @returns {String} The resulting string of Unicode symbols.\n     */\n\n\n    function decode(input) {\n      // Don't use UCS-2\n      var output = [],\n          inputLength = input.length,\n          out,\n          i = 0,\n          n = initialN,\n          bias = initialBias,\n          basic,\n          j,\n          index,\n          oldi,\n          w,\n          k,\n          digit,\n          t,\n\n      /** Cached calculation results */\n      baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n      // points before the last delimiter, or `0` if there is none, then copy\n      // the first basic code points to the output.\n\n      basic = input.lastIndexOf(delimiter);\n\n      if (basic < 0) {\n        basic = 0;\n      }\n\n      for (j = 0; j < basic; ++j) {\n        // if it's not a basic code point\n        if (input.charCodeAt(j) >= 0x80) {\n          error('not-basic');\n        }\n\n        output.push(input.charCodeAt(j));\n      } // Main decoding loop: start just after the last delimiter if any basic code\n      // points were copied; start at the beginning otherwise.\n\n\n      for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n      /* no final expression */\n      {\n        // `index` is the index of the next character to be consumed.\n        // Decode a generalized variable-length integer into `delta`,\n        // which gets added to `i`. The overflow checking is easier\n        // if we increase `i` as we go, then subtract off its starting\n        // value at the end to obtain `delta`.\n        for (oldi = i, w = 1, k = base;;\n        /* no condition */\n        k += base) {\n          if (index >= inputLength) {\n            error('invalid-input');\n          }\n\n          digit = basicToDigit(input.charCodeAt(index++));\n\n          if (digit >= base || digit > floor((maxInt - i) / w)) {\n            error('overflow');\n          }\n\n          i += digit * w;\n          t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n          if (digit < t) {\n            break;\n          }\n\n          baseMinusT = base - t;\n\n          if (w > floor(maxInt / baseMinusT)) {\n            error('overflow');\n          }\n\n          w *= baseMinusT;\n        }\n\n        out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n        // incrementing `n` each time, so we'll fix that now:\n\n        if (floor(i / out) > maxInt - n) {\n          error('overflow');\n        }\n\n        n += floor(i / out);\n        i %= out; // Insert `n` at position `i` of the output\n\n        output.splice(i++, 0, n);\n      }\n\n      return ucs2encode(output);\n    }\n    /**\n     * Converts a string of Unicode symbols (e.g. a domain name label) to a\n     * Punycode string of ASCII-only symbols.\n     * @memberOf punycode\n     * @param {String} input The string of Unicode symbols.\n     * @returns {String} The resulting Punycode string of ASCII-only symbols.\n     */\n\n\n    function encode(input) {\n      var n,\n          delta,\n          handledCPCount,\n          basicLength,\n          bias,\n          j,\n          m,\n          q,\n          k,\n          t,\n          currentValue,\n          output = [],\n\n      /** `inputLength` will hold the number of code points in `input`. */\n      inputLength,\n\n      /** Cached calculation results */\n      handledCPCountPlusOne,\n          baseMinusT,\n          qMinusT; // Convert the input in UCS-2 to Unicode\n\n      input = ucs2decode(input); // Cache the length\n\n      inputLength = input.length; // Initialize the state\n\n      n = initialN;\n      delta = 0;\n      bias = initialBias; // Handle the basic code points\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < 0x80) {\n          output.push(stringFromCharCode(currentValue));\n        }\n      }\n\n      handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n      // `basicLength` is the number of basic code points.\n      // Finish the basic string - if it is not empty - with a delimiter\n\n      if (basicLength) {\n        output.push(delimiter);\n      } // Main encoding loop:\n\n\n      while (handledCPCount < inputLength) {\n        // All non-basic code points < n have been handled already. Find the next\n        // larger one:\n        for (m = maxInt, j = 0; j < inputLength; ++j) {\n          currentValue = input[j];\n\n          if (currentValue >= n && currentValue < m) {\n            m = currentValue;\n          }\n        } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n        // but guard against overflow\n\n\n        handledCPCountPlusOne = handledCPCount + 1;\n\n        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n          error('overflow');\n        }\n\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n\n        for (j = 0; j < inputLength; ++j) {\n          currentValue = input[j];\n\n          if (currentValue < n && ++delta > maxInt) {\n            error('overflow');\n          }\n\n          if (currentValue == n) {\n            // Represent delta as a generalized variable-length integer\n            for (q = delta, k = base;;\n            /* no condition */\n            k += base) {\n              t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n              if (q < t) {\n                break;\n              }\n\n              qMinusT = q - t;\n              baseMinusT = base - t;\n              output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n              q = floor(qMinusT / baseMinusT);\n            }\n\n            output.push(stringFromCharCode(digitToBasic(q, 0)));\n            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n            delta = 0;\n            ++handledCPCount;\n          }\n        }\n\n        ++delta;\n        ++n;\n      }\n\n      return output.join('');\n    }\n    /**\n     * Converts a Punycode string representing a domain name or an email address\n     * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n     * it doesn't matter if you call it on a string that has already been\n     * converted to Unicode.\n     * @memberOf punycode\n     * @param {String} input The Punycoded domain name or email address to\n     * convert to Unicode.\n     * @returns {String} The Unicode representation of the given Punycode\n     * string.\n     */\n\n\n    function toUnicode(input) {\n      return mapDomain(input, function (string) {\n        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n      });\n    }\n    /**\n     * Converts a Unicode string representing a domain name or an email address to\n     * Punycode. Only the non-ASCII parts of the domain name will be converted,\n     * i.e. it doesn't matter if you call it with a domain that's already in\n     * ASCII.\n     * @memberOf punycode\n     * @param {String} input The domain name or email address to convert, as a\n     * Unicode string.\n     * @returns {String} The Punycode representation of the given domain name or\n     * email address.\n     */\n\n\n    function toASCII(input) {\n      return mapDomain(input, function (string) {\n        return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n      });\n    }\n    /*--------------------------------------------------------------------------*/\n\n    /** Define the public API */\n\n\n    punycode = {\n      /**\n       * A string representing the current Punycode.js version number.\n       * @memberOf punycode\n       * @type String\n       */\n      'version': '1.4.1',\n\n      /**\n       * An object of methods to convert from JavaScript's internal character\n       * representation (UCS-2) to Unicode code points, and back.\n       * @see <https://mathiasbynens.be/notes/javascript-encoding>\n       * @memberOf punycode\n       * @type Object\n       */\n      'ucs2': {\n        'decode': ucs2decode,\n        'encode': ucs2encode\n      },\n      'decode': decode,\n      'encode': encode,\n      'toASCII': toASCII,\n      'toUnicode': toUnicode\n    };\n    /** Expose `punycode` */\n    // Some AMD build optimizers, like r.js, check for specific condition patterns\n    // like the following:\n\n    if (freeExports && freeModule) {\n      if (module.exports == freeExports) {\n        // in Node.js, io.js, or RingoJS v0.8.0+\n        freeModule.exports = punycode;\n      } else {\n        // in Narwhal or RingoJS v0.7.0-\n        for (key in punycode) {\n          punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n        }\n      }\n    } else {\n      // in Rhino or a web browser\n      root.punycode = punycode;\n    }\n  })(commonjsGlobal);\n}); // Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\n\nfunction hasOwnProperty$1(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar isArray$1 = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nfunction stringify(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys$1(obj), function (k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n      if (isArray$1(obj[k])) {\n        return map(obj[k], function (v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n}\n\nfunction map(xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n\n  return res;\n}\n\nvar objectKeys$1 = Object.keys || function (obj) {\n  var res = [];\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n\n  return res;\n};\n\nfunction parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr,\n        vstr,\n        k,\n        v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty$1(obj, k)) {\n      obj[k] = v;\n    } else if (isArray$1(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n} // Copyright Joyent, Inc. and other Node contributors.\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\nunsafeProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  return parse$1(this, url, parseQueryString, slashesDenoteHost);\n};\n\nfunction parse$1(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  } // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\n\n  var queryIndex = url.indexOf('?'),\n      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n  var rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n\n        if (parseQueryString) {\n          self.query = parse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n\n  var i, hec, l, p;\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) hostEnd = rest.length;\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    parseHost(self); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    self.hostname = self.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = self.hostname[0] === '[' && self.hostname[self.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = punycode.toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host; // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  } // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n\n\n  if (!unsafeProtocol[lowerProto]) {\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) continue;\n      var esc = encodeURIComponent(ae);\n\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n\n      rest = rest.split(ae).join(esc);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n\n    if (parseQueryString) {\n      self.query = parse(self.query);\n    }\n\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n\n  if (rest) self.pathname = rest;\n\n  if (slashedProtocol[lowerProto] && self.hostname && !self.pathname) {\n    self.pathname = '/';\n  } //to support http.request\n\n\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  } // finally, reconstruct the href based on what has been validated.\n\n\n  self.href = format(self);\n  return self;\n} // format a parsed object into a url string\n\n\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse$1({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n      pathname = self.pathname || '',\n      hash = self.hash || '',\n      host = false,\n      query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ? self.hostname : '[' + this.hostname + ']');\n\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query && isObject(self.query) && Object.keys(self.query).length) {\n    query = stringify(self.query);\n  }\n\n  var search = self.search || query && '?' + query || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n\n  if (self.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function () {\n  return format(this);\n};\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nUrl.prototype.resolveObject = function (relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  } // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n\n\n  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.\n\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  } // hrefs like //foo/bar always cut to the protocol.\n\n\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n    } //urlParse appends trailing / to urls like http://www.example.com\n\n\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  var relPath;\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n\n      while (relPath.length && !(relative.host = relPath.shift())) {\n        ;\n      }\n\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port; // to support http.request\n\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || []; // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\n    }\n\n    result.host = '';\n\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\n      }\n\n      relative.host = null;\n    }\n\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  var authInHost;\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath; // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n      authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n\n    result.search = relative.search;\n    result.query = relative.query; //to support http.request\n\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null; //to support http.request\n\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n\n    result.href = result.format();\n    return result;\n  } // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n\n\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n\n  var up = 0;\n\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back\n\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n    authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || result.host && srcPath.length;\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  } //to support request.http\n\n\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) self.hostname = host;\n} //      \n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @private\n */\n\n\nvar FeeCalculatorLayout = nu64('lamportsPerSignature');\n/**\n * @typedef {Object} FeeCalculator\n * @property {number} lamportsPerSignature lamports Cost in lamports to validate a signature\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @private\n */\n\nvar NonceAccountLayout = struct([u32('version'), u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), struct([FeeCalculatorLayout], 'feeCalculator')]);\nvar NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n/**\n * NonceAccount class\n */\n\nvar NonceAccount = /*#__PURE__*/function () {\n  function NonceAccount() {\n    _classCallCheck(this, NonceAccount);\n\n    _defineProperty(this, \"authorizedPubkey\", void 0);\n\n    _defineProperty(this, \"nonce\", void 0);\n\n    _defineProperty(this, \"feeCalculator\", void 0);\n  }\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n\n\n  _createClass(NonceAccount, null, [{\n    key: \"fromAccountData\",\n    value: function fromAccountData(buffer) {\n      var nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n      nonceAccount.authorizedPubkey = new PublicKey(nonceAccount.authorizedPubkey);\n      nonceAccount.nonce = new PublicKey(nonceAccount.nonce).toString();\n      return nonceAccount;\n    }\n  }]);\n\n  return NonceAccount;\n}(); //      \n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @ignore\n */\n\n\nvar NUM_TICKS_PER_SECOND = 160;\n/**\n * @ignore\n */\n\nvar DEFAULT_TICKS_PER_SLOT = 64;\n/**\n * @ignore\n */\n\nvar NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n/**\n * @ignore\n */\n\nvar MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND; //      \n// zzz\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n} //      \n\n\nfunction promiseTimeout(promise, timeoutMs) {\n  var timeoutId;\n  var timeoutPromise = new Promise(function (resolve) {\n    timeoutId = setTimeout(function () {\n      return resolve(null);\n    }, timeoutMs);\n  });\n  return Promise.race([promise, timeoutPromise]).then(function (result) {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n\nvar PublicKeyFromString = coerce(instance(PublicKey), string(), function (value) {\n  return new PublicKey(value);\n});\nvar RawAccountDataResult = tuple([string(), literal('base64')]);\nvar BufferFromRawAccountData = coerce(instance(buffer.Buffer), RawAccountDataResult, function (value) {\n  return buffer.Buffer.from(value[0], 'base64');\n});\nvar BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n/**\n * Extra contextual information for RPC responses\n *\n * @typedef {Object} Context\n * @property {number} slot\n */\n\n/**\n * Options for sending transactions\n *\n * @typedef {Object} SendOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\n\n/**\n * Options for confirming transactions\n *\n * @typedef {Object} ConfirmOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} commitment desired commitment level\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n *\n * @typedef {Object} ConfirmedSignaturesForAddress2Options\n * @property {TransactionSignature | undefined} before start searching backwards from this transaction signature.\n *               If not provided the search starts from the highest max confirmed block.\n * @property {number | undefined} limit maximum transaction signatures to return (between 1 and 1,000, default: 1,000).\n *\n */\n\n/**\n * RPC Response with extra contextual information\n *\n * @typedef {Object} RpcResponseAndContext\n * @property {Context} context\n * @property {T} value response\n */\n\n/**\n * @private\n */\n\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result: result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(unknown())\n    })\n  })]);\n}\n\nvar UnknownRpcResult = createRpcResult(unknown());\n/**\n * @private\n */\n\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, function (value) {\n    if ('error' in value) {\n      return value;\n    } else {\n      return _objectSpread(_objectSpread({}, value), {}, {\n        result: create(value.result, schema)\n      });\n    }\n  });\n}\n/**\n * @private\n */\n\n\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value: value\n  }));\n}\n/**\n * @private\n */\n\n\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value: value\n  });\n}\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n *\n * @typedef {'processed' | 'confirmed' | 'finalized'} Commitment\n */\n// Deprecated as of v1.5.5\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n *\n * @typedef {'circulating' | 'nonCirculating'} LargestAccountsFilter\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n *\n * @typedef {Object} GetLargestAccountsConfig\n * @property {Commitment|undefined} commitment The level of commitment desired\n * @property {LargestAccountsFilter|undefined} filter Filter largest accounts by whether they are part of the circulating supply\n */\n\n/**\n * Configuration object for changing query behavior\n *\n * @typedef {Object} SignatureStatusConfig\n * @property {boolean} searchTransactionHistory enable searching status history, not needed for recent transactions\n */\n\n/**\n * Information describing a cluster node\n *\n * @typedef {Object} ContactInfo\n * @property {string} pubkey Identity public key of the node\n * @property {string|null} gossip Gossip network address for the node\n * @property {string|null} tpu TPU network address for the node (null if not available)\n * @property {string|null} rpc JSON RPC network address for the node (null if not available)\n * @property {string|null} version Software version of the node (null if not available)\n */\n\n/**\n * Information describing a vote account\n *\n * @typedef {Object} VoteAccountInfo\n * @property {string} votePubkey Public key of the vote account\n * @property {string} nodePubkey Identity public key of the node voting with this account\n * @property {number} activatedStake The stake, in lamports, delegated to this vote account and activated\n * @property {boolean} epochVoteAccount Whether the vote account is staked for this epoch\n * @property {Array<Array<number>>} epochCredits Recent epoch voting credit history for this voter\n * @property {number} commission A percentage (0-100) of rewards payout owed to the voter\n * @property {number} lastVote Most recent slot voted on by this vote account\n */\n\n/**\n * A collection of cluster vote accounts\n *\n * @typedef {Object} VoteAccountStatus\n * @property {Array<VoteAccountInfo>} current Active vote accounts\n * @property {Array<VoteAccountInfo>} delinquent Inactive vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n *\n * @typedef {Object} InflationGovernor\n * @property {number} foundation\n * @property {number} foundation_term\n * @property {number} initial\n * @property {number} taper\n * @property {number} terminal\n */\n\n\nvar GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n/**\n * Information about the current epoch\n *\n * @typedef {Object} EpochInfo\n * @property {number} epoch\n * @property {number} slotIndex\n * @property {number} slotsInEpoch\n * @property {number} absoluteSlot\n * @property {number} blockHeight\n * @property {number} transactionCount\n */\n\nvar GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n *\n * @typedef {Object} EpochSchedule\n * @property {number} slotsPerEpoch The maximum number of slots in each epoch\n * @property {number} leaderScheduleSlotOffset The number of slots before beginning of an epoch to calculate a leader schedule for that epoch\n * @property {boolean} warmup Indicates whether epochs start short and grow\n * @property {number} firstNormalEpoch The first epoch with `slotsPerEpoch` slots\n * @property {number} firstNormalSlot The first slot of `firstNormalEpoch`\n */\n\nvar GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n *\n * @typedef {Object} LeaderSchedule\n */\n// TODO: check if validating array(number()) is still extremely slow\n\nvar GetLeaderScheduleResult = record(string(), unknown());\n/**\n * Transaction error or null\n */\n\nvar TransactionErrorResult = nullable(type({}));\n/**\n * Signature status for a transaction\n */\n\nvar SignatureProcessedResult = type({\n  type: literal('processedSignature'),\n  err: TransactionErrorResult,\n  timestamp: number()\n});\n/**\n * Signature status for a transaction\n */\n\nvar SignatureReceivedResult = type({\n  type: literal('receivedSignature'),\n  timestamp: number()\n});\n/**\n * Signature status for a transaction\n */\n\nvar SignatureSubscribedResult = type({\n  type: literal('subscribedSignature'),\n  timestamp: number()\n});\n/**\n * Version info for a node\n *\n * @typedef {Object} Version\n * @property {string} solana-core Version of solana-core\n */\n\nvar Version = type({\n  'solana-core': string(),\n  'feature-set': optional(nullable(number()))\n});\nvar SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string()))\n}));\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<ParsedInnerInstruction>} innerInstructions An array of cross program invoked parsed instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<CompiledInnerInstruction>} innerInstructions An array of cross program invoked instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {Transaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\n\n/**\n * A partially decoded transaction instruction\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {PublicKey} accounts Indicates if the account signed the transaction\n * @property {string} data Raw base-58 instruction data\n */\n\n/**\n * A parsed transaction message account\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {boolean} signer Indicates if the account signed the transaction\n * @property {boolean} writable Indicates if the account is writable for this transaction\n */\n\n/**\n * A parsed transaction instruction\n *\n * @typedef {Object} ParsedInstruction\n * @property {string} program Name of the program for this instruction\n * @property {PublicKey} programId ID of the program for this instruction\n * @property {any} parsed Parsed instruction info\n */\n\n/**\n * A parsed transaction message\n *\n * @typedef {Object} ParsedMessage\n * @property {Array<ParsedMessageAccount>} accountKeys Accounts used in the instructions\n * @property {Array<ParsedInstruction | PartiallyDecodedInstruction>} instructions The atomically executed instructions for the transaction\n * @property {string} recentBlockhash Recent blockhash\n */\n\n/**\n * A parsed transaction\n *\n * @typedef {Object} ParsedTransaction\n * @property {Array<string>} signatures Signatures for the transaction\n * @property {ParsedMessage} message Message of the transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {ParsedTransaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\n\n/**\n * A ConfirmedBlock on the ledger\n *\n * @typedef {Object} ConfirmedBlock\n * @property {Blockhash} blockhash Blockhash of this block\n * @property {Blockhash} previousBlockhash Blockhash of this block's parent\n * @property {number} parentSlot Slot index of this block's parent\n * @property {Array<object>} transactions Vector of transactions and status metas\n * @property {Array<object>} rewards Vector of block rewards\n */\n\n/**\n * A performance sample\n *\n * @typedef {Object} PerfSample\n * @property {number} slot Slot number of sample\n * @property {number} numTransactions Number of transactions in a sample window\n * @property {number} numSlots Number of slots in a sample window\n * @property {number} samplePeriodSecs Sample window in seconds\n */\n\nfunction createRpcRequest(url, useHttps) {\n  var server = jayson( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(request, callback) {\n      var agent, options, too_many_requests_retries, res, waitTime, text;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              agent = undefined;\n              options = {\n                method: 'POST',\n                body: request,\n                agent: agent,\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context4.prev = 2;\n              too_many_requests_retries = 5;\n              res = {};\n              waitTime = 500;\n\n            case 6:\n              _context4.next = 8;\n              return fetch(url, options);\n\n            case 8:\n              res = _context4.sent;\n\n              if (!(res.status !== 429\n              /* Too many requests */\n              )) {\n                _context4.next = 11;\n                break;\n              }\n\n              return _context4.abrupt(\"break\", 20);\n\n            case 11:\n              too_many_requests_retries -= 1;\n\n              if (!(too_many_requests_retries === 0)) {\n                _context4.next = 14;\n                break;\n              }\n\n              return _context4.abrupt(\"break\", 20);\n\n            case 14:\n              console.log(\"Server responded with \".concat(res.status, \" \").concat(res.statusText, \".  Retrying after \").concat(waitTime, \"ms delay...\"));\n              _context4.next = 17;\n              return sleep(waitTime);\n\n            case 17:\n              waitTime *= 2;\n\n            case 18:\n              _context4.next = 6;\n              break;\n\n            case 20:\n              _context4.next = 22;\n              return res.text();\n\n            case 22:\n              text = _context4.sent;\n\n              if (res.ok) {\n                callback(null, text);\n              } else {\n                callback(new Error(\"\".concat(res.status, \" \").concat(res.statusText, \": \").concat(text)));\n              }\n\n              _context4.next = 29;\n              break;\n\n            case 26:\n              _context4.prev = 26;\n              _context4.t0 = _context4[\"catch\"](2);\n              callback(_context4.t0);\n\n            case 29:\n              _context4.prev = 29;\n              return _context4.finish(29);\n\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 26, 29, 31]]);\n    }));\n\n    return function (_x8, _x9) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return function (method, args) {\n    return new Promise(function (resolve, reject) {\n      server.request(method, args, function (err, response) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\n\n\nvar GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\n\nvar GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\n\nvar GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\n\nvar GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\n\nvar SlotRpcResult = jsonRpcResult(number());\n/**\n * Supply\n *\n * @typedef {Object} Supply\n * @property {number} total Total supply in lamports\n * @property {number} circulating Circulating supply in lamports\n * @property {number} nonCirculating Non-circulating supply in lamports\n * @property {Array<PublicKey>} nonCirculatingAccounts List of non-circulating account addresses\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\n\nvar GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n *\n * @typedef {Object} TokenAmount\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\n\nvar TokenAmountResult = type({\n  amount: string(),\n  uiAmount: number(),\n  decimals: number()\n});\n/**\n * Token address and balance.\n *\n * @typedef {Object} TokenAccountBalancePair\n * @property {PublicKey} address Address of the token account\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\n\nvar GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: number(),\n  decimals: number()\n})));\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\n\nvar GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nvar ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\n\nvar GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n/**\n * Pair of an account address and its balance\n *\n * @typedef {Object} AccountBalancePair\n * @property {PublicKey} address\n * @property {number} lamports\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\n\nvar GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n/**\n * @private\n */\n\nvar AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n/**\n * @private\n */\n\nvar KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nvar ParsedOrRawAccountData = coerce(union([instance(buffer.Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), function (value) {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n/**\n * @private\n */\n\nvar ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nvar KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n/**\n * @private\n */\n\nvar StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress\" message\n */\n\nvar GetConfirmedSignaturesForAddressRpcResult = jsonRpcResult(array(string()));\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nvar GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\n\nvar AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n/**\n * @private\n */\n\nvar ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\n\nvar ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n/**\n * @private\n */\n\nvar SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\n\nvar SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n/**\n * @private\n */\n\nvar SlotUpdateResult = union([type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  entry_stats: type({\n    numTransactions: number(),\n    numEntries: number(),\n    maxTxPerEntry: number()\n  })\n}), object({\n  type: string(),\n  slot: number(),\n  timestamp: number()\n})]);\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\n\nvar SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\n\nvar SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureProcessedResult, SignatureReceivedResult, SignatureSubscribedResult]))\n});\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\n\nvar RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nvar ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nvar VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\n\nvar GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nvar SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(nullable(string()))\n});\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\n\nvar GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\n\nvar GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n/**\n * @private\n */\n\nvar ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string()\n  })\n});\nvar TransactionFromConfirmed = coerce(instance(Transaction), ConfirmedTransactionResult, function (result) {\n  var message = result.message,\n      signatures = result.signatures;\n  return Transaction.populate(new Message(message), signatures);\n});\nvar ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nvar RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nvar InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nvar UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nvar ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, function (value) {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n/**\n * @private\n */\n\nvar ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(type({\n      pubkey: PublicKeyFromString,\n      signer: boolean(),\n      writable: boolean()\n    })),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string()\n  })\n});\nvar TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult\n});\n/**\n * @private\n */\n\nvar ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * @private\n */\n\nvar ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\n\nvar GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: TransactionFromConfirmed,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  })))\n})));\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\n\nvar GetConfirmedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: TransactionFromConfirmed,\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\n\nvar GetParsedConfirmedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\n\nvar GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\nvar PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\n\nvar GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\n\nvar GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\n\nvar RequestAirdropRpcResult = jsonRpcResult(string());\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\n\nvar SendTransactionRpcResult = jsonRpcResult(string());\n/**\n * Information about the latest slot being processed by a node\n *\n * @typedef {Object} SlotInfo\n * @property {number} slot Currently processing slot\n * @property {number} parent Parent of the current slot\n * @property {number} root The root block of the current slot's fork\n */\n\n/**\n * Parsed account data\n *\n * @typedef {Object} ParsedAccountData\n * @property {string} program Name of the program that owns this account\n * @property {any} parsed Parsed account data\n * @property {number} space Space used by account data\n */\n\n/**\n * Stake Activation data\n *\n * @typedef {Object} StakeActivationData\n * @property {string} state: <string - the stake account's activation state, one of: active, inactive, activating, deactivating\n * @property {number} active: stake active during the epoch\n * @property {number} inactive: stake inactive during the epoch\n */\n\n/**\n * Information describing an account\n *\n * @typedef {Object} AccountInfo\n * @property {number} lamports Number of lamports assigned to the account\n * @property {PublicKey} owner Identifier of the program that owns the account\n * @property {T} data Optional data assigned to the account\n * @property {boolean} executable `true` if this account's data contains a loaded program\n */\n\n/**\n * Account information identified by pubkey\n *\n * @typedef {Object} KeyedAccountInfo\n * @property {PublicKey} accountId\n * @property {AccountInfo<Buffer>} accountInfo\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * @private\n */\n\n/**\n * @private\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * @private\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * @private\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * @private\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * @private\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @private\n */\n\n/**\n * Signature result\n *\n * @typedef {Object} SignatureResult\n */\n\n/**\n * Transaction error\n *\n * @typedef {Object} TransactionError\n */\n\n/**\n * Signature status\n *\n * @typedef {Object} SignatureStatus\n * @property {number} slot when the transaction was processed\n * @property {number | null} confirmations the number of blocks that have been confirmed and voted on in the fork containing `slot` (TODO)\n * @property {TransactionError | null} err error, if any\n * @property {string | null} confirmationStatus the transaction's cluster confirmation status, if data available. Possible non-null responses: `processed`, `confirmed`, `finalized`\n */\n\n/**\n * A confirmed signature with its status\n *\n * @typedef {Object} ConfirmedSignatureInfo\n * @property {string} signature the transaction signature\n * @property {number} slot when the transaction was processed\n * @property {TransactionError | null} err error, if any\n * @property {string | null} memo memo associated with the transaction, if any\n * @property {number | null | undefined} blockTime The unix timestamp of when the transaction was processed\n */\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\n\nvar Connection = /*#__PURE__*/function () {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitment optional default commitment level\n   */\n  function Connection(endpoint, commitment) {\n    _classCallCheck(this, Connection);\n\n    _defineProperty(this, \"_rpcEndpoint\", void 0);\n\n    _defineProperty(this, \"_rpcRequest\", void 0);\n\n    _defineProperty(this, \"_rpcWebSocket\", void 0);\n\n    _defineProperty(this, \"_rpcWebSocketConnected\", false);\n\n    _defineProperty(this, \"_rpcWebSocketHeartbeat\", null);\n\n    _defineProperty(this, \"_rpcWebSocketIdleTimeout\", null);\n\n    _defineProperty(this, \"_commitment\", void 0);\n\n    _defineProperty(this, \"_blockhashInfo\", void 0);\n\n    _defineProperty(this, \"_disableBlockhashCaching\", false);\n\n    _defineProperty(this, \"_pollingBlockhash\", false);\n\n    _defineProperty(this, \"_accountChangeSubscriptions\", {});\n\n    _defineProperty(this, \"_accountChangeSubscriptionCounter\", 0);\n\n    _defineProperty(this, \"_programAccountChangeSubscriptions\", {});\n\n    _defineProperty(this, \"_programAccountChangeSubscriptionCounter\", 0);\n\n    _defineProperty(this, \"_slotSubscriptions\", {});\n\n    _defineProperty(this, \"_slotSubscriptionCounter\", 0);\n\n    _defineProperty(this, \"_slotUpdateSubscriptions\", {});\n\n    _defineProperty(this, \"_slotUpdateSubscriptionCounter\", 0);\n\n    _defineProperty(this, \"_signatureSubscriptions\", {});\n\n    _defineProperty(this, \"_signatureSubscriptionCounter\", 0);\n\n    _defineProperty(this, \"_rootSubscriptions\", {});\n\n    _defineProperty(this, \"_rootSubscriptionCounter\", 0);\n\n    this._rpcEndpoint = endpoint;\n    var url = urlParse(endpoint);\n    var useHttps = url.protocol === 'https:';\n    this._rpcRequest = createRpcRequest(url.href);\n    this._commitment = commitment;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: new Date(0),\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    url.protocol = useHttps ? 'wss:' : 'ws:';\n    url.host = ''; // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n\n    if (url.port !== null) {\n      url.port = String(Number(url.port) + 1);\n    }\n\n    this._rpcWebSocket = new Client(urlFormat(url), {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n  }\n  /**\n   * The default commitment used for requests\n   */\n\n\n  _createClass(Connection, [{\n    key: \"commitment\",\n    get: function get() {\n      return this._commitment;\n    }\n    /**\n     * Fetch the balance for the specified public key, return with context\n     */\n\n  }, {\n    key: \"getBalanceAndContext\",\n    value: function () {\n      var _getBalanceAndContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(publicKey, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                args = this._buildArgs([publicKey.toBase58()], commitment);\n                _context5.next = 3;\n                return this._rpcRequest('getBalance', args);\n\n              case 3:\n                unsafeRes = _context5.sent;\n                res = create(unsafeRes, jsonRpcResultAndContext(number()));\n\n                if (!res.error) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get balance for ' + publicKey.toBase58() + ': ' + res.error.message);\n\n              case 7:\n                return _context5.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getBalanceAndContext(_x10, _x11) {\n        return _getBalanceAndContext.apply(this, arguments);\n      }\n\n      return getBalanceAndContext;\n    }()\n    /**\n     * Fetch the balance for the specified public key\n     */\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(publicKey, commitment) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getBalanceAndContext(publicKey, commitment).then(function (x) {\n                  return x.value;\n                }).catch(function (e) {\n                  throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n                });\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getBalance(_x12, _x13) {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n    /**\n     * Fetch the estimated production time of a block\n     */\n\n  }, {\n    key: \"getBlockTime\",\n    value: function () {\n      var _getBlockTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(slot) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this._rpcRequest('getBlockTime', [slot]);\n\n              case 2:\n                unsafeRes = _context7.sent;\n                res = create(unsafeRes, jsonRpcResult(nullable(number())));\n\n                if (!res.error) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get block time for slot ' + slot + ': ' + res.error.message);\n\n              case 6:\n                return _context7.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getBlockTime(_x14) {\n        return _getBlockTime.apply(this, arguments);\n      }\n\n      return getBlockTime;\n    }()\n    /**\n     * Fetch the lowest slot that the node has information about in its ledger.\n     * This value may increase over time if the node is configured to purge older ledger data\n     */\n\n  }, {\n    key: \"getMinimumLedgerSlot\",\n    value: function () {\n      var _getMinimumLedgerSlot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this._rpcRequest('minimumLedgerSlot', []);\n\n              case 2:\n                unsafeRes = _context8.sent;\n                res = create(unsafeRes, jsonRpcResult(number()));\n\n                if (!res.error) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get minimum ledger slot: ' + res.error.message);\n\n              case 6:\n                return _context8.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getMinimumLedgerSlot() {\n        return _getMinimumLedgerSlot.apply(this, arguments);\n      }\n\n      return getMinimumLedgerSlot;\n    }()\n    /**\n     * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n     */\n\n  }, {\n    key: \"getFirstAvailableBlock\",\n    value: function () {\n      var _getFirstAvailableBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this._rpcRequest('getFirstAvailableBlock', []);\n\n              case 2:\n                unsafeRes = _context9.sent;\n                res = create(unsafeRes, SlotRpcResult);\n\n                if (!res.error) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get first available block: ' + res.error.message);\n\n              case 6:\n                return _context9.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getFirstAvailableBlock() {\n        return _getFirstAvailableBlock.apply(this, arguments);\n      }\n\n      return getFirstAvailableBlock;\n    }()\n    /**\n     * Fetch information about the current supply\n     */\n\n  }, {\n    key: \"getSupply\",\n    value: function () {\n      var _getSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context10.next = 3;\n                return this._rpcRequest('getSupply', args);\n\n              case 3:\n                unsafeRes = _context10.sent;\n                res = create(unsafeRes, GetSupplyRpcResult);\n\n                if (!res.error) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get supply: ' + res.error.message);\n\n              case 7:\n                return _context10.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getSupply(_x15) {\n        return _getSupply.apply(this, arguments);\n      }\n\n      return getSupply;\n    }()\n    /**\n     * Fetch the current supply of a token mint\n     */\n\n  }, {\n    key: \"getTokenSupply\",\n    value: function () {\n      var _getTokenSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(tokenMintAddress, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n                _context11.next = 3;\n                return this._rpcRequest('getTokenSupply', args);\n\n              case 3:\n                unsafeRes = _context11.sent;\n                res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n                if (!res.error) {\n                  _context11.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get token supply: ' + res.error.message);\n\n              case 7:\n                return _context11.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getTokenSupply(_x16, _x17) {\n        return _getTokenSupply.apply(this, arguments);\n      }\n\n      return getTokenSupply;\n    }()\n    /**\n     * Fetch the current balance of a token account\n     */\n\n  }, {\n    key: \"getTokenAccountBalance\",\n    value: function () {\n      var _getTokenAccountBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(tokenAddress, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                args = this._buildArgs([tokenAddress.toBase58()], commitment);\n                _context12.next = 3;\n                return this._rpcRequest('getTokenAccountBalance', args);\n\n              case 3:\n                unsafeRes = _context12.sent;\n                res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n                if (!res.error) {\n                  _context12.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get token account balance: ' + res.error.message);\n\n              case 7:\n                return _context12.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getTokenAccountBalance(_x18, _x19) {\n        return _getTokenAccountBalance.apply(this, arguments);\n      }\n\n      return getTokenAccountBalance;\n    }()\n    /**\n     * Fetch all the token accounts owned by the specified account\n     *\n     * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n     */\n\n  }, {\n    key: \"getTokenAccountsByOwner\",\n    value: function () {\n      var _getTokenAccountsByOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(ownerAddress, filter, commitment) {\n        var _args, args, unsafeRes, res;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _args = [ownerAddress.toBase58()];\n\n                if (filter.mint) {\n                  _args.push({\n                    mint: filter.mint.toBase58()\n                  });\n                } else {\n                  _args.push({\n                    programId: filter.programId.toBase58()\n                  });\n                }\n\n                args = this._buildArgs(_args, commitment, 'base64');\n                _context13.next = 5;\n                return this._rpcRequest('getTokenAccountsByOwner', args);\n\n              case 5:\n                unsafeRes = _context13.sent;\n                res = create(unsafeRes, GetTokenAccountsByOwner);\n\n                if (!res.error) {\n                  _context13.next = 9;\n                  break;\n                }\n\n                throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n\n              case 9:\n                return _context13.abrupt(\"return\", res.result);\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getTokenAccountsByOwner(_x20, _x21, _x22) {\n        return _getTokenAccountsByOwner.apply(this, arguments);\n      }\n\n      return getTokenAccountsByOwner;\n    }()\n    /**\n     * Fetch parsed token accounts owned by the specified account\n     *\n     * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n     */\n\n  }, {\n    key: \"getParsedTokenAccountsByOwner\",\n    value: function () {\n      var _getParsedTokenAccountsByOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(ownerAddress, filter, commitment) {\n        var _args, args, unsafeRes, res;\n\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _args = [ownerAddress.toBase58()];\n\n                if (filter.mint) {\n                  _args.push({\n                    mint: filter.mint.toBase58()\n                  });\n                } else {\n                  _args.push({\n                    programId: filter.programId.toBase58()\n                  });\n                }\n\n                args = this._buildArgs(_args, commitment, 'jsonParsed');\n                _context14.next = 5;\n                return this._rpcRequest('getTokenAccountsByOwner', args);\n\n              case 5:\n                unsafeRes = _context14.sent;\n                res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n\n                if (!res.error) {\n                  _context14.next = 9;\n                  break;\n                }\n\n                throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n\n              case 9:\n                return _context14.abrupt(\"return\", res.result);\n\n              case 10:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getParsedTokenAccountsByOwner(_x23, _x24, _x25) {\n        return _getParsedTokenAccountsByOwner.apply(this, arguments);\n      }\n\n      return getParsedTokenAccountsByOwner;\n    }()\n    /**\n     * Fetch the 20 largest accounts with their current balances\n     */\n\n  }, {\n    key: \"getLargestAccounts\",\n    value: function () {\n      var _getLargestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(config) {\n        var arg, args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                arg = _objectSpread(_objectSpread({}, config), {}, {\n                  commitment: config && config.commitment || this.commitment\n                });\n                args = arg.filter || arg.commitment ? [arg] : [];\n                _context15.next = 4;\n                return this._rpcRequest('getLargestAccounts', args);\n\n              case 4:\n                unsafeRes = _context15.sent;\n                res = create(unsafeRes, GetLargestAccountsRpcResult);\n\n                if (!res.error) {\n                  _context15.next = 8;\n                  break;\n                }\n\n                throw new Error('failed to get largest accounts: ' + res.error.message);\n\n              case 8:\n                return _context15.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function getLargestAccounts(_x26) {\n        return _getLargestAccounts.apply(this, arguments);\n      }\n\n      return getLargestAccounts;\n    }()\n    /**\n     * Fetch the 20 largest token accounts with their current balances\n     * for a given mint.\n     */\n\n  }, {\n    key: \"getTokenLargestAccounts\",\n    value: function () {\n      var _getTokenLargestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(mintAddress, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                args = this._buildArgs([mintAddress.toBase58()], commitment);\n                _context16.next = 3;\n                return this._rpcRequest('getTokenLargestAccounts', args);\n\n              case 3:\n                unsafeRes = _context16.sent;\n                res = create(unsafeRes, GetTokenLargestAccountsResult);\n\n                if (!res.error) {\n                  _context16.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get token largest accounts: ' + res.error.message);\n\n              case 7:\n                return _context16.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getTokenLargestAccounts(_x27, _x28) {\n        return _getTokenLargestAccounts.apply(this, arguments);\n      }\n\n      return getTokenLargestAccounts;\n    }()\n    /**\n     * Fetch all the account info for the specified public key, return with context\n     */\n\n  }, {\n    key: \"getAccountInfoAndContext\",\n    value: function () {\n      var _getAccountInfoAndContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(publicKey, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n                _context17.next = 3;\n                return this._rpcRequest('getAccountInfo', args);\n\n              case 3:\n                unsafeRes = _context17.sent;\n                res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n\n                if (!res.error) {\n                  _context17.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n\n              case 7:\n                return _context17.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getAccountInfoAndContext(_x29, _x30) {\n        return _getAccountInfoAndContext.apply(this, arguments);\n      }\n\n      return getAccountInfoAndContext;\n    }()\n    /**\n     * Fetch parsed account info for the specified public key\n     */\n\n  }, {\n    key: \"getParsedAccountInfo\",\n    value: function () {\n      var _getParsedAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(publicKey, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed');\n                _context18.next = 3;\n                return this._rpcRequest('getAccountInfo', args);\n\n              case 3:\n                unsafeRes = _context18.sent;\n                res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n\n                if (!res.error) {\n                  _context18.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n\n              case 7:\n                return _context18.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getParsedAccountInfo(_x31, _x32) {\n        return _getParsedAccountInfo.apply(this, arguments);\n      }\n\n      return getParsedAccountInfo;\n    }()\n    /**\n     * Fetch all the account info for the specified public key\n     */\n\n  }, {\n    key: \"getAccountInfo\",\n    value: function () {\n      var _getAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(publicKey, commitment) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.prev = 0;\n                _context19.next = 3;\n                return this.getAccountInfoAndContext(publicKey, commitment);\n\n              case 3:\n                res = _context19.sent;\n                return _context19.abrupt(\"return\", res.value);\n\n              case 7:\n                _context19.prev = 7;\n                _context19.t0 = _context19[\"catch\"](0);\n                throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + _context19.t0);\n\n              case 10:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[0, 7]]);\n      }));\n\n      function getAccountInfo(_x33, _x34) {\n        return _getAccountInfo.apply(this, arguments);\n      }\n\n      return getAccountInfo;\n    }()\n    /**\n     * Returns epoch activation information for a stake account that has been delegated\n     */\n\n  }, {\n    key: \"getStakeActivation\",\n    value: function () {\n      var _getStakeActivation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(publicKey, commitment, epoch) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                args = this._buildArgs([publicKey.toBase58()], commitment, undefined, epoch !== undefined ? {\n                  epoch: epoch\n                } : undefined);\n                _context20.next = 3;\n                return this._rpcRequest('getStakeActivation', args);\n\n              case 3:\n                unsafeRes = _context20.sent;\n                res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n\n                if (!res.error) {\n                  _context20.next = 7;\n                  break;\n                }\n\n                throw new Error(\"failed to get Stake Activation \".concat(publicKey.toBase58(), \": \").concat(res.error.message));\n\n              case 7:\n                return _context20.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function getStakeActivation(_x35, _x36, _x37) {\n        return _getStakeActivation.apply(this, arguments);\n      }\n\n      return getStakeActivation;\n    }()\n    /**\n     * Fetch all the accounts owned by the specified program id\n     *\n     * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n     */\n\n  }, {\n    key: \"getProgramAccounts\",\n    value: function () {\n      var _getProgramAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(programId, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                args = this._buildArgs([programId.toBase58()], commitment, 'base64');\n                _context21.next = 3;\n                return this._rpcRequest('getProgramAccounts', args);\n\n              case 3:\n                unsafeRes = _context21.sent;\n                res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n\n                if (!res.error) {\n                  _context21.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n\n              case 7:\n                return _context21.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getProgramAccounts(_x38, _x39) {\n        return _getProgramAccounts.apply(this, arguments);\n      }\n\n      return getProgramAccounts;\n    }()\n    /**\n     * Fetch and parse all the accounts owned by the specified program id\n     *\n     * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n     */\n\n  }, {\n    key: \"getParsedProgramAccounts\",\n    value: function () {\n      var _getParsedProgramAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(programId, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed');\n                _context22.next = 3;\n                return this._rpcRequest('getProgramAccounts', args);\n\n              case 3:\n                unsafeRes = _context22.sent;\n                res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n\n                if (!res.error) {\n                  _context22.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n\n              case 7:\n                return _context22.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function getParsedProgramAccounts(_x40, _x41) {\n        return _getParsedProgramAccounts.apply(this, arguments);\n      }\n\n      return getParsedProgramAccounts;\n    }()\n    /**\n     * Confirm the transaction identified by the specified signature.\n     */\n\n  }, {\n    key: \"confirmTransaction\",\n    value: function () {\n      var _confirmTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(signature, commitment) {\n        var _this10 = this;\n\n        var decodedSignature, start, subscriptionCommitment, subscriptionId, response, confirmPromise, timeoutMs, duration;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.prev = 0;\n                decodedSignature = bs58.decode(signature);\n                _context23.next = 7;\n                break;\n\n              case 4:\n                _context23.prev = 4;\n                _context23.t0 = _context23[\"catch\"](0);\n                throw new Error('signature must be base58 encoded: ' + signature);\n\n              case 7:\n                assert(decodedSignature.length === 64, 'signature has invalid length');\n                start = Date.now();\n                subscriptionCommitment = commitment || this.commitment;\n                response = null;\n                confirmPromise = new Promise(function (resolve, reject) {\n                  try {\n                    subscriptionId = _this10.onSignature(signature, function (result, context) {\n                      subscriptionId = undefined;\n                      response = {\n                        context: context,\n                        value: result\n                      };\n                      resolve();\n                    }, subscriptionCommitment);\n                  } catch (err) {\n                    reject(err);\n                  }\n                });\n                timeoutMs = 60 * 1000;\n                _context23.t1 = subscriptionCommitment;\n                _context23.next = _context23.t1 === 'processed' ? 16 : _context23.t1 === 'recent' ? 16 : _context23.t1 === 'single' ? 16 : _context23.t1 === 'confirmed' ? 16 : _context23.t1 === 'singleGossip' ? 16 : 18;\n                break;\n\n              case 16:\n                timeoutMs = 30 * 1000;\n                return _context23.abrupt(\"break\", 18);\n\n              case 18:\n                _context23.prev = 18;\n                _context23.next = 21;\n                return promiseTimeout(confirmPromise, timeoutMs);\n\n              case 21:\n                _context23.prev = 21;\n\n                if (subscriptionId) {\n                  this.removeSignatureListener(subscriptionId);\n                }\n\n                return _context23.finish(21);\n\n              case 24:\n                if (!(response === null)) {\n                  _context23.next = 27;\n                  break;\n                }\n\n                duration = (Date.now() - start) / 1000;\n                throw new Error(\"Transaction was not confirmed in \".concat(duration.toFixed(2), \" seconds. It is unknown if it succeeded or failed. Check signature \").concat(signature, \" using the Solana Explorer or CLI tools.\"));\n\n              case 27:\n                return _context23.abrupt(\"return\", response);\n\n              case 28:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[0, 4], [18,, 21, 24]]);\n      }));\n\n      function confirmTransaction(_x42, _x43) {\n        return _confirmTransaction.apply(this, arguments);\n      }\n\n      return confirmTransaction;\n    }()\n    /**\n     * Return the list of nodes that are currently participating in the cluster\n     */\n\n  }, {\n    key: \"getClusterNodes\",\n    value: function () {\n      var _getClusterNodes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this._rpcRequest('getClusterNodes', []);\n\n              case 2:\n                unsafeRes = _context24.sent;\n                res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n\n                if (!res.error) {\n                  _context24.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get cluster nodes: ' + res.error.message);\n\n              case 6:\n                return _context24.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function getClusterNodes() {\n        return _getClusterNodes.apply(this, arguments);\n      }\n\n      return getClusterNodes;\n    }()\n    /**\n     * Return the list of nodes that are currently participating in the cluster\n     */\n\n  }, {\n    key: \"getVoteAccounts\",\n    value: function () {\n      var _getVoteAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context25.next = 3;\n                return this._rpcRequest('getVoteAccounts', args);\n\n              case 3:\n                unsafeRes = _context25.sent;\n                res = create(unsafeRes, GetVoteAccounts);\n\n                if (!res.error) {\n                  _context25.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get vote accounts: ' + res.error.message);\n\n              case 7:\n                return _context25.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getVoteAccounts(_x44) {\n        return _getVoteAccounts.apply(this, arguments);\n      }\n\n      return getVoteAccounts;\n    }()\n    /**\n     * Fetch the current slot that the node is processing\n     */\n\n  }, {\n    key: \"getSlot\",\n    value: function () {\n      var _getSlot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context26.next = 3;\n                return this._rpcRequest('getSlot', args);\n\n              case 3:\n                unsafeRes = _context26.sent;\n                res = create(unsafeRes, jsonRpcResult(number()));\n\n                if (!res.error) {\n                  _context26.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get slot: ' + res.error.message);\n\n              case 7:\n                return _context26.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function getSlot(_x45) {\n        return _getSlot.apply(this, arguments);\n      }\n\n      return getSlot;\n    }()\n    /**\n     * Fetch the current slot leader of the cluster\n     */\n\n  }, {\n    key: \"getSlotLeader\",\n    value: function () {\n      var _getSlotLeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context27.next = 3;\n                return this._rpcRequest('getSlotLeader', args);\n\n              case 3:\n                unsafeRes = _context27.sent;\n                res = create(unsafeRes, jsonRpcResult(string()));\n\n                if (!res.error) {\n                  _context27.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get slot leader: ' + res.error.message);\n\n              case 7:\n                return _context27.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function getSlotLeader(_x46) {\n        return _getSlotLeader.apply(this, arguments);\n      }\n\n      return getSlotLeader;\n    }()\n    /**\n     * Fetch the current status of a signature\n     */\n\n  }, {\n    key: \"getSignatureStatus\",\n    value: function () {\n      var _getSignatureStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(signature, config) {\n        var _yield$this$getSignat, context, values, value;\n\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.next = 2;\n                return this.getSignatureStatuses([signature], config);\n\n              case 2:\n                _yield$this$getSignat = _context28.sent;\n                context = _yield$this$getSignat.context;\n                values = _yield$this$getSignat.value;\n                assert(values.length === 1);\n                value = values[0];\n                return _context28.abrupt(\"return\", {\n                  context: context,\n                  value: value\n                });\n\n              case 8:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function getSignatureStatus(_x47, _x48) {\n        return _getSignatureStatus.apply(this, arguments);\n      }\n\n      return getSignatureStatus;\n    }()\n    /**\n     * Fetch the current statuses of a batch of signatures\n     */\n\n  }, {\n    key: \"getSignatureStatuses\",\n    value: function () {\n      var _getSignatureStatuses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(signatures, config) {\n        var params, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                params = [signatures];\n\n                if (config) {\n                  params.push(config);\n                }\n\n                _context29.next = 4;\n                return this._rpcRequest('getSignatureStatuses', params);\n\n              case 4:\n                unsafeRes = _context29.sent;\n                res = create(unsafeRes, GetSignatureStatusesRpcResult);\n\n                if (!res.error) {\n                  _context29.next = 8;\n                  break;\n                }\n\n                throw new Error('failed to get signature status: ' + res.error.message);\n\n              case 8:\n                return _context29.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function getSignatureStatuses(_x49, _x50) {\n        return _getSignatureStatuses.apply(this, arguments);\n      }\n\n      return getSignatureStatuses;\n    }()\n    /**\n     * Fetch the current transaction count of the cluster\n     */\n\n  }, {\n    key: \"getTransactionCount\",\n    value: function () {\n      var _getTransactionCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context30.next = 3;\n                return this._rpcRequest('getTransactionCount', args);\n\n              case 3:\n                unsafeRes = _context30.sent;\n                res = create(unsafeRes, jsonRpcResult(number()));\n\n                if (!res.error) {\n                  _context30.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get transaction count: ' + res.error.message);\n\n              case 7:\n                return _context30.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function getTransactionCount(_x51) {\n        return _getTransactionCount.apply(this, arguments);\n      }\n\n      return getTransactionCount;\n    }()\n    /**\n     * Fetch the current total currency supply of the cluster in lamports\n     */\n\n  }, {\n    key: \"getTotalSupply\",\n    value: function () {\n      var _getTotalSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context31.next = 3;\n                return this._rpcRequest('getTotalSupply', args);\n\n              case 3:\n                unsafeRes = _context31.sent;\n                res = create(unsafeRes, jsonRpcResult(number()));\n\n                if (!res.error) {\n                  _context31.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get total supply: ' + res.error.message);\n\n              case 7:\n                return _context31.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function getTotalSupply(_x52) {\n        return _getTotalSupply.apply(this, arguments);\n      }\n\n      return getTotalSupply;\n    }()\n    /**\n     * Fetch the cluster InflationGovernor parameters\n     */\n\n  }, {\n    key: \"getInflationGovernor\",\n    value: function () {\n      var _getInflationGovernor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context32.next = 3;\n                return this._rpcRequest('getInflationGovernor', args);\n\n              case 3:\n                unsafeRes = _context32.sent;\n                res = create(unsafeRes, GetInflationGovernorRpcResult);\n\n                if (!res.error) {\n                  _context32.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get inflation: ' + res.error.message);\n\n              case 7:\n                return _context32.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function getInflationGovernor(_x53) {\n        return _getInflationGovernor.apply(this, arguments);\n      }\n\n      return getInflationGovernor;\n    }()\n    /**\n     * Fetch the Epoch Info parameters\n     */\n\n  }, {\n    key: \"getEpochInfo\",\n    value: function () {\n      var _getEpochInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context33.next = 3;\n                return this._rpcRequest('getEpochInfo', args);\n\n              case 3:\n                unsafeRes = _context33.sent;\n                res = create(unsafeRes, GetEpochInfoRpcResult);\n\n                if (!res.error) {\n                  _context33.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get epoch info: ' + res.error.message);\n\n              case 7:\n                return _context33.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getEpochInfo(_x54) {\n        return _getEpochInfo.apply(this, arguments);\n      }\n\n      return getEpochInfo;\n    }()\n    /**\n     * Fetch the Epoch Schedule parameters\n     */\n\n  }, {\n    key: \"getEpochSchedule\",\n    value: function () {\n      var _getEpochSchedule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                _context34.next = 2;\n                return this._rpcRequest('getEpochSchedule', []);\n\n              case 2:\n                unsafeRes = _context34.sent;\n                res = create(unsafeRes, GetEpochScheduleRpcResult);\n\n                if (!res.error) {\n                  _context34.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get epoch schedule: ' + res.error.message);\n\n              case 6:\n                return _context34.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function getEpochSchedule() {\n        return _getEpochSchedule.apply(this, arguments);\n      }\n\n      return getEpochSchedule;\n    }()\n    /**\n     * Fetch the leader schedule for the current epoch\n     * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n     */\n\n  }, {\n    key: \"getLeaderSchedule\",\n    value: function () {\n      var _getLeaderSchedule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                _context35.next = 2;\n                return this._rpcRequest('getLeaderSchedule', []);\n\n              case 2:\n                unsafeRes = _context35.sent;\n                res = create(unsafeRes, GetLeaderScheduleRpcResult);\n\n                if (!res.error) {\n                  _context35.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get leader schedule: ' + res.error.message);\n\n              case 6:\n                return _context35.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function getLeaderSchedule() {\n        return _getLeaderSchedule.apply(this, arguments);\n      }\n\n      return getLeaderSchedule;\n    }()\n    /**\n     * Fetch the minimum balance needed to exempt an account of `dataLength`\n     * size from rent\n     */\n\n  }, {\n    key: \"getMinimumBalanceForRentExemption\",\n    value: function () {\n      var _getMinimumBalanceForRentExemption = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(dataLength, commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                args = this._buildArgs([dataLength], commitment);\n                _context36.next = 3;\n                return this._rpcRequest('getMinimumBalanceForRentExemption', args);\n\n              case 3:\n                unsafeRes = _context36.sent;\n                res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n\n                if (!res.error) {\n                  _context36.next = 8;\n                  break;\n                }\n\n                console.warn('Unable to fetch minimum balance for rent exemption');\n                return _context36.abrupt(\"return\", 0);\n\n              case 8:\n                return _context36.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function getMinimumBalanceForRentExemption(_x55, _x56) {\n        return _getMinimumBalanceForRentExemption.apply(this, arguments);\n      }\n\n      return getMinimumBalanceForRentExemption;\n    }()\n    /**\n     * Fetch a recent blockhash from the cluster, return with context\n     * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n     */\n\n  }, {\n    key: \"getRecentBlockhashAndContext\",\n    value: function () {\n      var _getRecentBlockhashAndContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(commitment) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                args = this._buildArgs([], commitment);\n                _context37.next = 3;\n                return this._rpcRequest('getRecentBlockhash', args);\n\n              case 3:\n                unsafeRes = _context37.sent;\n                res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n\n                if (!res.error) {\n                  _context37.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get recent blockhash: ' + res.error.message);\n\n              case 7:\n                return _context37.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function getRecentBlockhashAndContext(_x57) {\n        return _getRecentBlockhashAndContext.apply(this, arguments);\n      }\n\n      return getRecentBlockhashAndContext;\n    }()\n    /**\n     * Fetch recent performance samples\n     * @return {Promise<Array<PerfSample>>}\n     */\n\n  }, {\n    key: \"getRecentPerformanceSamples\",\n    value: function () {\n      var _getRecentPerformanceSamples = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38(limit) {\n        var args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                args = this._buildArgs(limit ? [limit] : []);\n                _context38.next = 3;\n                return this._rpcRequest('getRecentPerformanceSamples', args);\n\n              case 3:\n                unsafeRes = _context38.sent;\n                res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n\n                if (!res.error) {\n                  _context38.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get recent performance samples: ' + res.error.message);\n\n              case 7:\n                return _context38.abrupt(\"return\", res.result);\n\n              case 8:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function getRecentPerformanceSamples(_x58) {\n        return _getRecentPerformanceSamples.apply(this, arguments);\n      }\n\n      return getRecentPerformanceSamples;\n    }()\n    /**\n     * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n     */\n\n  }, {\n    key: \"getFeeCalculatorForBlockhash\",\n    value: function () {\n      var _getFeeCalculatorForBlockhash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(blockhash, commitment) {\n        var args, unsafeRes, res, _res$result, context, value;\n\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                args = this._buildArgs([blockhash], commitment);\n                _context39.next = 3;\n                return this._rpcRequest('getFeeCalculatorForBlockhash', args);\n\n              case 3:\n                unsafeRes = _context39.sent;\n                res = create(unsafeRes, GetFeeCalculatorRpcResult);\n\n                if (!res.error) {\n                  _context39.next = 7;\n                  break;\n                }\n\n                throw new Error('failed to get fee calculator: ' + res.error.message);\n\n              case 7:\n                _res$result = res.result, context = _res$result.context, value = _res$result.value;\n                return _context39.abrupt(\"return\", {\n                  context: context,\n                  value: value.feeCalculator\n                });\n\n              case 9:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function getFeeCalculatorForBlockhash(_x59, _x60) {\n        return _getFeeCalculatorForBlockhash.apply(this, arguments);\n      }\n\n      return getFeeCalculatorForBlockhash;\n    }()\n    /**\n     * Fetch a recent blockhash from the cluster\n     * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n     */\n\n  }, {\n    key: \"getRecentBlockhash\",\n    value: function () {\n      var _getRecentBlockhash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(commitment) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                _context40.prev = 0;\n                _context40.next = 3;\n                return this.getRecentBlockhashAndContext(commitment);\n\n              case 3:\n                res = _context40.sent;\n                return _context40.abrupt(\"return\", res.value);\n\n              case 7:\n                _context40.prev = 7;\n                _context40.t0 = _context40[\"catch\"](0);\n                throw new Error('failed to get recent blockhash: ' + _context40.t0);\n\n              case 10:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this, [[0, 7]]);\n      }));\n\n      function getRecentBlockhash(_x61) {\n        return _getRecentBlockhash.apply(this, arguments);\n      }\n\n      return getRecentBlockhash;\n    }()\n    /**\n     * Fetch the node version\n     */\n\n  }, {\n    key: \"getVersion\",\n    value: function () {\n      var _getVersion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                _context41.next = 2;\n                return this._rpcRequest('getVersion', []);\n\n              case 2:\n                unsafeRes = _context41.sent;\n                res = create(unsafeRes, jsonRpcResult(Version));\n\n                if (!res.error) {\n                  _context41.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get version: ' + res.error.message);\n\n              case 6:\n                return _context41.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function getVersion() {\n        return _getVersion.apply(this, arguments);\n      }\n\n      return getVersion;\n    }()\n    /**\n     * Fetch a list of Transactions and transaction statuses from the cluster\n     * for a confirmed block\n     */\n\n  }, {\n    key: \"getConfirmedBlock\",\n    value: function () {\n      var _getConfirmedBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(slot) {\n        var unsafeRes, res, result;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                _context42.next = 2;\n                return this._rpcRequest('getConfirmedBlock', [slot]);\n\n              case 2:\n                unsafeRes = _context42.sent;\n                res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n                if (!res.error) {\n                  _context42.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get confirmed block: ' + res.error.message);\n\n              case 6:\n                result = res.result;\n\n                if (result) {\n                  _context42.next = 9;\n                  break;\n                }\n\n                throw new Error('Confirmed block ' + slot + ' not found');\n\n              case 9:\n                return _context42.abrupt(\"return\", result);\n\n              case 10:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function getConfirmedBlock(_x62) {\n        return _getConfirmedBlock.apply(this, arguments);\n      }\n\n      return getConfirmedBlock;\n    }()\n    /**\n     * Fetch a transaction details for a confirmed transaction\n     */\n\n  }, {\n    key: \"getConfirmedTransaction\",\n    value: function () {\n      var _getConfirmedTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(signature) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                _context43.next = 2;\n                return this._rpcRequest('getConfirmedTransaction', [signature]);\n\n              case 2:\n                unsafeRes = _context43.sent;\n                res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n\n                if (!res.error) {\n                  _context43.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get confirmed transaction: ' + res.error.message);\n\n              case 6:\n                return _context43.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function getConfirmedTransaction(_x63) {\n        return _getConfirmedTransaction.apply(this, arguments);\n      }\n\n      return getConfirmedTransaction;\n    }()\n    /**\n     * Fetch parsed transaction details for a confirmed transaction\n     */\n\n  }, {\n    key: \"getParsedConfirmedTransaction\",\n    value: function () {\n      var _getParsedConfirmedTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(signature) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                _context44.next = 2;\n                return this._rpcRequest('getConfirmedTransaction', [signature, 'jsonParsed']);\n\n              case 2:\n                unsafeRes = _context44.sent;\n                res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n\n                if (!res.error) {\n                  _context44.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get confirmed transaction: ' + res.error.message);\n\n              case 6:\n                return _context44.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44, this);\n      }));\n\n      function getParsedConfirmedTransaction(_x64) {\n        return _getParsedConfirmedTransaction.apply(this, arguments);\n      }\n\n      return getParsedConfirmedTransaction;\n    }()\n    /**\n     * Fetch a list of all the confirmed signatures for transactions involving an address\n     * within a specified slot range. Max range allowed is 10,000 slots.\n     *\n     * @param address queried address\n     * @param startSlot start slot, inclusive\n     * @param endSlot end slot, inclusive\n     */\n\n  }, {\n    key: \"getConfirmedSignaturesForAddress\",\n    value: function () {\n      var _getConfirmedSignaturesForAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45(address, startSlot, endSlot) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                _context45.next = 2;\n                return this._rpcRequest('getConfirmedSignaturesForAddress', [address.toBase58(), startSlot, endSlot]);\n\n              case 2:\n                unsafeRes = _context45.sent;\n                res = create(unsafeRes, GetConfirmedSignaturesForAddressRpcResult);\n\n                if (!res.error) {\n                  _context45.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get confirmed signatures for address: ' + res.error.message);\n\n              case 6:\n                return _context45.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function getConfirmedSignaturesForAddress(_x65, _x66, _x67) {\n        return _getConfirmedSignaturesForAddress.apply(this, arguments);\n      }\n\n      return getConfirmedSignaturesForAddress;\n    }()\n    /**\n     * Returns confirmed signatures for transactions involving an\n     * address backwards in time from the provided signature or most recent confirmed block\n     *\n     *\n     * @param address queried address\n     * @param options\n     */\n\n  }, {\n    key: \"getConfirmedSignaturesForAddress2\",\n    value: function () {\n      var _getConfirmedSignaturesForAddress2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46(address, options) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                _context46.next = 2;\n                return this._rpcRequest('getConfirmedSignaturesForAddress2', [address.toBase58(), options]);\n\n              case 2:\n                unsafeRes = _context46.sent;\n                res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n\n                if (!res.error) {\n                  _context46.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get confirmed signatures for address: ' + res.error.message);\n\n              case 6:\n                return _context46.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function getConfirmedSignaturesForAddress2(_x68, _x69) {\n        return _getConfirmedSignaturesForAddress2.apply(this, arguments);\n      }\n\n      return getConfirmedSignaturesForAddress2;\n    }()\n    /**\n     * Fetch the contents of a Nonce account from the cluster, return with context\n     */\n\n  }, {\n    key: \"getNonceAndContext\",\n    value: function () {\n      var _getNonceAndContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(nonceAccount, commitment) {\n        var _yield$this$getAccoun, context, accountInfo, value;\n\n        return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                _context47.next = 2;\n                return this.getAccountInfoAndContext(nonceAccount, commitment);\n\n              case 2:\n                _yield$this$getAccoun = _context47.sent;\n                context = _yield$this$getAccoun.context;\n                accountInfo = _yield$this$getAccoun.value;\n                value = null;\n\n                if (accountInfo !== null) {\n                  value = NonceAccount.fromAccountData(accountInfo.data);\n                }\n\n                return _context47.abrupt(\"return\", {\n                  context: context,\n                  value: value\n                });\n\n              case 8:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function getNonceAndContext(_x70, _x71) {\n        return _getNonceAndContext.apply(this, arguments);\n      }\n\n      return getNonceAndContext;\n    }()\n    /**\n     * Fetch the contents of a Nonce account from the cluster\n     */\n\n  }, {\n    key: \"getNonce\",\n    value: function () {\n      var _getNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(nonceAccount, commitment) {\n        return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                _context48.next = 2;\n                return this.getNonceAndContext(nonceAccount, commitment).then(function (x) {\n                  return x.value;\n                }).catch(function (e) {\n                  throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n                });\n\n              case 2:\n                return _context48.abrupt(\"return\", _context48.sent);\n\n              case 3:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this);\n      }));\n\n      function getNonce(_x72, _x73) {\n        return _getNonce.apply(this, arguments);\n      }\n\n      return getNonce;\n    }()\n    /**\n     * Request an allocation of lamports to the specified account\n     */\n\n  }, {\n    key: \"requestAirdrop\",\n    value: function () {\n      var _requestAirdrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49(to, amount) {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                _context49.next = 2;\n                return this._rpcRequest('requestAirdrop', [to.toBase58(), amount]);\n\n              case 2:\n                unsafeRes = _context49.sent;\n                res = create(unsafeRes, RequestAirdropRpcResult);\n\n                if (!res.error) {\n                  _context49.next = 6;\n                  break;\n                }\n\n                throw new Error('airdrop to ' + to.toBase58() + ' failed: ' + res.error.message);\n\n              case 6:\n                return _context49.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function requestAirdrop(_x74, _x75) {\n        return _requestAirdrop.apply(this, arguments);\n      }\n\n      return requestAirdrop;\n    }()\n  }, {\n    key: \"_recentBlockhash\",\n    value: function () {\n      var _recentBlockhash2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(disableCache) {\n        var expired;\n        return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                if (disableCache) {\n                  _context50.next = 9;\n                  break;\n                }\n\n              case 1:\n                if (!this._pollingBlockhash) {\n                  _context50.next = 6;\n                  break;\n                }\n\n                _context50.next = 4;\n                return sleep(100);\n\n              case 4:\n                _context50.next = 1;\n                break;\n\n              case 6:\n                // Attempt to use a recent blockhash for up to 30 seconds\n                expired = Date.now() - this._blockhashInfo.lastFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n\n                if (!(this._blockhashInfo.recentBlockhash !== null && !expired)) {\n                  _context50.next = 9;\n                  break;\n                }\n\n                return _context50.abrupt(\"return\", this._blockhashInfo.recentBlockhash);\n\n              case 9:\n                _context50.next = 11;\n                return this._pollNewBlockhash();\n\n              case 11:\n                return _context50.abrupt(\"return\", _context50.sent);\n\n              case 12:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50, this);\n      }));\n\n      function _recentBlockhash(_x76) {\n        return _recentBlockhash2.apply(this, arguments);\n      }\n\n      return _recentBlockhash;\n    }()\n  }, {\n    key: \"_pollNewBlockhash\",\n    value: function () {\n      var _pollNewBlockhash2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51() {\n        var startTime, _i20, _yield$this$getRecent, blockhash;\n\n        return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                this._pollingBlockhash = true;\n                _context51.prev = 1;\n                startTime = Date.now();\n                _i20 = 0;\n\n              case 4:\n                if (!(_i20 < 50)) {\n                  _context51.next = 17;\n                  break;\n                }\n\n                _context51.next = 7;\n                return this.getRecentBlockhash('finalized');\n\n              case 7:\n                _yield$this$getRecent = _context51.sent;\n                blockhash = _yield$this$getRecent.blockhash;\n\n                if (!(this._blockhashInfo.recentBlockhash != blockhash)) {\n                  _context51.next = 12;\n                  break;\n                }\n\n                this._blockhashInfo = {\n                  recentBlockhash: blockhash,\n                  lastFetch: new Date(),\n                  transactionSignatures: [],\n                  simulatedSignatures: []\n                };\n                return _context51.abrupt(\"return\", blockhash);\n\n              case 12:\n                _context51.next = 14;\n                return sleep(MS_PER_SLOT / 2);\n\n              case 14:\n                _i20++;\n                _context51.next = 4;\n                break;\n\n              case 17:\n                throw new Error(\"Unable to obtain a new blockhash after \".concat(Date.now() - startTime, \"ms\"));\n\n              case 18:\n                _context51.prev = 18;\n                this._pollingBlockhash = false;\n                return _context51.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this, [[1,, 18, 21]]);\n      }));\n\n      function _pollNewBlockhash() {\n        return _pollNewBlockhash2.apply(this, arguments);\n      }\n\n      return _pollNewBlockhash;\n    }()\n    /**\n     * Simulate a transaction\n     */\n\n  }, {\n    key: \"simulateTransaction\",\n    value: function () {\n      var _simulateTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52(transaction, signers) {\n        var disableCache, signature, signData, wireTransaction, encodedTransaction, config, args, unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                if (!(transaction.nonceInfo && signers)) {\n                  _context52.next = 4;\n                  break;\n                }\n\n                transaction.sign.apply(transaction, _toConsumableArray(signers));\n                _context52.next = 22;\n                break;\n\n              case 4:\n                disableCache = this._disableBlockhashCaching;\n\n              case 5:\n                _context52.next = 7;\n                return this._recentBlockhash(disableCache);\n\n              case 7:\n                transaction.recentBlockhash = _context52.sent;\n\n                if (signers) {\n                  _context52.next = 10;\n                  break;\n                }\n\n                return _context52.abrupt(\"break\", 22);\n\n              case 10:\n                transaction.sign.apply(transaction, _toConsumableArray(signers));\n\n                if (transaction.signature) {\n                  _context52.next = 13;\n                  break;\n                }\n\n                throw new Error('!signature');\n\n              case 13:\n                // If the signature of this transaction has not been seen before with the\n                // current recentBlockhash, all done.\n                signature = transaction.signature.toString('base64');\n\n                if (!(!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature))) {\n                  _context52.next = 19;\n                  break;\n                }\n\n                this._blockhashInfo.simulatedSignatures.push(signature);\n\n                return _context52.abrupt(\"break\", 22);\n\n              case 19:\n                disableCache = true;\n\n              case 20:\n                _context52.next = 5;\n                break;\n\n              case 22:\n                signData = transaction.serializeMessage();\n                wireTransaction = transaction._serialize(signData);\n                encodedTransaction = wireTransaction.toString('base64');\n                config = {\n                  encoding: 'base64',\n                  commitment: this.commitment\n                };\n                args = [encodedTransaction, config];\n\n                if (signers) {\n                  config.sigVerify = true;\n                }\n\n                _context52.next = 30;\n                return this._rpcRequest('simulateTransaction', args);\n\n              case 30:\n                unsafeRes = _context52.sent;\n                res = create(unsafeRes, SimulatedTransactionResponseStruct);\n\n                if (!res.error) {\n                  _context52.next = 34;\n                  break;\n                }\n\n                throw new Error('failed to simulate transaction: ' + res.error.message);\n\n              case 34:\n                return _context52.abrupt(\"return\", res.result);\n\n              case 35:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52, this);\n      }));\n\n      function simulateTransaction(_x77, _x78) {\n        return _simulateTransaction.apply(this, arguments);\n      }\n\n      return simulateTransaction;\n    }()\n    /**\n     * Sign and send a transaction\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53(transaction, signers, options) {\n        var disableCache, signature, wireTransaction;\n        return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                if (!transaction.nonceInfo) {\n                  _context53.next = 4;\n                  break;\n                }\n\n                transaction.sign.apply(transaction, _toConsumableArray(signers));\n                _context53.next = 20;\n                break;\n\n              case 4:\n                disableCache = this._disableBlockhashCaching;\n\n              case 5:\n                _context53.next = 7;\n                return this._recentBlockhash(disableCache);\n\n              case 7:\n                transaction.recentBlockhash = _context53.sent;\n                transaction.sign.apply(transaction, _toConsumableArray(signers));\n\n                if (transaction.signature) {\n                  _context53.next = 11;\n                  break;\n                }\n\n                throw new Error('!signature');\n\n              case 11:\n                // If the signature of this transaction has not been seen before with the\n                // current recentBlockhash, all done.\n                signature = transaction.signature.toString('base64');\n\n                if (this._blockhashInfo.transactionSignatures.includes(signature)) {\n                  _context53.next = 17;\n                  break;\n                }\n\n                this._blockhashInfo.transactionSignatures.push(signature);\n\n                return _context53.abrupt(\"break\", 20);\n\n              case 17:\n                disableCache = true;\n\n              case 18:\n                _context53.next = 5;\n                break;\n\n              case 20:\n                wireTransaction = transaction.serialize();\n                _context53.next = 23;\n                return this.sendRawTransaction(wireTransaction, options);\n\n              case 23:\n                return _context53.abrupt(\"return\", _context53.sent);\n\n              case 24:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function sendTransaction(_x79, _x80, _x81) {\n        return _sendTransaction.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"validatorExit\",\n    value: function () {\n      var _validatorExit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54() {\n        var unsafeRes, res;\n        return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                _context54.next = 2;\n                return this._rpcRequest('validatorExit', []);\n\n              case 2:\n                unsafeRes = _context54.sent;\n                res = create(unsafeRes, jsonRpcResult(boolean()));\n\n                if (!res.error) {\n                  _context54.next = 6;\n                  break;\n                }\n\n                throw new Error('validator exit failed: ' + res.error.message);\n\n              case 6:\n                return _context54.abrupt(\"return\", res.result);\n\n              case 7:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54, this);\n      }));\n\n      function validatorExit() {\n        return _validatorExit.apply(this, arguments);\n      }\n\n      return validatorExit;\n    }()\n    /**\n     * Send a transaction that has already been signed and serialized into the\n     * wire format\n     */\n\n  }, {\n    key: \"sendRawTransaction\",\n    value: function () {\n      var _sendRawTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55(rawTransaction, options) {\n        var encodedTransaction, result;\n        return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                encodedTransaction = toBuffer(rawTransaction).toString('base64');\n                _context55.next = 3;\n                return this.sendEncodedTransaction(encodedTransaction, options);\n\n              case 3:\n                result = _context55.sent;\n                return _context55.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this);\n      }));\n\n      function sendRawTransaction(_x82, _x83) {\n        return _sendRawTransaction.apply(this, arguments);\n      }\n\n      return sendRawTransaction;\n    }()\n    /**\n     * Send a transaction that has already been signed, serialized into the\n     * wire format, and encoded as a base64 string\n     */\n\n  }, {\n    key: \"sendEncodedTransaction\",\n    value: function () {\n      var _sendEncodedTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56(encodedTransaction, options) {\n        var config, args, skipPreflight, preflightCommitment, unsafeRes, res, logs, traceIndent, logTrace;\n        return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n          while (1) {\n            switch (_context56.prev = _context56.next) {\n              case 0:\n                config = {\n                  encoding: 'base64'\n                };\n                args = [encodedTransaction, config];\n                skipPreflight = options && options.skipPreflight;\n                preflightCommitment = options && options.preflightCommitment || this.commitment;\n\n                if (skipPreflight) {\n                  config.skipPreflight = skipPreflight;\n                }\n\n                if (preflightCommitment) {\n                  config.preflightCommitment = preflightCommitment;\n                }\n\n                _context56.next = 8;\n                return this._rpcRequest('sendTransaction', args);\n\n              case 8:\n                unsafeRes = _context56.sent;\n                res = create(unsafeRes, SendTransactionRpcResult);\n\n                if (!res.error) {\n                  _context56.next = 13;\n                  break;\n                }\n\n                if (res.error.data) {\n                  logs = res.error.data.logs;\n\n                  if (logs && Array.isArray(logs)) {\n                    traceIndent = '\\n    ';\n                    logTrace = traceIndent + logs.join(traceIndent);\n                    console.error(res.error.message, logTrace);\n                  }\n                }\n\n                throw new Error('failed to send transaction: ' + res.error.message);\n\n              case 13:\n                return _context56.abrupt(\"return\", res.result);\n\n              case 14:\n              case \"end\":\n                return _context56.stop();\n            }\n          }\n        }, _callee56, this);\n      }));\n\n      function sendEncodedTransaction(_x84, _x85) {\n        return _sendEncodedTransaction.apply(this, arguments);\n      }\n\n      return sendEncodedTransaction;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnOpen\",\n    value: function _wsOnOpen() {\n      var _this11 = this;\n\n      this._rpcWebSocketConnected = true;\n      this._rpcWebSocketHeartbeat = setInterval(function () {\n        // Ping server every 5s to prevent idle timeouts\n        _this11._rpcWebSocket.notify('ping').catch(function () {});\n      }, 5000);\n\n      this._updateSubscriptions();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnError\",\n    value: function _wsOnError(err) {\n      console.error('ws error:', err.message);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnClose\",\n    value: function _wsOnClose(code) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n\n      if (code === 1000) {\n        // explicit close, check if any subscriptions have been made since close\n        this._updateSubscriptions();\n\n        return;\n      } // implicit close, prepare subscriptions for auto-reconnect\n\n\n      this._resetSubscriptions();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_subscribe\",\n    value: function () {\n      var _subscribe2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57(sub, rpcMethod, rpcArgs) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                if (!(sub.subscriptionId == null)) {\n                  _context57.next = 13;\n                  break;\n                }\n\n                sub.subscriptionId = 'subscribing';\n                _context57.prev = 2;\n                _context57.next = 5;\n                return this._rpcWebSocket.call(rpcMethod, rpcArgs);\n\n              case 5:\n                id = _context57.sent;\n\n                if (sub.subscriptionId === 'subscribing') {\n                  // eslint-disable-next-line require-atomic-updates\n                  sub.subscriptionId = id;\n                }\n\n                _context57.next = 13;\n                break;\n\n              case 9:\n                _context57.prev = 9;\n                _context57.t0 = _context57[\"catch\"](2);\n\n                if (sub.subscriptionId === 'subscribing') {\n                  // eslint-disable-next-line require-atomic-updates\n                  sub.subscriptionId = null;\n                }\n\n                console.error(\"\".concat(rpcMethod, \" error for argument\"), rpcArgs, _context57.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this, [[2, 9]]);\n      }));\n\n      function _subscribe(_x86, _x87, _x88) {\n        return _subscribe2.apply(this, arguments);\n      }\n\n      return _subscribe;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_unsubscribe\",\n    value: function () {\n      var _unsubscribe2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee58(sub, rpcMethod) {\n        var subscriptionId, unsubscribeId;\n        return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                subscriptionId = sub.subscriptionId;\n\n                if (!(subscriptionId != null && typeof subscriptionId != 'string')) {\n                  _context58.next = 11;\n                  break;\n                }\n\n                unsubscribeId = subscriptionId;\n                _context58.prev = 3;\n                _context58.next = 6;\n                return this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n\n              case 6:\n                _context58.next = 11;\n                break;\n\n              case 8:\n                _context58.prev = 8;\n                _context58.t0 = _context58[\"catch\"](3);\n                console.error(\"\".concat(rpcMethod, \" error:\"), _context58.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58, this, [[3, 8]]);\n      }));\n\n      function _unsubscribe(_x89, _x90) {\n        return _unsubscribe2.apply(this, arguments);\n      }\n\n      return _unsubscribe;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_resetSubscriptions\",\n    value: function _resetSubscriptions() {\n      Object.values(this._accountChangeSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n      Object.values(this._programAccountChangeSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n      Object.values(this._signatureSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n      Object.values(this._slotSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n      Object.values(this._slotUpdateSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n      Object.values(this._rootSubscriptions).forEach(function (s) {\n        return s.subscriptionId = null;\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_updateSubscriptions\",\n    value: function _updateSubscriptions() {\n      var _this12 = this;\n\n      var accountKeys = Object.keys(this._accountChangeSubscriptions).map(Number);\n      var programKeys = Object.keys(this._programAccountChangeSubscriptions).map(Number);\n      var slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n      var slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n      var signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n      var rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n\n      if (accountKeys.length === 0 && programKeys.length === 0 && slotKeys.length === 0 && slotUpdateKeys.length === 0 && signatureKeys.length === 0 && rootKeys.length === 0) {\n        if (this._rpcWebSocketConnected) {\n          this._rpcWebSocketConnected = false;\n          this._rpcWebSocketIdleTimeout = setTimeout(function () {\n            _this12._rpcWebSocketIdleTimeout = null;\n\n            _this12._rpcWebSocket.close();\n          }, 500);\n        }\n\n        return;\n      }\n\n      if (this._rpcWebSocketIdleTimeout !== null) {\n        clearTimeout(this._rpcWebSocketIdleTimeout);\n        this._rpcWebSocketIdleTimeout = null;\n        this._rpcWebSocketConnected = true;\n      }\n\n      if (!this._rpcWebSocketConnected) {\n        this._rpcWebSocket.connect();\n\n        return;\n      }\n\n      var _iterator9 = _createForOfIteratorHelper(accountKeys),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var id = _step9.value;\n          var sub = this._accountChangeSubscriptions[id];\n\n          this._subscribe(sub, 'accountSubscribe', this._buildArgs([sub.publicKey], sub.commitment, 'base64'));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      var _iterator10 = _createForOfIteratorHelper(programKeys),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _id = _step10.value;\n          var _sub = this._programAccountChangeSubscriptions[_id];\n\n          this._subscribe(_sub, 'programSubscribe', this._buildArgs([_sub.programId], _sub.commitment, 'base64'));\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      var _iterator11 = _createForOfIteratorHelper(slotKeys),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _id2 = _step11.value;\n          var _sub2 = this._slotSubscriptions[_id2];\n\n          this._subscribe(_sub2, 'slotSubscribe', []);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      var _iterator12 = _createForOfIteratorHelper(slotUpdateKeys),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _id3 = _step12.value;\n          var _sub3 = this._slotUpdateSubscriptions[_id3];\n\n          this._subscribe(_sub3, 'slotsUpdatesSubscribe', []);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      var _iterator13 = _createForOfIteratorHelper(signatureKeys),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _id4 = _step13.value;\n          var _sub4 = this._signatureSubscriptions[_id4];\n          var args = [_sub4.signature];\n          if (_sub4.options) args.push(_sub4.options);\n\n          this._subscribe(_sub4, 'signatureSubscribe', args);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      var _iterator14 = _createForOfIteratorHelper(rootKeys),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _id5 = _step14.value;\n          var _sub5 = this._rootSubscriptions[_id5];\n\n          this._subscribe(_sub5, 'rootSubscribe', []);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnAccountNotification\",\n    value: function _wsOnAccountNotification(notification) {\n      var res = create(notification, AccountNotificationResult);\n\n      if (res.error) {\n        throw new Error('account notification failed: ' + res.error.message);\n      }\n\n      var keys = Object.keys(this._accountChangeSubscriptions).map(Number);\n\n      var _iterator15 = _createForOfIteratorHelper(keys),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var id = _step15.value;\n          var sub = this._accountChangeSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            sub.callback(res.result.value, res.result.context);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked whenever the specified account changes\n     *\n     * @param publicKey Public key of the account to monitor\n     * @param callback Function to invoke whenever the account is changed\n     * @param commitment Specify the commitment level account changes must reach before notification\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onAccountChange\",\n    value: function onAccountChange(publicKey, callback, commitment) {\n      var id = ++this._accountChangeSubscriptionCounter;\n      this._accountChangeSubscriptions[id] = {\n        publicKey: publicKey.toBase58(),\n        callback: callback,\n        commitment: commitment,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister an account notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeAccountChangeListener\",\n    value: function () {\n      var _removeAccountChangeListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee59(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                if (!this._accountChangeSubscriptions[id]) {\n                  _context59.next = 8;\n                  break;\n                }\n\n                subInfo = this._accountChangeSubscriptions[id];\n                delete this._accountChangeSubscriptions[id];\n                _context59.next = 5;\n                return this._unsubscribe(subInfo, 'accountUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context59.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown account change id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this);\n      }));\n\n      function removeAccountChangeListener(_x91) {\n        return _removeAccountChangeListener.apply(this, arguments);\n      }\n\n      return removeAccountChangeListener;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnProgramAccountNotification\",\n    value: function _wsOnProgramAccountNotification(notification) {\n      var res = create(notification, ProgramAccountNotificationResult);\n\n      if (res.error) {\n        throw new Error('program account notification failed: ' + res.error.message);\n      }\n\n      var keys = Object.keys(this._programAccountChangeSubscriptions).map(Number);\n\n      var _iterator16 = _createForOfIteratorHelper(keys),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var id = _step16.value;\n          var sub = this._programAccountChangeSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            var _res$result2 = res.result,\n                value = _res$result2.value,\n                context = _res$result2.context;\n            sub.callback({\n              accountId: value.pubkey,\n              accountInfo: value.account\n            }, context);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked whenever accounts owned by the\n     * specified program change\n     *\n     * @param programId Public key of the program to monitor\n     * @param callback Function to invoke whenever the account is changed\n     * @param commitment Specify the commitment level account changes must reach before notification\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onProgramAccountChange\",\n    value: function onProgramAccountChange(programId, callback, commitment) {\n      var id = ++this._programAccountChangeSubscriptionCounter;\n      this._programAccountChangeSubscriptions[id] = {\n        programId: programId.toBase58(),\n        callback: callback,\n        commitment: commitment,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister an account notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeProgramAccountChangeListener\",\n    value: function () {\n      var _removeProgramAccountChangeListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee60(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                if (!this._programAccountChangeSubscriptions[id]) {\n                  _context60.next = 8;\n                  break;\n                }\n\n                subInfo = this._programAccountChangeSubscriptions[id];\n                delete this._programAccountChangeSubscriptions[id];\n                _context60.next = 5;\n                return this._unsubscribe(subInfo, 'programUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context60.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown program account change id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60, this);\n      }));\n\n      function removeProgramAccountChangeListener(_x92) {\n        return _removeProgramAccountChangeListener.apply(this, arguments);\n      }\n\n      return removeProgramAccountChangeListener;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnSlotNotification\",\n    value: function _wsOnSlotNotification(notification) {\n      var res = create(notification, SlotNotificationResult);\n\n      if (res.error) {\n        throw new Error('slot notification failed: ' + res.error.message);\n      }\n\n      var keys = Object.keys(this._slotSubscriptions).map(Number);\n\n      var _iterator17 = _createForOfIteratorHelper(keys),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var id = _step17.value;\n          var sub = this._slotSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            sub.callback(res.result);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked upon slot changes\n     *\n     * @param callback Function to invoke whenever the slot changes\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onSlotChange\",\n    value: function onSlotChange(callback) {\n      var id = ++this._slotSubscriptionCounter;\n      this._slotSubscriptions[id] = {\n        callback: callback,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister a slot notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeSlotChangeListener\",\n    value: function () {\n      var _removeSlotChangeListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee61(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                if (!this._slotSubscriptions[id]) {\n                  _context61.next = 8;\n                  break;\n                }\n\n                subInfo = this._slotSubscriptions[id];\n                delete this._slotSubscriptions[id];\n                _context61.next = 5;\n                return this._unsubscribe(subInfo, 'slotUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context61.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown slot change id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this);\n      }));\n\n      function removeSlotChangeListener(_x93) {\n        return _removeSlotChangeListener.apply(this, arguments);\n      }\n\n      return removeSlotChangeListener;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnSlotUpdatesNotification\",\n    value: function _wsOnSlotUpdatesNotification(notification) {\n      var res = create(notification, SlotUpdateNotificationResult);\n\n      if (res.error) {\n        throw new Error('slot update notification failed: ' + res.error.message);\n      }\n\n      assert(typeof res.result !== 'undefined');\n      var keys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n\n      var _iterator18 = _createForOfIteratorHelper(keys),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var id = _step18.value;\n          var sub = this._slotUpdateSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            sub.callback(res.result);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked upon slot changes\n     *\n     * @param callback Function to invoke whenever the slot changes\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onSlotUpdate\",\n    value: function onSlotUpdate(callback) {\n      var id = ++this._slotUpdateSubscriptionCounter;\n      this._slotUpdateSubscriptions[id] = {\n        callback: callback,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister a slot notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeSlotUpdateListener\",\n    value: function () {\n      var _removeSlotUpdateListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee62(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n          while (1) {\n            switch (_context62.prev = _context62.next) {\n              case 0:\n                if (!this._slotUpdateSubscriptions[id]) {\n                  _context62.next = 8;\n                  break;\n                }\n\n                subInfo = this._slotUpdateSubscriptions[id];\n                delete this._slotUpdateSubscriptions[id];\n                _context62.next = 5;\n                return this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context62.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown slot update id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context62.stop();\n            }\n          }\n        }, _callee62, this);\n      }));\n\n      function removeSlotUpdateListener(_x94) {\n        return _removeSlotUpdateListener.apply(this, arguments);\n      }\n\n      return removeSlotUpdateListener;\n    }()\n  }, {\n    key: \"_buildArgs\",\n    value: function _buildArgs(args, override, encoding, extra) {\n      var commitment = override || this._commitment;\n\n      if (commitment || encoding || extra) {\n        var options = {};\n\n        if (encoding) {\n          options.encoding = encoding;\n        }\n\n        if (commitment) {\n          options.commitment = commitment;\n        }\n\n        if (extra) {\n          options = Object.assign(options, extra);\n        }\n\n        args.push(options);\n      }\n\n      return args;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnSignatureNotification\",\n    value: function _wsOnSignatureNotification(notification) {\n      var res = create(notification, SignatureNotificationResult);\n\n      if (res.error) {\n        throw new Error('signature notification failed: ' + res.error.message);\n      }\n\n      var keys = Object.keys(this._signatureSubscriptions).map(Number);\n\n      var _iterator19 = _createForOfIteratorHelper(keys),\n          _step19;\n\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var id = _step19.value;\n          var sub = this._signatureSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            sub.callback(res.result.value, res.result.context);\n\n            if (res.result.value.type === 'processedSignature') {\n              // Signatures subscriptions are auto-removed by the RPC service so\n              // no need to explicitly send an unsubscribe message\n              delete this._signatureSubscriptions[id];\n\n              this._updateSubscriptions();\n            }\n\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked upon signature updates\n     * @deprecated Deprecated since v0.93.0, please use `onTransaction`\n     *\n     * @param signature Transaction signature string in base 58\n     * @param callback Function to invoke on signature notifications\n     * @param commitment Specify the commitment level signature must reach before notification\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onSignature\",\n    value: function onSignature(signature, _callback, commitment) {\n      var id = ++this._signatureSubscriptionCounter;\n      this._signatureSubscriptions[id] = {\n        signature: signature,\n        callback: function callback(notification, context) {\n          if (notification.type === 'status') {\n            _callback(notification.result, context);\n          }\n        },\n        options: {\n          commitment: commitment\n        },\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Register a callback to be invoked when a transaction is\n     * received and/or processed.\n     *\n     * @param signature Transaction signature string in base 58\n     * @param callback Function to invoke on signature notifications\n     * @param options Enable received notifications and set the commitment\n     *   level that signature must reach before notification\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onTransaction\",\n    value: function onTransaction(signature, callback, options) {\n      var id = ++this._signatureSubscriptionCounter;\n      this._signatureSubscriptions[id] = {\n        signature: signature,\n        callback: callback,\n        options: options,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister a signature notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeSignatureListener\",\n    value: function () {\n      var _removeSignatureListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee63(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n          while (1) {\n            switch (_context63.prev = _context63.next) {\n              case 0:\n                if (!this._signatureSubscriptions[id]) {\n                  _context63.next = 8;\n                  break;\n                }\n\n                subInfo = this._signatureSubscriptions[id];\n                delete this._signatureSubscriptions[id];\n                _context63.next = 5;\n                return this._unsubscribe(subInfo, 'signatureUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context63.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown signature result id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context63.stop();\n            }\n          }\n        }, _callee63, this);\n      }));\n\n      function removeSignatureListener(_x95) {\n        return _removeSignatureListener.apply(this, arguments);\n      }\n\n      return removeSignatureListener;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_wsOnRootNotification\",\n    value: function _wsOnRootNotification(notification) {\n      var res = create(notification, RootNotificationResult);\n\n      if (res.error) {\n        throw new Error('root notification failed: ' + res.error.message);\n      }\n\n      var keys = Object.keys(this._rootSubscriptions).map(Number);\n\n      var _iterator20 = _createForOfIteratorHelper(keys),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var id = _step20.value;\n          var sub = this._rootSubscriptions[id];\n\n          if (sub.subscriptionId === res.subscription) {\n            sub.callback(res.result);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n    /**\n     * Register a callback to be invoked upon root changes\n     *\n     * @param callback Function to invoke whenever the root changes\n     * @return subscription id\n     */\n\n  }, {\n    key: \"onRootChange\",\n    value: function onRootChange(callback) {\n      var id = ++this._rootSubscriptionCounter;\n      this._rootSubscriptions[id] = {\n        callback: callback,\n        subscriptionId: null\n      };\n\n      this._updateSubscriptions();\n\n      return id;\n    }\n    /**\n     * Deregister a root notification callback\n     *\n     * @param id subscription id to deregister\n     */\n\n  }, {\n    key: \"removeRootChangeListener\",\n    value: function () {\n      var _removeRootChangeListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee64(id) {\n        var subInfo;\n        return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n          while (1) {\n            switch (_context64.prev = _context64.next) {\n              case 0:\n                if (!this._rootSubscriptions[id]) {\n                  _context64.next = 8;\n                  break;\n                }\n\n                subInfo = this._rootSubscriptions[id];\n                delete this._rootSubscriptions[id];\n                _context64.next = 5;\n                return this._unsubscribe(subInfo, 'rootUnsubscribe');\n\n              case 5:\n                this._updateSubscriptions();\n\n                _context64.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Unknown root change id: \".concat(id));\n\n              case 9:\n              case \"end\":\n                return _context64.stop();\n            }\n          }\n        }, _callee64, this);\n      }));\n\n      function removeRootChangeListener(_x96) {\n        return _removeRootChangeListener.apply(this, arguments);\n      }\n\n      return removeRootChangeListener;\n    }()\n  }]);\n\n  return Connection;\n}(); //      \n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Account>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n\nfunction sendAndConfirmTransaction(_x97, _x98, _x99, _x100) {\n  return _sendAndConfirmTransaction.apply(this, arguments);\n} //      \n\n/**\n * @typedef {Object} InstructionType\n * @property (index} The Instruction index (from solana upstream program)\n * @property (BufferLayout} The BufferLayout to use to build data\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n */\n\n\nfunction _sendAndConfirmTransaction() {\n  _sendAndConfirmTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee66(connection, transaction, signers, options) {\n    var sendOptions, signature, status;\n    return _regeneratorRuntime.wrap(function _callee66$(_context66) {\n      while (1) {\n        switch (_context66.prev = _context66.next) {\n          case 0:\n            sendOptions = options && {\n              skipPreflight: options.skipPreflight,\n              preflightCommitment: options.preflightCommitment || options.commitment\n            };\n            _context66.next = 3;\n            return connection.sendTransaction(transaction, signers, sendOptions);\n\n          case 3:\n            signature = _context66.sent;\n            _context66.next = 6;\n            return connection.confirmTransaction(signature, options && options.commitment);\n\n          case 6:\n            status = _context66.sent.value;\n\n            if (!status.err) {\n              _context66.next = 9;\n              break;\n            }\n\n            throw new Error(\"Transaction \".concat(signature, \" failed (\").concat(JSON.stringify(status), \")\"));\n\n          case 9:\n            return _context66.abrupt(\"return\", signature);\n\n          case 10:\n          case \"end\":\n            return _context66.stop();\n        }\n      }\n    }, _callee66);\n  }));\n  return _sendAndConfirmTransaction.apply(this, arguments);\n}\n\nfunction encodeData(type, fields) {\n  var allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  var data = buffer.Buffer.alloc(allocLength);\n  var layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n/**\n * Decode instruction data buffer using an InstructionType\n */\n\n\nfunction decodeData(type, buffer) {\n  var data;\n\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\"invalid instruction; instruction index mismatch \".concat(data.instruction, \" != \").concat(type.index));\n  }\n\n  return data;\n} //      \n\n/**\n * Create account system transaction params\n * @typedef {Object} CreateAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\n\n/**\n * Transfer system transaction params\n * @typedef {Object} TransferParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\n\n/**\n * Assign system transaction params\n * @typedef {Object} AssignParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} programId\n */\n\n/**\n * Create account with seed system transaction params\n * @typedef {Object} CreateAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\n\n/**\n * Create nonce account system transaction params\n * @typedef {Object} CreateNonceAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {number} lamports\n */\n\n/**\n * Create nonce account with seed system transaction params\n * @typedef {Object} CreateNonceAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n */\n\n/**\n * Initialize nonce account system instruction params\n * @typedef {Object} InitializeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\n\n/**\n * Advance nonce account system instruction params\n * @typedef {Object} AdvanceNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\n\n/**\n * Withdraw nonce account system transaction params\n * @typedef {Object} WithdrawNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\n\n/**\n * Authorize nonce account system transaction params\n * @typedef {Object} AuthorizeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n */\n\n/**\n * Allocate account system transaction params\n * @typedef {Object} AllocateParams\n * @property {PublicKey} accountPubkey\n * @property {number} space\n */\n\n/**\n * Allocate account with seed system transaction params\n * @typedef {Object} AllocateWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} space\n * @property {PublicKey} programId\n */\n\n/**\n * Assign account with seed system transaction params\n * @typedef {Object} AssignWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {PublicKey} programId\n */\n\n/**\n * Transfer with seed system transaction params\n * @typedef {Object} TransferWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} basePubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {string} seed\n * @property {PublicKey} programId\n */\n\n/**\n * System Instruction class\n */\n\n\nvar SystemInstruction = /*#__PURE__*/function () {\n  function SystemInstruction() {\n    _classCallCheck(this, SystemInstruction);\n  }\n\n  _createClass(SystemInstruction, null, [{\n    key: \"decodeInstructionType\",\n    value:\n    /**\n     * Decode a system instruction and retrieve the instruction type.\n     */\n    function decodeInstructionType(instruction) {\n      this.checkProgramId(instruction.programId);\n      var instructionTypeLayout = u32('instruction');\n      var typeIndex = instructionTypeLayout.decode(instruction.data);\n      var type;\n\n      for (var _i21 = 0, _Object$keys = Object.keys(SYSTEM_INSTRUCTION_LAYOUTS); _i21 < _Object$keys.length; _i21++) {\n        var t = _Object$keys[_i21];\n\n        if (SYSTEM_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n          type = t;\n        }\n      }\n\n      if (!type) {\n        throw new Error('Instruction type incorrect; not a SystemInstruction');\n      }\n\n      return type;\n    }\n    /**\n     * Decode a create account system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeCreateAccount\",\n    value: function decodeCreateAccount(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data),\n          lamports = _decodeData.lamports,\n          space = _decodeData.space,\n          programId = _decodeData.programId;\n\n      return {\n        fromPubkey: instruction.keys[0].pubkey,\n        newAccountPubkey: instruction.keys[1].pubkey,\n        lamports: lamports,\n        space: space,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode a transfer system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeTransfer\",\n    value: function decodeTransfer(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData2 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data),\n          lamports = _decodeData2.lamports;\n\n      return {\n        fromPubkey: instruction.keys[0].pubkey,\n        toPubkey: instruction.keys[1].pubkey,\n        lamports: lamports\n      };\n    }\n    /**\n     * Decode a transfer with seed system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeTransferWithSeed\",\n    value: function decodeTransferWithSeed(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n\n      var _decodeData3 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data),\n          lamports = _decodeData3.lamports,\n          seed = _decodeData3.seed,\n          programId = _decodeData3.programId;\n\n      return {\n        fromPubkey: instruction.keys[0].pubkey,\n        basePubkey: instruction.keys[1].pubkey,\n        toPubkey: instruction.keys[2].pubkey,\n        lamports: lamports,\n        seed: seed,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode an allocate system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAllocate\",\n    value: function decodeAllocate(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 1);\n\n      var _decodeData4 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data),\n          space = _decodeData4.space;\n\n      return {\n        accountPubkey: instruction.keys[0].pubkey,\n        space: space\n      };\n    }\n    /**\n     * Decode an allocate with seed system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAllocateWithSeed\",\n    value: function decodeAllocateWithSeed(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 1);\n\n      var _decodeData5 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data),\n          base = _decodeData5.base,\n          seed = _decodeData5.seed,\n          space = _decodeData5.space,\n          programId = _decodeData5.programId;\n\n      return {\n        accountPubkey: instruction.keys[0].pubkey,\n        basePubkey: new PublicKey(base),\n        seed: seed,\n        space: space,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode an assign system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAssign\",\n    value: function decodeAssign(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 1);\n\n      var _decodeData6 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data),\n          programId = _decodeData6.programId;\n\n      return {\n        accountPubkey: instruction.keys[0].pubkey,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode an assign with seed system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAssignWithSeed\",\n    value: function decodeAssignWithSeed(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 1);\n\n      var _decodeData7 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data),\n          base = _decodeData7.base,\n          seed = _decodeData7.seed,\n          programId = _decodeData7.programId;\n\n      return {\n        accountPubkey: instruction.keys[0].pubkey,\n        basePubkey: new PublicKey(base),\n        seed: seed,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode a create account with seed system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeCreateWithSeed\",\n    value: function decodeCreateWithSeed(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData8 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data),\n          base = _decodeData8.base,\n          seed = _decodeData8.seed,\n          lamports = _decodeData8.lamports,\n          space = _decodeData8.space,\n          programId = _decodeData8.programId;\n\n      return {\n        fromPubkey: instruction.keys[0].pubkey,\n        newAccountPubkey: instruction.keys[1].pubkey,\n        basePubkey: new PublicKey(base),\n        seed: seed,\n        lamports: lamports,\n        space: space,\n        programId: new PublicKey(programId)\n      };\n    }\n    /**\n     * Decode a nonce initialize system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeNonceInitialize\",\n    value: function decodeNonceInitialize(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n\n      var _decodeData9 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data),\n          authorized = _decodeData9.authorized;\n\n      return {\n        noncePubkey: instruction.keys[0].pubkey,\n        authorizedPubkey: new PublicKey(authorized)\n      };\n    }\n    /**\n     * Decode a nonce advance system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeNonceAdvance\",\n    value: function decodeNonceAdvance(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n      decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n      return {\n        noncePubkey: instruction.keys[0].pubkey,\n        authorizedPubkey: instruction.keys[2].pubkey\n      };\n    }\n    /**\n     * Decode a nonce withdraw system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeNonceWithdraw\",\n    value: function decodeNonceWithdraw(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 5);\n\n      var _decodeData10 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data),\n          lamports = _decodeData10.lamports;\n\n      return {\n        noncePubkey: instruction.keys[0].pubkey,\n        toPubkey: instruction.keys[1].pubkey,\n        authorizedPubkey: instruction.keys[4].pubkey,\n        lamports: lamports\n      };\n    }\n    /**\n     * Decode a nonce authorize system instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeNonceAuthorize\",\n    value: function decodeNonceAuthorize(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData11 = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data),\n          authorized = _decodeData11.authorized;\n\n      return {\n        noncePubkey: instruction.keys[0].pubkey,\n        authorizedPubkey: instruction.keys[1].pubkey,\n        newAuthorizedPubkey: new PublicKey(authorized)\n      };\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"checkProgramId\",\n    value: function checkProgramId(programId) {\n      if (!programId.equals(SystemProgram.programId)) {\n        throw new Error('invalid instruction; programId is not SystemProgram');\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"checkKeyLength\",\n    value: function checkKeyLength(keys, expectedLength) {\n      if (keys.length < expectedLength) {\n        throw new Error(\"invalid instruction; found \".concat(keys.length, \" keys, expected at least \").concat(expectedLength));\n      }\n    }\n  }]);\n\n  return SystemInstruction;\n}();\n/**\n * An enumeration of valid SystemInstructionType's\n * @typedef {'Create' | 'Assign' | 'Transfer' | 'CreateWithSeed'\n | 'AdvanceNonceAccount' | 'WithdrawNonceAccount' | 'InitializeNonceAccount'\n | 'AuthorizeNonceAccount'} SystemInstructionType\n */\n\n/**\n * An enumeration of valid system InstructionType's\n */\n\n\nvar SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: struct([u32('instruction'), ns64('lamports'), ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: struct([u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: struct([u32('instruction'), ns64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: struct([u32('instruction'), publicKey('base'), rustString('seed'), ns64('lamports'), ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: struct([u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: struct([u32('instruction'), ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: struct([u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: struct([u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: struct([u32('instruction'), ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: struct([u32('instruction'), publicKey('base'), rustString('seed'), ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: struct([u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: struct([u32('instruction'), ns64('lamports'), rustString('seed'), publicKey('programId')])\n  }\n});\n/**\n * Factory class for transactions to interact with the System program\n */\n\nvar SystemProgram = /*#__PURE__*/function () {\n  function SystemProgram() {\n    _classCallCheck(this, SystemProgram);\n  }\n\n  _createClass(SystemProgram, null, [{\n    key: \"programId\",\n    get:\n    /**\n     * Public key that identifies the System program\n     */\n    function get() {\n      return new PublicKey('11111111111111111111111111111111');\n    }\n    /**\n     * Generate a transaction instruction that creates a new account\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n      var data = encodeData(type, {\n        lamports: params.lamports,\n        space: params.space,\n        programId: params.programId.toBuffer()\n      });\n      return new TransactionInstruction({\n        keys: [{\n          pubkey: params.fromPubkey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: params.newAccountPubkey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction instruction that transfers lamports from one account to another\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function transfer(params) {\n      var data;\n      var keys;\n\n      if (params.basePubkey) {\n        var _type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n        data = encodeData(_type, {\n          lamports: params.lamports,\n          seed: params.seed,\n          programId: params.programId.toBuffer()\n        });\n        keys = [{\n          pubkey: params.fromPubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: params.basePubkey,\n          isSigner: true,\n          isWritable: false\n        }, {\n          pubkey: params.toPubkey,\n          isSigner: false,\n          isWritable: true\n        }];\n      } else {\n        var _type2 = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n        data = encodeData(_type2, {\n          lamports: params.lamports\n        });\n        keys = [{\n          pubkey: params.fromPubkey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: params.toPubkey,\n          isSigner: false,\n          isWritable: true\n        }];\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction instruction that assigns an account to a program\n     */\n\n  }, {\n    key: \"assign\",\n    value: function assign(params) {\n      var data;\n      var keys;\n\n      if (params.basePubkey) {\n        var _type3 = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n        data = encodeData(_type3, {\n          base: params.basePubkey.toBuffer(),\n          seed: params.seed,\n          programId: params.programId.toBuffer()\n        });\n        keys = [{\n          pubkey: params.accountPubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: params.basePubkey,\n          isSigner: true,\n          isWritable: false\n        }];\n      } else {\n        var _type4 = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n        data = encodeData(_type4, {\n          programId: params.programId.toBuffer()\n        });\n        keys = [{\n          pubkey: params.accountPubkey,\n          isSigner: true,\n          isWritable: true\n        }];\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction instruction that creates a new account at\n     *   an address generated with `from`, a seed, and programId\n     */\n\n  }, {\n    key: \"createAccountWithSeed\",\n    value: function createAccountWithSeed(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n      var data = encodeData(type, {\n        base: params.basePubkey.toBuffer(),\n        seed: params.seed,\n        lamports: params.lamports,\n        space: params.space,\n        programId: params.programId.toBuffer()\n      });\n      var keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (params.basePubkey != params.fromPubkey) {\n        keys.push({\n          pubkey: params.basePubkey,\n          isSigner: true,\n          isWritable: false\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction that creates a new Nonce account\n     */\n\n  }, {\n    key: \"createNonceAccount\",\n    value: function createNonceAccount(params) {\n      var transaction = new Transaction();\n\n      if (params.basePubkey && params.seed) {\n        transaction.add(SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId\n        }));\n      } else {\n        transaction.add(SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId\n        }));\n      }\n\n      var initParams = {\n        noncePubkey: params.noncePubkey,\n        authorizedPubkey: params.authorizedPubkey\n      };\n      transaction.add(this.nonceInitialize(initParams));\n      return transaction;\n    }\n    /**\n     * Generate an instruction to initialize a Nonce account\n     */\n\n  }, {\n    key: \"nonceInitialize\",\n    value: function nonceInitialize(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n      var data = encodeData(type, {\n        authorized: params.authorizedPubkey.toBuffer()\n      });\n      var instructionData = {\n        keys: [{\n          pubkey: params.noncePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      };\n      return new TransactionInstruction(instructionData);\n    }\n    /**\n     * Generate an instruction to advance the nonce in a Nonce account\n     */\n\n  }, {\n    key: \"nonceAdvance\",\n    value: function nonceAdvance(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n      var data = encodeData(type);\n      var instructionData = {\n        keys: [{\n          pubkey: params.noncePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: params.authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      };\n      return new TransactionInstruction(instructionData);\n    }\n    /**\n     * Generate a transaction instruction that withdraws lamports from a Nonce account\n     */\n\n  }, {\n    key: \"nonceWithdraw\",\n    value: function nonceWithdraw(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n      var data = encodeData(type, {\n        lamports: params.lamports\n      });\n      return new TransactionInstruction({\n        keys: [{\n          pubkey: params.noncePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: params.toPubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: params.authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction instruction that authorizes a new PublicKey as the authority\n     * on a Nonce account.\n     */\n\n  }, {\n    key: \"nonceAuthorize\",\n    value: function nonceAuthorize(params) {\n      var type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n      var data = encodeData(type, {\n        authorized: params.newAuthorizedPubkey.toBuffer()\n      });\n      return new TransactionInstruction({\n        keys: [{\n          pubkey: params.noncePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: params.authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a transaction instruction that allocates space in an account without funding\n     */\n\n  }, {\n    key: \"allocate\",\n    value: function allocate(params) {\n      var data;\n      var keys;\n\n      if (params.basePubkey) {\n        var _type5 = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n        data = encodeData(_type5, {\n          base: params.basePubkey.toBuffer(),\n          seed: params.seed,\n          space: params.space,\n          programId: params.programId.toBuffer()\n        });\n        keys = [{\n          pubkey: params.accountPubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: params.basePubkey,\n          isSigner: true,\n          isWritable: false\n        }];\n      } else {\n        var _type6 = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n        data = encodeData(_type6, {\n          space: params.space\n        });\n        keys = [{\n          pubkey: params.accountPubkey,\n          isSigner: true,\n          isWritable: true\n        }];\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n  }]);\n\n  return SystemProgram;\n}(); //      \n\n/**\n * Program loader interface\n */\n\n\nvar Loader = /*#__PURE__*/function () {\n  function Loader() {\n    _classCallCheck(this, Loader);\n  }\n\n  _createClass(Loader, null, [{\n    key: \"chunkSize\",\n    get:\n    /**\n     * Amount of program data placed in each load Transaction\n     */\n    function get() {\n      // Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n      // rest of the Transaction fields\n      //\n      // TODO: replace 300 with a proper constant for the size of the other\n      // Transaction fields\n      return PACKET_DATA_SIZE - 300;\n    }\n    /**\n     * Minimum number of signatures required to load a program not including\n     * retries\n     *\n     * Can be used to calculate transaction fees\n     */\n\n  }, {\n    key: \"getMinNumSignatures\",\n    value: function getMinNumSignatures(dataLength) {\n      return 2 * ( // Every transaction requires two signatures (payer + program)\n      Math.ceil(dataLength / Loader.chunkSize) + 1 + // Add one for Create transaction\n      1) // Add one for Finalize transaction\n      ;\n    }\n    /**\n     * Loads a generic program\n     *\n     * @param connection The connection to use\n     * @param payer System account that pays to load the program\n     * @param program Account to load the program into\n     * @param programId Public key that identifies the loader\n     * @param data Program octets\n     * @return true if program was loaded successfully, false if program was already loaded\n     */\n\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee65(connection, payer, program, programId, data) {\n        var balanceNeeded, programInfo, transaction, dataLayout, chunkSize, offset$1, array, transactions, bytes, _data, _transaction, REQUESTS_PER_SECOND, _dataLayout, _data2, _transaction2;\n\n        return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n          while (1) {\n            switch (_context65.prev = _context65.next) {\n              case 0:\n                _context65.next = 2;\n                return connection.getMinimumBalanceForRentExemption(data.length);\n\n              case 2:\n                balanceNeeded = _context65.sent;\n                _context65.next = 5;\n                return connection.getAccountInfo(program.publicKey, 'confirmed');\n\n              case 5:\n                programInfo = _context65.sent;\n                transaction = null;\n\n                if (!(programInfo !== null)) {\n                  _context65.next = 16;\n                  break;\n                }\n\n                if (!programInfo.executable) {\n                  _context65.next = 11;\n                  break;\n                }\n\n                console.error('Program load failed, account is already executable');\n                return _context65.abrupt(\"return\", false);\n\n              case 11:\n                if (programInfo.data.length !== data.length) {\n                  transaction = transaction || new Transaction();\n                  transaction.add(SystemProgram.allocate({\n                    accountPubkey: program.publicKey,\n                    space: data.length\n                  }));\n                }\n\n                if (!programInfo.owner.equals(programId)) {\n                  transaction = transaction || new Transaction();\n                  transaction.add(SystemProgram.assign({\n                    accountPubkey: program.publicKey,\n                    programId: programId\n                  }));\n                }\n\n                if (programInfo.lamports < balanceNeeded) {\n                  transaction = transaction || new Transaction();\n                  transaction.add(SystemProgram.transfer({\n                    fromPubkey: payer.publicKey,\n                    toPubkey: program.publicKey,\n                    lamports: balanceNeeded - programInfo.lamports\n                  }));\n                }\n\n                _context65.next = 17;\n                break;\n\n              case 16:\n                transaction = new Transaction().add(SystemProgram.createAccount({\n                  fromPubkey: payer.publicKey,\n                  newAccountPubkey: program.publicKey,\n                  lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n                  space: data.length,\n                  programId: programId\n                }));\n\n              case 17:\n                if (!(transaction !== null)) {\n                  _context65.next = 20;\n                  break;\n                }\n\n                _context65.next = 20;\n                return sendAndConfirmTransaction(connection, transaction, [payer, program], {\n                  commitment: 'confirmed'\n                });\n\n              case 20:\n                dataLayout = struct([u32('instruction'), u32('offset'), u32('bytesLength'), u32('bytesLengthPadding'), seq(u8('byte'), offset(u32(), -8), 'bytes')]);\n                chunkSize = Loader.chunkSize;\n                offset$1 = 0;\n                array = data;\n                transactions = [];\n\n              case 25:\n                if (!(array.length > 0)) {\n                  _context65.next = 39;\n                  break;\n                }\n\n                bytes = array.slice(0, chunkSize);\n                _data = buffer.Buffer.alloc(chunkSize + 16);\n                dataLayout.encode({\n                  instruction: 0,\n                  // Load instruction\n                  offset: offset$1,\n                  bytes: bytes\n                }, _data);\n                _transaction = new Transaction().add({\n                  keys: [{\n                    pubkey: program.publicKey,\n                    isSigner: true,\n                    isWritable: true\n                  }],\n                  programId: programId,\n                  data: _data\n                });\n                transactions.push(sendAndConfirmTransaction(connection, _transaction, [payer, program], {\n                  commitment: 'confirmed'\n                })); // Delay between sends in an attempt to reduce rate limit errors\n\n                if (!connection._rpcEndpoint.includes('solana.com')) {\n                  _context65.next = 35;\n                  break;\n                }\n\n                REQUESTS_PER_SECOND = 4;\n                _context65.next = 35;\n                return sleep(1000 / REQUESTS_PER_SECOND);\n\n              case 35:\n                offset$1 += chunkSize;\n                array = array.slice(chunkSize);\n                _context65.next = 25;\n                break;\n\n              case 39:\n                _context65.next = 41;\n                return Promise.all(transactions);\n\n              case 41:\n                _dataLayout = struct([u32('instruction')]);\n                _data2 = buffer.Buffer.alloc(_dataLayout.span);\n\n                _dataLayout.encode({\n                  instruction: 1 // Finalize instruction\n\n                }, _data2);\n\n                _transaction2 = new Transaction().add({\n                  keys: [{\n                    pubkey: program.publicKey,\n                    isSigner: true,\n                    isWritable: true\n                  }, {\n                    pubkey: SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false\n                  }],\n                  programId: programId,\n                  data: _data2\n                });\n                _context65.next = 47;\n                return sendAndConfirmTransaction(connection, _transaction2, [payer, program], {\n                  commitment: 'confirmed'\n                });\n\n              case 47:\n                return _context65.abrupt(\"return\", true);\n\n              case 48:\n              case \"end\":\n                return _context65.stop();\n            }\n          }\n        }, _callee65);\n      }));\n\n      function load(_x101, _x102, _x103, _x104, _x105) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }]);\n\n  return Loader;\n}(); //      \n\n\nvar BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n/**\n * Factory class for transactions to interact with a program loader\n */\n\nvar BpfLoader = /*#__PURE__*/function () {\n  function BpfLoader() {\n    _classCallCheck(this, BpfLoader);\n  }\n\n  _createClass(BpfLoader, null, [{\n    key: \"getMinNumSignatures\",\n    value:\n    /**\n     * Minimum number of signatures required to load a program not including\n     * retries\n     *\n     * Can be used to calculate transaction fees\n     */\n    function getMinNumSignatures(dataLength) {\n      return Loader.getMinNumSignatures(dataLength);\n    }\n    /**\n     * Load a BPF program\n     *\n     * @param connection The connection to use\n     * @param payer Account that will pay program loading fees\n     * @param program Account to load the program into\n     * @param elf The entire ELF containing the BPF program\n     * @param loaderProgramId The program id of the BPF loader to use\n     * @return true if program was loaded successfully, false if program was already loaded\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(connection, payer, program, elf, loaderProgramId) {\n      return Loader.load(connection, payer, program, loaderProgramId, elf);\n    }\n  }]);\n\n  return BpfLoader;\n}();\n\nvar STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\nvar Authorized =\n/**\n * Create a new Authorized object\n */\nfunction Authorized(staker, withdrawer) {\n  _classCallCheck(this, Authorized);\n\n  _defineProperty(this, \"staker\", void 0);\n\n  _defineProperty(this, \"withdrawer\", void 0);\n\n  this.staker = staker;\n  this.withdrawer = withdrawer;\n};\n\nvar Lockup =\n/**\n * Create a new Lockup object\n */\nfunction Lockup(unixTimestamp, epoch, custodian) {\n  _classCallCheck(this, Lockup);\n\n  _defineProperty(this, \"unixTimestamp\", void 0);\n\n  _defineProperty(this, \"epoch\", void 0);\n\n  _defineProperty(this, \"custodian\", void 0);\n\n  this.unixTimestamp = unixTimestamp;\n  this.epoch = epoch;\n  this.custodian = custodian;\n};\n/**\n * Create stake account transaction params\n * @typedef {Object} CreateStakeAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\n\n/**\n * Create stake account with seed transaction params\n * @typedef {Object} CreateStakeAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\n\n/**\n * Initialize stake instruction params\n * @typedef {Object} InitializeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n */\n\n/**\n * Delegate stake instruction params\n * @typedef {Object} DelegateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} votePubkey\n */\n\n/**\n * Authorize stake instruction params\n * @typedef {Object} AuthorizeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\n\n/**\n * Authorize stake instruction params using a derived key\n * @typedef {Object} AuthorizeWithSeedStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorityBase\n * @property {string} authoritySeed\n * @property {PublicKey} authorityOwner\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\n\n/**\n * Split stake instruction params\n * @typedef {Object} SplitStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} splitStakePubkey\n * @property {number} lamports\n */\n\n/**\n * Withdraw stake instruction params\n * @typedef {Object} WithdrawStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {PublicKey} custodianPubkey\n */\n\n/**\n * Deactivate stake instruction params\n * @typedef {Object} DeactivateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n */\n\n/**\n * Stake Instruction class\n */\n\n\nvar StakeInstruction = /*#__PURE__*/function () {\n  function StakeInstruction() {\n    _classCallCheck(this, StakeInstruction);\n  }\n\n  _createClass(StakeInstruction, null, [{\n    key: \"decodeInstructionType\",\n    value:\n    /**\n     * Decode a stake instruction and retrieve the instruction type.\n     */\n    function decodeInstructionType(instruction) {\n      this.checkProgramId(instruction.programId);\n      var instructionTypeLayout = u32('instruction');\n      var typeIndex = instructionTypeLayout.decode(instruction.data);\n      var type;\n\n      for (var _i22 = 0, _Object$keys2 = Object.keys(STAKE_INSTRUCTION_LAYOUTS); _i22 < _Object$keys2.length; _i22++) {\n        var t = _Object$keys2[_i22];\n\n        if (STAKE_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n          type = t;\n        }\n      }\n\n      if (!type) {\n        throw new Error('Instruction type incorrect; not a StakeInstruction');\n      }\n\n      return type;\n    }\n    /**\n     * Decode a initialize stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeInitialize\",\n    value: function decodeInitialize(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData12 = decodeData(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data),\n          authorized = _decodeData12.authorized,\n          lockup = _decodeData12.lockup;\n\n      return {\n        stakePubkey: instruction.keys[0].pubkey,\n        authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n        lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n      };\n    }\n    /**\n     * Decode a delegate stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeDelegate\",\n    value: function decodeDelegate(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 6);\n      decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n      return {\n        stakePubkey: instruction.keys[0].pubkey,\n        votePubkey: instruction.keys[1].pubkey,\n        authorizedPubkey: instruction.keys[5].pubkey\n      };\n    }\n    /**\n     * Decode an authorize stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAuthorize\",\n    value: function decodeAuthorize(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n\n      var _decodeData13 = decodeData(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data),\n          newAuthorized = _decodeData13.newAuthorized,\n          stakeAuthorizationType = _decodeData13.stakeAuthorizationType;\n\n      var o = {\n        stakePubkey: instruction.keys[0].pubkey,\n        authorizedPubkey: instruction.keys[2].pubkey,\n        newAuthorizedPubkey: new PublicKey(newAuthorized),\n        stakeAuthorizationType: {\n          index: stakeAuthorizationType\n        }\n      };\n\n      if (instruction.keys.length > 3) {\n        o.custodianPubkey = instruction.keys[3].pubkey;\n      }\n\n      return o;\n    }\n    /**\n     * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeAuthorizeWithSeed\",\n    value: function decodeAuthorizeWithSeed(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 2);\n\n      var _decodeData14 = decodeData(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data),\n          newAuthorized = _decodeData14.newAuthorized,\n          stakeAuthorizationType = _decodeData14.stakeAuthorizationType,\n          authoritySeed = _decodeData14.authoritySeed,\n          authorityOwner = _decodeData14.authorityOwner;\n\n      var o = {\n        stakePubkey: instruction.keys[0].pubkey,\n        authorityBase: instruction.keys[1].pubkey,\n        authoritySeed: authoritySeed,\n        authorityOwner: new PublicKey(authorityOwner),\n        newAuthorizedPubkey: new PublicKey(newAuthorized),\n        stakeAuthorizationType: {\n          index: stakeAuthorizationType\n        }\n      };\n\n      if (instruction.keys.length > 3) {\n        o.custodianPubkey = instruction.keys[3].pubkey;\n      }\n\n      return o;\n    }\n    /**\n     * Decode a split stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeSplit\",\n    value: function decodeSplit(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n\n      var _decodeData15 = decodeData(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data),\n          lamports = _decodeData15.lamports;\n\n      return {\n        stakePubkey: instruction.keys[0].pubkey,\n        splitStakePubkey: instruction.keys[1].pubkey,\n        authorizedPubkey: instruction.keys[2].pubkey,\n        lamports: lamports\n      };\n    }\n    /**\n     * Decode a withdraw stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeWithdraw\",\n    value: function decodeWithdraw(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 5);\n\n      var _decodeData16 = decodeData(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data),\n          lamports = _decodeData16.lamports;\n\n      var o = {\n        stakePubkey: instruction.keys[0].pubkey,\n        toPubkey: instruction.keys[1].pubkey,\n        authorizedPubkey: instruction.keys[4].pubkey,\n        lamports: lamports\n      };\n\n      if (instruction.keys.length > 5) {\n        o.custodianPubkey = instruction.keys[5].pubkey;\n      }\n\n      return o;\n    }\n    /**\n     * Decode a deactivate stake instruction and retrieve the instruction params.\n     */\n\n  }, {\n    key: \"decodeDeactivate\",\n    value: function decodeDeactivate(instruction) {\n      this.checkProgramId(instruction.programId);\n      this.checkKeyLength(instruction.keys, 3);\n      decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n      return {\n        stakePubkey: instruction.keys[0].pubkey,\n        authorizedPubkey: instruction.keys[2].pubkey\n      };\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"checkProgramId\",\n    value: function checkProgramId(programId) {\n      if (!programId.equals(StakeProgram.programId)) {\n        throw new Error('invalid instruction; programId is not StakeProgram');\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"checkKeyLength\",\n    value: function checkKeyLength(keys, expectedLength) {\n      if (keys.length < expectedLength) {\n        throw new Error(\"invalid instruction; found \".concat(keys.length, \" keys, expected at least \").concat(expectedLength));\n      }\n    }\n  }]);\n\n  return StakeInstruction;\n}();\n/**\n * An enumeration of valid StakeInstructionType's\n * @typedef { 'Initialize' | 'Authorize' | 'AuthorizeWithSeed' | 'Delegate' | 'Split' | 'Withdraw'\n | 'Deactivate' } StakeInstructionType\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n */\n\n\nvar STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: struct([u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: struct([u32('instruction'), publicKey('newAuthorized'), u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: struct([u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: struct([u32('instruction'), ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: struct([u32('instruction'), ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: struct([u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: struct([u32('instruction'), publicKey('newAuthorized'), u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n/**\n * @typedef {Object} StakeAuthorizationType\n * @property (index} The Stake Authorization index (from solana-stake-program)\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\n\nvar StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Stake program\n */\n\nvar StakeProgram = /*#__PURE__*/function () {\n  function StakeProgram() {\n    _classCallCheck(this, StakeProgram);\n  }\n\n  _createClass(StakeProgram, null, [{\n    key: \"programId\",\n    get:\n    /**\n     * Public key that identifies the Stake program\n     */\n    function get() {\n      return new PublicKey('Stake11111111111111111111111111111111111111');\n    }\n    /**\n     * Max space of a Stake account\n     *\n     * This is generated from the solana-stake-program StakeState struct as\n     * `std::mem::size_of::<StakeState>()`:\n     * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n     */\n\n  }, {\n    key: \"space\",\n    get: function get() {\n      return 200;\n    }\n    /**\n     * Generate an Initialize instruction to add to a Stake Create transaction\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(params) {\n      var stakePubkey = params.stakePubkey,\n          authorized = params.authorized,\n          lockup = params.lockup;\n      var type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n      var data = encodeData(type, {\n        authorized: {\n          staker: authorized.staker.toBuffer(),\n          withdrawer: authorized.withdrawer.toBuffer()\n        },\n        lockup: {\n          unixTimestamp: lockup.unixTimestamp,\n          epoch: lockup.epoch,\n          custodian: lockup.custodian.toBuffer()\n        }\n      });\n      var instructionData = {\n        keys: [{\n          pubkey: stakePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      };\n      return new TransactionInstruction(instructionData);\n    }\n    /**\n     * Generate a Transaction that creates a new Stake account at\n     *   an address generated with `from`, a seed, and the Stake programId\n     */\n\n  }, {\n    key: \"createAccountWithSeed\",\n    value: function createAccountWithSeed(params) {\n      var transaction = new Transaction();\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId\n      }));\n      var stakePubkey = params.stakePubkey,\n          authorized = params.authorized,\n          lockup = params.lockup;\n      return transaction.add(this.initialize({\n        stakePubkey: stakePubkey,\n        authorized: authorized,\n        lockup: lockup\n      }));\n    }\n    /**\n     * Generate a Transaction that creates a new Stake account\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount(params) {\n      var transaction = new Transaction();\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId\n      }));\n      var stakePubkey = params.stakePubkey,\n          authorized = params.authorized,\n          lockup = params.lockup;\n      return transaction.add(this.initialize({\n        stakePubkey: stakePubkey,\n        authorized: authorized,\n        lockup: lockup\n      }));\n    }\n    /**\n     * Generate a Transaction that delegates Stake tokens to a validator\n     * Vote PublicKey. This transaction can also be used to redelegate Stake\n     * to a new validator Vote PublicKey.\n     */\n\n  }, {\n    key: \"delegate\",\n    value: function delegate(params) {\n      var stakePubkey = params.stakePubkey,\n          authorizedPubkey = params.authorizedPubkey,\n          votePubkey = params.votePubkey;\n      var type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n      var data = encodeData(type);\n      return new Transaction().add({\n        keys: [{\n          pubkey: stakePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: votePubkey,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: SYSVAR_CLOCK_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: STAKE_CONFIG_ID,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a Transaction that authorizes a new PublicKey as Staker\n     * or Withdrawer on the Stake account.\n     */\n\n  }, {\n    key: \"authorize\",\n    value: function authorize(params) {\n      var stakePubkey = params.stakePubkey,\n          authorizedPubkey = params.authorizedPubkey,\n          newAuthorizedPubkey = params.newAuthorizedPubkey,\n          stakeAuthorizationType = params.stakeAuthorizationType,\n          custodianPubkey = params.custodianPubkey;\n      var type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n      var data = encodeData(type, {\n        newAuthorized: newAuthorizedPubkey.toBuffer(),\n        stakeAuthorizationType: stakeAuthorizationType.index\n      });\n      var keys = [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n\n      if (custodianPubkey) {\n        keys.push({\n          pubkey: custodianPubkey,\n          isSigner: false,\n          isWritable: false\n        });\n      }\n\n      return new Transaction().add({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a Transaction that authorizes a new PublicKey as Staker\n     * or Withdrawer on the Stake account.\n     */\n\n  }, {\n    key: \"authorizeWithSeed\",\n    value: function authorizeWithSeed(params) {\n      var stakePubkey = params.stakePubkey,\n          authorityBase = params.authorityBase,\n          authoritySeed = params.authoritySeed,\n          authorityOwner = params.authorityOwner,\n          newAuthorizedPubkey = params.newAuthorizedPubkey,\n          stakeAuthorizationType = params.stakeAuthorizationType,\n          custodianPubkey = params.custodianPubkey;\n      var type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n      var data = encodeData(type, {\n        newAuthorized: newAuthorizedPubkey.toBuffer(),\n        stakeAuthorizationType: stakeAuthorizationType.index,\n        authoritySeed: authoritySeed,\n        authorityOwner: authorityOwner.toBuffer()\n      });\n      var keys = [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorityBase,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (custodianPubkey) {\n        keys.push({\n          pubkey: custodianPubkey,\n          isSigner: false,\n          isWritable: false\n        });\n      }\n\n      return new Transaction().add({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a Transaction that splits Stake tokens into another stake account\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(params) {\n      var stakePubkey = params.stakePubkey,\n          authorizedPubkey = params.authorizedPubkey,\n          splitStakePubkey = params.splitStakePubkey,\n          lamports = params.lamports;\n      var transaction = new Transaction();\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId\n      }));\n      var type = STAKE_INSTRUCTION_LAYOUTS.Split;\n      var data = encodeData(type, {\n        lamports: lamports\n      });\n      return transaction.add({\n        keys: [{\n          pubkey: stakePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: splitStakePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a Transaction that withdraws deactivated Stake tokens.\n     */\n\n  }, {\n    key: \"withdraw\",\n    value: function withdraw(params) {\n      var stakePubkey = params.stakePubkey,\n          authorizedPubkey = params.authorizedPubkey,\n          toPubkey = params.toPubkey,\n          lamports = params.lamports,\n          custodianPubkey = params.custodianPubkey;\n      var type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n      var data = encodeData(type, {\n        lamports: lamports\n      });\n      var keys = [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n\n      if (custodianPubkey) {\n        keys.push({\n          pubkey: custodianPubkey,\n          isSigner: false,\n          isWritable: false\n        });\n      }\n\n      return new Transaction().add({\n        keys: keys,\n        programId: this.programId,\n        data: data\n      });\n    }\n    /**\n     * Generate a Transaction that deactivates Stake tokens.\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(params) {\n      var stakePubkey = params.stakePubkey,\n          authorizedPubkey = params.authorizedPubkey;\n      var type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n      var data = encodeData(type);\n      return new Transaction().add({\n        keys: [{\n          pubkey: stakePubkey,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_CLOCK_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: authorizedPubkey,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: this.programId,\n        data: data\n      });\n    }\n  }]);\n\n  return StakeProgram;\n}(); //      \n\n\nvar publicKeyCreate = secp256k1.publicKeyCreate,\n    ecdsaSign = secp256k1.ecdsaSign;\nvar PRIVATE_KEY_BYTES = 32;\nvar PUBLIC_KEY_BYTES = 65;\nvar HASHED_PUBKEY_SERIALIZED_SIZE = 20;\nvar SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n/**\n * Create a Secp256k1 instruction using a public key params\n * @typedef {Object} CreateSecp256k1InstructionWithPublicKeyParams\n * @property {Buffer | Uint8Array | Array<number>} publicKey\n * @property {Buffer | Uint8Array | Array<number>} message\n * @property {Buffer | Uint8Array | Array<number>} signature\n * @property {number} recoveryId\n */\n\n/**\n * Create a Secp256k1 instruction using a private key params\n * @typedef {Object} CreateSecp256k1InstructionWithPrivateKeyParams\n * @property {Buffer | Uint8Array | Array<number>} privateKey\n * @property {Buffer | Uint8Array | Array<number>} message\n */\n\nvar SECP256K1_INSTRUCTION_LAYOUT = struct([u8('numSignatures'), u16('signatureOffset'), u8('signatureInstructionIndex'), u16('ethAddressOffset'), u8('ethAddressInstructionIndex'), u16('messageDataOffset'), u16('messageDataSize'), u8('messageInstructionIndex'), blob(20, 'ethPublicKey'), blob(64, 'signature'), u8('recoveryId')]);\n\nvar Secp256k1Program = /*#__PURE__*/function () {\n  function Secp256k1Program() {\n    _classCallCheck(this, Secp256k1Program);\n  }\n\n  _createClass(Secp256k1Program, null, [{\n    key: \"programId\",\n    get:\n    /**\n     * Public key that identifies the Secp256k program\n     */\n    function get() {\n      return new PublicKey('KeccakSecp256k11111111111111111111111111111');\n    }\n    /**\n     * Create a secp256k1 instruction with public key\n     */\n\n  }, {\n    key: \"createInstructionWithPublicKey\",\n    value: function createInstructionWithPublicKey(params) {\n      var publicKey = params.publicKey,\n          message = params.message,\n          signature = params.signature,\n          recoveryId = params.recoveryId;\n      assert(publicKey.length === PUBLIC_KEY_BYTES, \"Public key must be \".concat(PUBLIC_KEY_BYTES, \" bytes\"));\n      var ethPublicKey;\n\n      try {\n        ethPublicKey = constructEthPubkey(publicKey);\n      } catch (error) {\n        throw new Error(\"Error constructing ethereum public key: \".concat(error));\n      }\n\n      var dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n      var ethAddressOffset = dataStart;\n      var signatureOffset = dataStart + ethPublicKey.length;\n      var messageDataOffset = signatureOffset + signature.length + 1;\n      var numSignatures = 1;\n      var instructionData = buffer.Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n      SECP256K1_INSTRUCTION_LAYOUT.encode({\n        numSignatures: numSignatures,\n        signatureOffset: signatureOffset,\n        signatureInstructionIndex: 0,\n        ethAddressOffset: ethAddressOffset,\n        ethAddressInstructionIndex: 0,\n        messageDataOffset: messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: 0,\n        signature: toBuffer(signature),\n        ethPublicKey: ethPublicKey,\n        recoveryId: recoveryId\n      }, instructionData);\n      instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n      return new TransactionInstruction({\n        keys: [],\n        programId: Secp256k1Program.programId,\n        data: instructionData\n      });\n    }\n    /**\n     * Create a secp256k1 instruction with private key\n     */\n\n  }, {\n    key: \"createInstructionWithPrivateKey\",\n    value: function createInstructionWithPrivateKey(params) {\n      var privateKey = params.privateKey,\n          message = params.message;\n      assert(privateKey.length === PRIVATE_KEY_BYTES, \"Private key must be \".concat(PRIVATE_KEY_BYTES, \" bytes\"));\n\n      try {\n        var _publicKey2 = publicKeyCreate(privateKey, false);\n\n        var messageHash = buffer.Buffer.from(keccak_256.update(toBuffer(message)).digest());\n\n        var _ecdsaSign = ecdsaSign(messageHash, privateKey),\n            signature = _ecdsaSign.signature,\n            recoveryId = _ecdsaSign.recid;\n\n        return this.createInstructionWithPublicKey({\n          publicKey: _publicKey2,\n          message: message,\n          signature: signature,\n          recoveryId: recoveryId\n        });\n      } catch (error) {\n        throw new Error(\"Error creating instruction; \".concat(error));\n      }\n    }\n  }]);\n\n  return Secp256k1Program;\n}();\n\nfunction constructEthPubkey(publicKey) {\n  return buffer.Buffer.from(keccak_256.update(toBuffer(publicKey.slice(1))) // throw away leading byte\n  .digest()).slice(-HASHED_PUBKEY_SERIALIZED_SIZE);\n}\n\nvar VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n/**\n * @private\n */\n\n/**\n * Info used to identity validators.\n *\n * @typedef {Object} Info\n * @property {string} name validator name\n * @property {?string} website optional, validator website\n * @property {?string} details optional, extra information the validator chose to share\n * @property {?string} keybaseUsername optional, used to identify validators on keybase.io\n */\n\nvar InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n/**\n * ValidatorInfo class\n */\n\nvar ValidatorInfo = /*#__PURE__*/function () {\n  /**\n   * validator public key\n   */\n\n  /**\n   * validator information\n   */\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  function ValidatorInfo(key, info) {\n    _classCallCheck(this, ValidatorInfo);\n\n    _defineProperty(this, \"key\", void 0);\n\n    _defineProperty(this, \"info\", void 0);\n\n    this.key = key;\n    this.info = info;\n  }\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n\n\n  _createClass(ValidatorInfo, null, [{\n    key: \"fromConfigData\",\n    value: function fromConfigData(buffer$1) {\n      var PUBKEY_LENGTH = 32;\n\n      var byteArray = _toConsumableArray(buffer$1);\n\n      var configKeyCount = decodeLength(byteArray);\n      if (configKeyCount !== 2) return null;\n      var configKeys = [];\n\n      for (var _i23 = 0; _i23 < 2; _i23++) {\n        var _publicKey3 = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n\n        byteArray = byteArray.slice(PUBKEY_LENGTH);\n        var isSigner = byteArray.slice(0, 1)[0] === 1;\n        byteArray = byteArray.slice(1);\n        configKeys.push({\n          publicKey: _publicKey3,\n          isSigner: isSigner\n        });\n      }\n\n      if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n        if (configKeys[1].isSigner) {\n          var rawInfo = rustString().decode(buffer.Buffer.from(byteArray));\n          var info = JSON.parse(rawInfo);\n          assert$3(info, InfoString);\n          return new ValidatorInfo(configKeys[1].publicKey, info);\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return ValidatorInfo;\n}();\n\nvar VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @private\n */\n\nvar VoteAccountLayout = struct([publicKey('nodePubkey'), publicKey('authorizedVoterPubkey'), publicKey('authorizedWithdrawerPubkey'), u8('commission'), nu64(), // votes.length\nseq(struct([nu64('slot'), u32('confirmationCount')]), offset(u32(), -8), 'votes'), u8('rootSlotValid'), nu64('rootSlot'), nu64('epoch'), nu64('credits'), nu64('lastEpochCredits'), nu64(), // epochCredits.length\nseq(struct([nu64('epoch'), nu64('credits'), nu64('prevCredits')]), offset(u32(), -8), 'epochCredits')]);\n/**\n * VoteAccount class\n */\n\nvar VoteAccount = /*#__PURE__*/function () {\n  function VoteAccount() {\n    _classCallCheck(this, VoteAccount);\n\n    _defineProperty(this, \"nodePubkey\", void 0);\n\n    _defineProperty(this, \"authorizedVoterPubkey\", void 0);\n\n    _defineProperty(this, \"authorizedWithdrawerPubkey\", void 0);\n\n    _defineProperty(this, \"commission\", void 0);\n\n    _defineProperty(this, \"votes\", void 0);\n\n    _defineProperty(this, \"rootSlot\", void 0);\n\n    _defineProperty(this, \"epoch\", void 0);\n\n    _defineProperty(this, \"credits\", void 0);\n\n    _defineProperty(this, \"lastEpochCredits\", void 0);\n\n    _defineProperty(this, \"epochCredits\", void 0);\n  }\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n\n\n  _createClass(VoteAccount, null, [{\n    key: \"fromAccountData\",\n    value: function fromAccountData(buffer) {\n      var va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n      va.nodePubkey = new PublicKey(va.nodePubkey);\n      va.authorizedVoterPubkey = new PublicKey(va.authorizedVoterPubkey);\n      va.authorizedWithdrawerPubkey = new PublicKey(va.authorizedWithdrawerPubkey);\n\n      if (!va.rootSlotValid) {\n        va.rootSlot = null;\n      }\n\n      return va;\n    }\n  }]);\n\n  return VoteAccount;\n}(); //      \n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n\nfunction sendAndConfirmRawTransaction(_x106, _x107, _x108) {\n  return _sendAndConfirmRawTransaction.apply(this, arguments);\n} //     \n\n/**\n * @private\n */\n\n\nfunction _sendAndConfirmRawTransaction() {\n  _sendAndConfirmRawTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee67(connection, rawTransaction, options) {\n    var sendOptions, signature, status;\n    return _regeneratorRuntime.wrap(function _callee67$(_context67) {\n      while (1) {\n        switch (_context67.prev = _context67.next) {\n          case 0:\n            sendOptions = options && {\n              skipPreflight: options.skipPreflight,\n              preflightCommitment: options.preflightCommitment || options.commitment\n            };\n            _context67.next = 3;\n            return connection.sendRawTransaction(rawTransaction, sendOptions);\n\n          case 3:\n            signature = _context67.sent;\n            _context67.next = 6;\n            return connection.confirmTransaction(signature, options && options.commitment);\n\n          case 6:\n            status = _context67.sent.value;\n\n            if (!status.err) {\n              _context67.next = 9;\n              break;\n            }\n\n            throw new Error(\"Raw transaction \".concat(signature, \" failed (\").concat(JSON.stringify(status), \")\"));\n\n          case 9:\n            return _context67.abrupt(\"return\", signature);\n\n          case 10:\n          case \"end\":\n            return _context67.stop();\n        }\n      }\n    }, _callee67);\n  }));\n  return _sendAndConfirmRawTransaction.apply(this, arguments);\n}\n\nvar endpoint = {\n  http: {\n    devnet: 'http://devnet.solana.com',\n    testnet: 'http://testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com'\n  },\n  https: {\n    devnet: 'https://devnet.solana.com',\n    testnet: 'https://testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\n\nfunction clusterApiUrl(cluster, tls) {\n  var key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  var url = endpoint[key][cluster];\n\n  if (!url) {\n    throw new Error(\"Unknown \".concat(key, \" cluster: \").concat(cluster));\n  }\n\n  return url;\n} //      \n\n/**\n * There are 1-billion lamports in one SOL\n */\n\n\nvar LAMPORTS_PER_SOL = 1000000000;\nexport { Account, Authorized, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, Connection, LAMPORTS_PER_SOL, Loader, Lockup, MAX_SEED_LENGTH, Message, NONCE_ACCOUNT_LENGTH, NonceAccount, PublicKey, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, StakeAuthorizationLayout, StakeInstruction, StakeProgram, SystemInstruction, SystemProgram, Transaction, TransactionInstruction, VALIDATOR_INFO_KEY, VOTE_PROGRAM_ID, ValidatorInfo, VoteAccount, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };","map":{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../src/util/to-buffer.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/index.js","../node_modules/bs58/index.js","../src/publickey.js","../src/account.js","../src/bpf-loader-deprecated.js","../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../node_modules/buffer-layout/lib/Layout.js","../src/layout.js","../src/util/shortvec-encoding.js","../src/message.js","../src/transaction.js","../src/sysvar.js","../node_modules/punycode/punycode.js","../node_modules/rollup-plugin-node-polyfills/polyfills/qs.js","../node_modules/rollup-plugin-node-polyfills/polyfills/url.js","../src/fee-calculator.js","../src/nonce-account.js","../src/timing.js","../src/util/sleep.js","../src/util/promise-timeout.js","../src/connection.js","../src/util/send-and-confirm-transaction.js","../src/instruction.js","../src/system-program.js","../src/loader.js","../src/bpf-loader.js","../src/stake-program.js","../src/secp256k1-program.js","../src/validator-info.js","../src/vote-account.js","../src/util/send-and-confirm-raw-transaction.js","../src/util/cluster.js","../src/index.js"],"names":["base64","toBuffer","arr","Buffer","require$$0","basex","naclLowLevel","nacl","MAX_SEED_LENGTH","constructor","decoded","bs58","equals","publicKey","toBase58","b","zeroPad","toString","createWithSeed","buffer","fromPublicKey","programId","hash","sha256","createProgramAddress","seeds","seed","publicKeyBytes","is_on_curve","findProgramAddress","nonce","seedsWithNonce","address","r","t","chk","num","den","den2","den4","den6","neq25519","gf1","I","c","d","secretKey","BPF_LOADER_DEPRECATED_PROGRAM_ID","isBuffer","global","inherits","inspect","utilInspect","assert","property","BufferLayout","rustString","rsl","_decode","_encode","data","chars","str","authorized","lockup","alloc","type","item","fields","len","size","elem","bytes","rem_len","PUBKEY_LENGTH","args","account","isAccountWritable","index","serialize","numKeys","keyCount","shortvec","instructions","instruction","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","length","signDataLayout","Layout","transaction","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","keys","key","recentBlockhash","signData","from","byteArray","accountCount","accountKeys","i","messageArgs","header","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","SIGNATURE_LENGTH","opts","Object","signature","add","items","compileMessage","nonceInfo","feePayer","programIds","accountMetas","accountMeta","pubkey","isSigner","isWritable","checkSigner","x","y","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","console","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","message","valid","pair","serializeMessage","setSigners","signers","seen","sign","uniqueSigners","signer","partialSign","_partialSign","addSignature","_addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatures","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","Message","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","this","hasOwnProperty","isArray","objectKeys","parse","qsParse","toASCII","qsStringify","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","fromAccountData","nonceAccount","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","resolve","setTimeout","timeoutPromise","timeoutId","result","clearTimeout","PublicKeyFromString","coerce","instance","string","value","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","union","pick","jsonrpc","id","error","code","unknown","optional","UnknownRpcResult","createRpcResult","create","jsonRpcResult","context","slot","number","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","epoch","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","boolean","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","record","TransactionErrorResult","nullable","SignatureProcessedResult","err","timestamp","SignatureReceivedResult","SignatureSubscribedResult","Version","SimulatedTransactionResponseStruct","jsonRpcResultAndContext","logs","array","server","jayson","agent","options","method","body","headers","too_many_requests_retries","res","waitTime","fetch","status","statusText","sleep","text","callback","reject","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","amount","uiAmount","decimals","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","executable","owner","lamports","rentEpoch","ParsedAccountDataResult","program","parsed","space","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","Array","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddressRpcResult","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","AccountNotificationResult","subscription","notificationResultAndContext","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","entry_stats","numTransactions","numEntries","maxTxPerEntry","object","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","version","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","TransactionFromConfirmed","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","writable","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetConfirmedBlockRpcResult","blockhash","previousBlockhash","parentSlot","transactions","rewards","postBalance","rewardType","GetConfirmedTransactionRpcResult","GetParsedConfirmedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","feeCalculator","lamportsPerSignature","PerfSampleResult","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","url","urlParse","useHttps","createRpcRequest","lastFetch","transactionSignatures","simulatedSignatures","String","Number","urlFormat","autoconnect","max_reconnects","Infinity","commitment","getBalanceAndContext","unsafeRes","getBalance","e","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","_args","ownerAddress","filter","getParsedTokenAccountsByOwner","getLargestAccounts","arg","config","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getAccountInfo","getStakeActivation","getProgramAccounts","getParsedProgramAccounts","confirmTransaction","decodedSignature","start","Date","subscriptionCommitment","response","confirmPromise","subscriptionId","timeoutMs","promiseTimeout","duration","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSignatureStatus","values","getSignatureStatuses","params","getTransactionCount","getTotalSupply","getInflationGovernor","getEpochInfo","getEpochSchedule","getLeaderSchedule","getMinimumBalanceForRentExemption","getRecentBlockhashAndContext","getRecentPerformanceSamples","limit","getFeeCalculatorForBlockhash","getRecentBlockhash","getVersion","getConfirmedBlock","getConfirmedTransaction","getParsedConfirmedTransaction","getConfirmedSignaturesForAddress","getConfirmedSignaturesForAddress2","getNonceAndContext","accountInfo","NonceAccount","getNonce","requestAirdrop","to","_recentBlockhash","expired","_pollNewBlockhash","startTime","simulateTransaction","disableCache","encodedTransaction","encoding","sendTransaction","validatorExit","sendRawTransaction","sendEncodedTransaction","skipPreflight","preflightCommitment","traceIndent","logTrace","_wsOnOpen","setInterval","_wsOnError","_wsOnClose","clearInterval","_subscribe","sub","_unsubscribe","unsubscribeId","_resetSubscriptions","s","_updateSubscriptions","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","_wsOnAccountNotification","onAccountChange","removeAccountChangeListener","subInfo","_wsOnProgramAccountNotification","accountId","onProgramAccountChange","removeProgramAccountChangeListener","_wsOnSlotNotification","onSlotChange","removeSlotChangeListener","_wsOnSlotUpdatesNotification","onSlotUpdate","removeSlotUpdateListener","_buildArgs","override","_wsOnSignatureNotification","onSignature","notification","onTransaction","removeSignatureListener","_wsOnRootNotification","onRootChange","removeRootChangeListener","sendOptions","connection","JSON","allocLength","layoutFields","decodeInstructionType","instructionTypeLayout","typeIndex","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","decodeData","fromPubkey","newAccountPubkey","decodeTransfer","toPubkey","decodeTransferWithSeed","basePubkey","decodeAllocate","accountPubkey","decodeAllocateWithSeed","decodeAssign","decodeAssignWithSeed","decodeCreateWithSeed","decodeNonceInitialize","noncePubkey","authorizedPubkey","decodeNonceAdvance","decodeNonceWithdraw","decodeNonceAuthorize","newAuthorizedPubkey","checkProgramId","SystemProgram","checkKeyLength","Create","layout","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","createAccount","encodeData","transfer","assign","base","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","chunkSize","getMinNumSignatures","Math","Loader","load","balanceNeeded","programInfo","payer","sendAndConfirmTransaction","dataLayout","offset","REQUESTS_PER_SECOND","Promise","BPF_LOADER_PROGRAM_ID","STAKE_CONFIG_ID","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","stakePubkey","decodeDelegate","decodeAuthorize","stakeAuthorizationType","o","decodeAuthorizeWithSeed","authorityOwner","authorityBase","authoritySeed","decodeSplit","splitStakePubkey","decodeWithdraw","decodeDeactivate","StakeProgram","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","initialize","staker","withdrawer","unixTimestamp","custodian","delegate","authorize","custodianPubkey","newAuthorized","authorizeWithSeed","split","withdraw","deactivate","ecdsaSign","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","HASHED_PUBKEY_SERIALIZED_SIZE","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","recoveryId","ethPublicKey","constructEthPubkey","dataStart","ethAddressOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","ethAddressInstructionIndex","messageDataSize","messageInstructionIndex","Secp256k1Program","createInstructionWithPrivateKey","privateKey","publicKeyCreate","messageHash","keccak_256","recid","VALIDATOR_INFO_KEY","InfoString","name","website","details","keybaseUsername","fromConfigData","configKeyCount","configKeys","rawInfo","info","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","va","endpoint","http","devnet","testnet","https","tls","LAMPORTS_PER_SOL"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,gBAAO,GAAP,EAAY,CAAZ,EAAe,MAAf,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,iBAAQ,CAAR,EAAW,MAAX,EAAmB;AACjB,UAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAM,IAAI,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,aAAO,KAAK,IAAZ;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAU,QAAV,EAAoB;AAClB,UAAM,EAAE,GAAG,MAAM,CAAC,MAAP,CAAc,KAAK,WAAL,CAAiB,SAA/B,CAAX;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB;AACA,MAAA,EAAE,CAAC,QAAH,GAAc,QAAd;AACA,aAAO,EAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAU,MAAV,EAAkB;AAChB,aAAO,SAAP;AACD;;;;;AAIH;AACA;AACA;AACA;AACA;;;AACA,SAAS,gBAAT,CAA0B,IAA1B,EAAgC,EAAhC,EAAoC;AAClC,MAAI,EAAE,CAAC,QAAP,EAAiB;AACf,WAAO,IAAI,GAAG,GAAP,GAAa,EAAE,CAAC,QAAhB,GAA2B,GAAlC;AACD;;AACD,SAAO,IAAP;AACD;AA6DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACM,c;;;;;;;;;;;;;;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,uBAAU;AACR,YAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACD;;;;EAd0B,M;AAoE7B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;AAIA;AACA;AACA;;AACA,IAAMyI,yBAAyB,GAAG3I,uBAAuB,CACvDR,QAAQ,CACNrC,IAAI,CAAC;AACHkL,EAAAA,aAAa,EAAElL,IAAI,CAAC;AAClBmL,IAAAA,oBAAoB,EAAEtK,MAAM;AADV,GAAD;AADhB,CAAD,CADE,CAD+C,CAAzD;AAUA;AACA;AACA;;AACA,IAAM4K,uBAAuB,GAAG/K,aAAa,CAAClB,MAA9C,EAA6C,CAA7C;AAEA;AACA;AACA;;AACA,IAAMkM,wBAAwB,GAAGhL,aAAa,CAAClB,MAA/C,EAA8C,CAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;;AAmBA;AACA;AACA;;AAMA;AACA;AACA;;AAGA;AACA;AACA;;AAQA;AACA;AACA;;AAMA;AACA;AACA;;AAQA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;;AAeA;AACA;AACA;;AAMA;AACA;AACA;;AAMA;AACA;AACA;;AAQA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;;IACO,U;AAwCL;AACF;AACA;AACA;AACA;AACA;AACEtM,sBAAW,QAAXA,EAAW,UAAXA,EAAuD;AAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CA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AOM,CAAPN;AADF,GAAA,CAEE,OAAA,GAAA,EAAY;AACZ,UAAM,IAAA,KAAA,CAAU,0BAAhB,GAAM,CAAN;AACD;;AAED,MAAIA,IAAI,CAAJA,WAAAA,KAAqBM,IAAI,CAA7B,KAAA,EAAqC;AACnC,UAAM,IAAA,KAAA,2DAC+CN,IAAI,CAACwB,WADpD,iBACsElB,IAAI,CADhF,KAAM,EAAN;AAGD;;AAED,SAAA,IAAA;AACD,C,CC/CD;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;;;IACO,iB;;;;;;;;AACL;AACF;AACA;AACSme,mCAAqB,WAArBA,EAEkB;AACvB,WAAA,cAAA,CAAoBjd,WAAW,CAA/B,SAAA;AAEA,UAAMkd,qBAAqB,GAAG/e,GAAAA,CAA9B,aAA8BA,CAA9B;AACA,UAAMgf,SAAS,GAAGD,qBAAqB,CAArBA,MAAAA,CAA6Bld,WAAW,CAA1D,IAAkBkd,CAAlB;AAEA,UAAA,IAAA;;AACA,wCAAgBjb,MAAM,CAANA,IAAAA,CAAhB,0BAAgBA,CAAhB,sCAAyD;AAApD,YAAMnF,CAAX,qBAAK;;AACH,YAAIsgB,0BAA0B,CAA1BA,CAA0B,C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","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (arr instanceof Buffer) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var z = 0; z < ALPHABET.length; z++) {\n    var x = ALPHABET.charAt(z)\n\n    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n    ALPHABET_MAP[x] = z\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += LEADER\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (typeof string !== 'string') throw new TypeError('Expected String')\n    if (string.length === 0) return Buffer.allocUnsafe(0)\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return Buffer.from(bytes.reverse())\n  }\n\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// @flow\n\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport nacl from 'tweetnacl';\nimport {sha256} from 'crypto-hash';\nimport {Buffer} from 'buffer';\n\nlet naclLowLevel = nacl.lowlevel;\n\ntype PublicKeyNonce = [PublicKey, number]; // This type exists to workaround an esdoc parse error\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * A public key\n */\nexport class PublicKey {\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   */\n  constructor(value: number | string | Buffer | Uint8Array | Array<number>) {\n    if (typeof value === 'string') {\n      // assume base 58 encoding by default\n      const decoded = bs58.decode(value);\n      if (decoded.length != 32) {\n        throw new Error(`Invalid public key input`);\n      }\n      this._bn = new BN(decoded);\n    } else {\n      this._bn = new BN(value);\n    }\n\n    if (this._bn.byteLength() > 32) {\n      throw new Error(`Invalid public key input`);\n    }\n  }\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBuffer());\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Returns a string representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = await sha256(new Uint8Array(buffer));\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new Error(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, Buffer.from(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = await sha256(new Uint8Array(buffer));\n    let publicKeyBytes = new BN(hash, 16).toArray(null, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKeyNonce> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n}\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0,\n  0x4a0e,\n  0x1b27,\n  0xc4ee,\n  0xe478,\n  0xad2f,\n  0x1806,\n  0x2f43,\n  0xd7a7,\n  0x3dfb,\n  0x0099,\n  0x2b4d,\n  0xdf0b,\n  0x4fc1,\n  0x2480,\n  0x2b83,\n]);\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","// @flow\nimport nacl from 'tweetnacl';\nimport type {KeyPair} from 'tweetnacl';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n */\nexport class Account {\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return this._keypair.secretKey;\n  }\n}\n","// @flow\n\nimport {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\nconst assert = require('assert');\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  // assert.equal(roundedInt64(hi32, lo32), src);\n  // assert(0 <= lo32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined === fd.property) {\n        /* By construction the field must be fixed-length (because\n         * unnamed variable-length fields are disallowed when\n         * encoding).  But check it anyway. */\n        assert(0 < span);\n      } else {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (vb instanceof Buffer) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!((src instanceof Buffer)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!(b instanceof Buffer)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!(b instanceof Buffer)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  rsl.alloc = str => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: Object, fields: Object): number {\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","// @flow\n\nexport function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","// @flow\n\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\n\n/**\n * The message header, identifying signed and read-only account\n *\n * @typedef {Object} MessageHeader\n * @property {number} numRequiredSignatures The number of signatures required for this message to be considered valid. The\n * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n * @property {number} numReadonlySignedAccounts: The last `numReadonlySignedAccounts` of the signed keys are read-only accounts\n * @property {number} numReadonlyUnsignedAccounts The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts\n */\nexport type MessageHeader = {\n  numRequiredSignatures: number,\n  numReadonlySignedAccounts: number,\n  numReadonlyUnsignedAccounts: number,\n};\n\n/**\n * An instruction to execute by a program\n *\n * @typedef {Object} CompiledInstruction\n * @property {number} programIdIndex Index into the transaction keys array indicating the program account that executes this instruction\n * @property {number[]} accounts Ordered indices into the transaction keys array indicating which accounts to pass to the program\n * @property {string} data The program input data encoded as base 58\n */\nexport type CompiledInstruction = {\n  programIdIndex: number,\n  accounts: number[],\n  data: string,\n};\n\n/**\n * Message constructor arguments\n *\n * @typedef {Object} MessageArgs\n * @property {MessageHeader} header The message header, identifying signed and read-only `accountKeys`\n * @property {string[]} accounts All the account keys used by this transaction\n * @property {Blockhash} recentBlockhash The hash of a recent ledger block\n * @property {CompiledInstruction[]} instructions Instructions that will be executed in sequence and committed in one atomic transaction if all succeed.\n */\ntype MessageArgs = {\n  header: MessageHeader,\n  accountKeys: string[],\n  recentBlockhash: Blockhash,\n  instructions: CompiledInstruction[],\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => key.toBuffer()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift();\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      let instruction = {};\n      instruction.programIdIndex = byteArray.shift();\n      const accountCount = shortvec.decodeLength(byteArray);\n      instruction.accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = byteArray.slice(0, dataLength);\n      instruction.data = bs58.encode(Buffer.from(data));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push(instruction);\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","// @flow\n\nimport invariant from 'assert';\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport type {CompiledInstruction} from './message';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport {Account} from './account';\nimport * as shortvec from './util/shortvec-encoding';\nimport type {Blockhash} from './blockhash';\n\n/**\n * @typedef {string} TransactionSignature\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n *\n * @typedef {Object} AccountMeta\n * @property {PublicKey} pubkey An account's public key\n * @property {boolean} isSigner True if an instruction requires a transaction signature matching `pubkey`\n * @property {boolean} isWritable True if the `pubkey` can be loaded as a read-write account.\n */\nexport type AccountMeta = {\n  pubkey: PublicKey,\n  isSigner: boolean,\n  isWritable: boolean,\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionInstructionCtorFields\n * @property {?Array<PublicKey>} keys\n * @property {?PublicKey} programId\n * @property {?Buffer} data\n */\nexport type TransactionInstructionCtorFields = {|\n  keys?: Array<AccountMeta>,\n  programId?: PublicKey,\n  data?: Buffer,\n|};\n\n/**\n * Configuration object for Transaction.serialize()\n *\n * @typedef {Object} SerializeConfig\n * @property {boolean|undefined} requireAllSignatures Require all transaction signatures be present (default: true)\n * @property {boolean|undefined} verifySignatures Verify provided signatures (default: true)\n */\nexport type SerializeConfig = {\n  requireAllSignatures?: boolean,\n  verifySignatures?: boolean,\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta> = [];\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts?: TransactionInstructionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n}\n\n/**\n * @private\n */\ntype SignaturePubkeyPair = {|\n  signature: Buffer | null,\n  publicKey: PublicKey,\n|};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionCtorFields\n * @property {?Blockhash} recentBlockhash A recent blockhash\n * @property {?PublicKey} feePayer The transaction fee payer\n * @property {?Array<SignaturePubkeyPair>} signatures One or more signatures\n *\n */\ntype TransactionCtorFields = {|\n  recentBlockhash?: Blockhash | null,\n  nonceInfo?: NonceInformation | null,\n  feePayer?: PublicKey | null,\n  signatures?: Array<SignaturePubkeyPair>,\n|};\n\n/**\n * NonceInformation to be used to build a Transaction.\n *\n * @typedef {Object} NonceInformation\n * @property {Blockhash} nonce The current Nonce blockhash\n * @property {TransactionInstruction} nonceInstruction AdvanceNonceAccount Instruction\n */\ntype NonceInformation = {|\n  nonce: Blockhash,\n  nonceInstruction: TransactionInstruction,\n|};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer: ?PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash: ?Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo: ?NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields,\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      throw new Error('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified accounts. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Account>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Account>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @private\n   */\n  _partialSign(message: Message, ...signers: Array<Account>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, signature);\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @private\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @private\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @private\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @private\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(message: Message, signatures: Array<string>): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(\n            keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n          ),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","// @flow\nimport {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @private\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * @typedef {Object} FeeCalculator\n * @property {number} lamportsPerSignature lamports Cost in lamports to validate a signature\n */\nexport type FeeCalculator = {\n  lamportsPerSignature: number,\n};\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @private\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    nonceAccount.authorizedPubkey = new PublicKey(\n      nonceAccount.authorizedPubkey,\n    );\n    nonceAccount.nonce = new PublicKey(nonceAccount.nonce).toString();\n    return nonceAccount;\n  }\n}\n","// @flow\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @ignore\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @ignore\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @ignore\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @ignore\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","// @flow\n\n// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","// @flow\n\nexport function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: TimeoutID;\n  const timeoutPromise = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(result => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","// @flow\n\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {parse as urlParse, format as urlFormat} from 'url';\nimport fetch from 'node-fetch';\nimport jayson from 'jayson/lib/client/browser';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  object,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\n\nimport {AgentManager} from './agent-manager';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {Account} from './account';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype TokenAccountsFilter =\n  | {|\n      mint: PublicKey,\n    |}\n  | {|\n      programId: PublicKey,\n    |};\n\n/**\n * Extra contextual information for RPC responses\n *\n * @typedef {Object} Context\n * @property {number} slot\n */\ntype Context = {\n  slot: number,\n};\n\n/**\n * Options for sending transactions\n *\n * @typedef {Object} SendOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\nexport type SendOptions = {\n  skipPreflight?: boolean,\n  preflightCommitment?: Commitment,\n};\n\n/**\n * Options for confirming transactions\n *\n * @typedef {Object} ConfirmOptions\n * @property {boolean | undefined} skipPreflight disable transaction verification step\n * @property {Commitment | undefined} commitment desired commitment level\n * @property {Commitment | undefined} preflightCommitment preflight commitment level\n */\nexport type ConfirmOptions = {\n  skipPreflight?: boolean,\n  commitment?: Commitment,\n  preflightCommitment?: Commitment,\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n *\n * @typedef {Object} ConfirmedSignaturesForAddress2Options\n * @property {TransactionSignature | undefined} before start searching backwards from this transaction signature.\n *               If not provided the search starts from the highest max confirmed block.\n * @property {number | undefined} limit maximum transaction signatures to return (between 1 and 1,000, default: 1,000).\n *\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  before?: TransactionSignature,\n  limit?: number,\n};\n\n/**\n * RPC Response with extra contextual information\n *\n * @typedef {Object} RpcResponseAndContext\n * @property {Context} context\n * @property {T} value response\n */\ntype RpcResponseAndContext<T> = {\n  context: Context,\n  value: T,\n};\n\n/**\n * @private\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(unknown()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @private\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @private\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @private\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n *\n * @typedef {'processed' | 'confirmed' | 'finalized'} Commitment\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n *\n * @typedef {'circulating' | 'nonCirculating'} LargestAccountsFilter\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n *\n * @typedef {Object} GetLargestAccountsConfig\n * @property {Commitment|undefined} commitment The level of commitment desired\n * @property {LargestAccountsFilter|undefined} filter Filter largest accounts by whether they are part of the circulating supply\n */\ntype GetLargestAccountsConfig = {\n  commitment: ?Commitment,\n  filter: ?LargestAccountsFilter,\n};\n\n/**\n * Configuration object for changing query behavior\n *\n * @typedef {Object} SignatureStatusConfig\n * @property {boolean} searchTransactionHistory enable searching status history, not needed for recent transactions\n */\nexport type SignatureStatusConfig = {\n  searchTransactionHistory: boolean,\n};\n\n/**\n * Information describing a cluster node\n *\n * @typedef {Object} ContactInfo\n * @property {string} pubkey Identity public key of the node\n * @property {string|null} gossip Gossip network address for the node\n * @property {string|null} tpu TPU network address for the node (null if not available)\n * @property {string|null} rpc JSON RPC network address for the node (null if not available)\n * @property {string|null} version Software version of the node (null if not available)\n */\ntype ContactInfo = {\n  pubkey: string,\n  gossip: string | null,\n  tpu: string | null,\n  rpc: string | null,\n  version: string | null,\n};\n\n/**\n * Information describing a vote account\n *\n * @typedef {Object} VoteAccountInfo\n * @property {string} votePubkey Public key of the vote account\n * @property {string} nodePubkey Identity public key of the node voting with this account\n * @property {number} activatedStake The stake, in lamports, delegated to this vote account and activated\n * @property {boolean} epochVoteAccount Whether the vote account is staked for this epoch\n * @property {Array<Array<number>>} epochCredits Recent epoch voting credit history for this voter\n * @property {number} commission A percentage (0-100) of rewards payout owed to the voter\n * @property {number} lastVote Most recent slot voted on by this vote account\n */\ntype VoteAccountInfo = {\n  votePubkey: string,\n  nodePubkey: string,\n  activatedStake: number,\n  epochVoteAccount: boolean,\n  epochCredits: Array<[number, number, number]>,\n  commission: number,\n  lastVote: number,\n};\n\n/**\n * A collection of cluster vote accounts\n *\n * @typedef {Object} VoteAccountStatus\n * @property {Array<VoteAccountInfo>} current Active vote accounts\n * @property {Array<VoteAccountInfo>} delinquent Inactive vote accounts\n */\ntype VoteAccountStatus = {\n  current: Array<VoteAccountInfo>,\n  delinquent: Array<VoteAccountInfo>,\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n *\n * @typedef {Object} InflationGovernor\n * @property {number} foundation\n * @property {number} foundation_term\n * @property {number} initial\n * @property {number} taper\n * @property {number} terminal\n */\ntype InflationGovernor = {\n  foundation: number,\n  foundationTerm: number,\n  initial: number,\n  taper: number,\n  terminal: number,\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * Information about the current epoch\n *\n * @typedef {Object} EpochInfo\n * @property {number} epoch\n * @property {number} slotIndex\n * @property {number} slotsInEpoch\n * @property {number} absoluteSlot\n * @property {number} blockHeight\n * @property {number} transactionCount\n */\ntype EpochInfo = {\n  epoch: number,\n  slotIndex: number,\n  slotsInEpoch: number,\n  absoluteSlot: number,\n  blockHeight: number | null,\n  transactionCount: number | null,\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n *\n * @typedef {Object} EpochSchedule\n * @property {number} slotsPerEpoch The maximum number of slots in each epoch\n * @property {number} leaderScheduleSlotOffset The number of slots before beginning of an epoch to calculate a leader schedule for that epoch\n * @property {boolean} warmup Indicates whether epochs start short and grow\n * @property {number} firstNormalEpoch The first epoch with `slotsPerEpoch` slots\n * @property {number} firstNormalSlot The first slot of `firstNormalEpoch`\n */\ntype EpochSchedule = {\n  slotsPerEpoch: number,\n  leaderScheduleSlotOffset: number,\n  warmup: boolean,\n  firstNormalEpoch: number,\n  firstNormalSlot: number,\n};\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n *\n * @typedef {Object} LeaderSchedule\n */\ntype LeaderSchedule = {\n  [address: string]: number[],\n};\n\n// TODO: check if validating array(number()) is still extremely slow\nconst GetLeaderScheduleResult = record(string(), unknown());\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(pick({}));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureProcessedResult = pick({\n  type: literal('processedSignature'),\n  err: TransactionErrorResult,\n  timestamp: number(),\n});\n\n/**\n * Signature status for a transaction\n */\nconst SignatureReceivedResult = pick({\n  type: literal('receivedSignature'),\n  timestamp: number(),\n});\n\n/**\n * Signature status for a transaction\n */\nconst SignatureSubscribedResult = pick({\n  type: literal('subscribedSignature'),\n  timestamp: number(),\n});\n\n/**\n * Version info for a node\n *\n * @typedef {Object} Version\n * @property {string} solana-core Version of solana-core\n */\nconst Version = pick({\n  'solana-core': string(),\n  'feature-set': optional(nullable(number())),\n});\n\ntype SimulatedTransactionResponse = {\n  err: TransactionError | string | null,\n  logs: Array<string> | null,\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n  }),\n);\n\ntype ParsedInnerInstruction = {\n  index: number,\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[],\n};\n\ntype TokenBalance = {\n  accountIndex: number,\n  mint: string,\n  uiTokenAmount: TokenAmount,\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<ParsedInnerInstruction>} innerInstructions An array of cross program invoked parsed instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\ntype ParsedConfirmedTransactionMeta = {\n  fee: number,\n  innerInstructions?: ParsedInnerInstruction[],\n  preBalances: Array<number>,\n  postBalances: Array<number>,\n  logMessages?: Array<string>,\n  preTokenBalances?: Array<TokenBalance>,\n  postTokenBalances?: Array<TokenBalance>,\n  err: TransactionError | null,\n};\n\ntype CompiledInnerInstruction = {\n  index: number,\n  instructions: CompiledInstruction[],\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransactionMeta\n * @property {number} fee The fee charged for processing the transaction\n * @property {Array<CompiledInnerInstruction>} innerInstructions An array of cross program invoked instructions\n * @property {Array<number>} preBalances The balances of the transaction accounts before processing\n * @property {Array<number>} postBalances The balances of the transaction accounts after processing\n * @property {Array<string>} logMessages An array of program log messages emitted during a transaction\n * @property {Array<TokenBalance>} preTokenBalances The token balances of the transaction accounts before processing\n * @property {Array<TokenBalance>} postTokenBalances The token balances of the transaction accounts after processing\n * @property {object|null} err The error result of transaction processing\n */\ntype ConfirmedTransactionMeta = {\n  fee: number,\n  innerInstructions?: CompiledInnerInstruction[],\n  preBalances: Array<number>,\n  postBalances: Array<number>,\n  logMessages?: Array<string>,\n  preTokenBalances?: Array<TokenBalance>,\n  postTokenBalances?: Array<TokenBalance>,\n  err: TransactionError | null,\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @typedef {Object} ConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {Transaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\ntype ConfirmedTransaction = {\n  slot: number,\n  transaction: Transaction,\n  meta: ConfirmedTransactionMeta | null,\n  blockTime?: number | null,\n};\n\n/**\n * A partially decoded transaction instruction\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {PublicKey} accounts Indicates if the account signed the transaction\n * @property {string} data Raw base-58 instruction data\n */\ntype PartiallyDecodedInstruction = {|\n  programId: PublicKey,\n  accounts: Array<PublicKey>,\n  data: string,\n|};\n\n/**\n * A parsed transaction message account\n *\n * @typedef {Object} ParsedMessageAccount\n * @property {PublicKey} pubkey Public key of the account\n * @property {boolean} signer Indicates if the account signed the transaction\n * @property {boolean} writable Indicates if the account is writable for this transaction\n */\ntype ParsedMessageAccount = {\n  pubkey: PublicKey,\n  signer: boolean,\n  writable: boolean,\n};\n\n/**\n * A parsed transaction instruction\n *\n * @typedef {Object} ParsedInstruction\n * @property {string} program Name of the program for this instruction\n * @property {PublicKey} programId ID of the program for this instruction\n * @property {any} parsed Parsed instruction info\n */\ntype ParsedInstruction = {|\n  program: string,\n  programId: PublicKey,\n  parsed: any,\n|};\n\n/**\n * A parsed transaction message\n *\n * @typedef {Object} ParsedMessage\n * @property {Array<ParsedMessageAccount>} accountKeys Accounts used in the instructions\n * @property {Array<ParsedInstruction | PartiallyDecodedInstruction>} instructions The atomically executed instructions for the transaction\n * @property {string} recentBlockhash Recent blockhash\n */\ntype ParsedMessage = {\n  accountKeys: ParsedMessageAccount[],\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[],\n  recentBlockhash: string,\n};\n\n/**\n * A parsed transaction\n *\n * @typedef {Object} ParsedTransaction\n * @property {Array<string>} signatures Signatures for the transaction\n * @property {ParsedMessage} message Message of the transaction\n */\ntype ParsedTransaction = {\n  signatures: Array<string>,\n  message: ParsedMessage,\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @typedef {Object} ParsedConfirmedTransaction\n * @property {number} slot The slot during which the transaction was processed\n * @property {ParsedTransaction} transaction The details of the transaction\n * @property {ConfirmedTransactionMeta|null} meta Metadata produced from the transaction\n * @property {number|null|undefined} blockTime The unix timestamp of when the transaction was processed\n */\ntype ParsedConfirmedTransaction = {\n  slot: number,\n  transaction: ParsedTransaction,\n  meta: ParsedConfirmedTransactionMeta | null,\n  blockTime?: number | null,\n};\n\n/**\n * A ConfirmedBlock on the ledger\n *\n * @typedef {Object} ConfirmedBlock\n * @property {Blockhash} blockhash Blockhash of this block\n * @property {Blockhash} previousBlockhash Blockhash of this block's parent\n * @property {number} parentSlot Slot index of this block's parent\n * @property {Array<object>} transactions Vector of transactions and status metas\n * @property {Array<object>} rewards Vector of block rewards\n */\ntype ConfirmedBlock = {\n  blockhash: Blockhash,\n  previousBlockhash: Blockhash,\n  parentSlot: number,\n  transactions: Array<{\n    transaction: Transaction,\n    meta: ConfirmedTransactionMeta | null,\n  }>,\n  rewards: Array<{\n    pubkey: string,\n    lamports: number,\n    postBalance: number | null,\n    rewardType: string | null,\n  }>,\n};\n\n/**\n * A performance sample\n *\n * @typedef {Object} PerfSample\n * @property {number} slot Slot number of sample\n * @property {number} numTransactions Number of transactions in a sample window\n * @property {number} numSlots Number of slots in a sample window\n * @property {number} samplePeriodSecs Sample window in seconds\n */\ntype PerfSample = {\n  slot: number,\n  numTransactions: number,\n  numSlots: number,\n  samplePeriodSecs: number,\n};\n\nfunction createRpcRequest(url: string, useHttps: boolean): RpcRequest {\n  let agentManager;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  const server = jayson(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res = {};\n      let waitTime = 500;\n      for (;;) {\n        res = await fetch(url, options);\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  });\n\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      server.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n *\n * @typedef {Object} Supply\n * @property {number} total Total supply in lamports\n * @property {number} circulating Circulating supply in lamports\n * @property {number} nonCirculating Non-circulating supply in lamports\n * @property {Array<PublicKey>} nonCirculatingAccounts List of non-circulating account addresses\n */\ntype Supply = {\n  total: number,\n  circulating: number,\n  nonCirculating: number,\n  nonCirculatingAccounts: Array<PublicKey>,\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n *\n * @typedef {Object} TokenAmount\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\ntype TokenAmount = {\n  amount: string,\n  decimals: number,\n  uiAmount: number,\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: number(),\n  decimals: number(),\n});\n\n/**\n * Token address and balance.\n *\n * @typedef {Object} TokenAccountBalancePair\n * @property {PublicKey} address Address of the token account\n * @property {string} amount Raw amount of tokens as string ignoring decimals\n * @property {number} decimals Number of decimals configured for token's mint\n * @property {number} uiAmount Token account as float, accounts for decimals\n */\ntype TokenAccountBalancePair = {\n  address: PublicKey,\n  amount: string,\n  decimals: number,\n  uiAmount: number,\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: number(),\n      decimals: number(),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n *\n * @typedef {Object} AccountBalancePair\n * @property {PublicKey} address\n * @property {number} lamports\n */\ntype AccountBalancePair = {\n  address: PublicKey,\n  lamports: number,\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @private\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @private\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @private\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @private\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress\" message\n */\nconst GetConfirmedSignaturesForAddressRpcResult = jsonRpcResult(\n  array(string()),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @private\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @private\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * @private\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    entry_stats: pick({\n      numTransactions: number(),\n      numEntries: number(),\n      maxTxPerEntry: number(),\n    }),\n  }),\n  object({\n    type: string(),\n    slot: number(),\n    timestamp: number(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([\n      SignatureProcessedResult,\n      SignatureReceivedResult,\n      SignatureSubscribedResult,\n    ]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(nullable(string())),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\n/**\n * @private\n */\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TransactionFromConfirmed = coerce(\n  instance(Transaction),\n  ConfirmedTransactionResult,\n  result => {\n    const {message, signatures} = result;\n    return Transaction.populate(new Message(message), signatures);\n  },\n);\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @private\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @private\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @private\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nexport const GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: TransactionFromConfirmed,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: TransactionFromConfirmed,\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n *\n * @typedef {Object} SlotInfo\n * @property {number} slot Currently processing slot\n * @property {number} parent Parent of the current slot\n * @property {number} root The root block of the current slot's fork\n */\nexport type SlotInfo = {\n  slot: number,\n  parent: number,\n  root: number,\n};\n\n/**\n * Parsed account data\n *\n * @typedef {Object} ParsedAccountData\n * @property {string} program Name of the program that owns this account\n * @property {any} parsed Parsed account data\n * @property {number} space Space used by account data\n */\ntype ParsedAccountData = {\n  program: string,\n  parsed: any,\n  space: number,\n};\n\n/**\n * Stake Activation data\n *\n * @typedef {Object} StakeActivationData\n * @property {string} state: <string - the stake account's activation state, one of: active, inactive, activating, deactivating\n * @property {number} active: stake active during the epoch\n * @property {number} inactive: stake inactive during the epoch\n */\ntype StakeActivationData = {\n  state: 'active' | 'inactive' | 'activating' | 'deactivating',\n  active: number,\n  inactive: number,\n};\n\n/**\n * Information describing an account\n *\n * @typedef {Object} AccountInfo\n * @property {number} lamports Number of lamports assigned to the account\n * @property {PublicKey} owner Identifier of the program that owns the account\n * @property {T} data Optional data assigned to the account\n * @property {boolean} executable `true` if this account's data contains a loaded program\n */\ntype AccountInfo<T> = {\n  executable: boolean,\n  owner: PublicKey,\n  lamports: number,\n  data: T,\n};\n\n/**\n * Account information identified by pubkey\n *\n * @typedef {Object} KeyedAccountInfo\n * @property {PublicKey} accountId\n * @property {AccountInfo<Buffer>} accountInfo\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey,\n  accountInfo: AccountInfo<Buffer>,\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\nexport type SlotUpdateType =\n  | 'optimisticConfirmation'\n  | 'firstShredReceived'\n  | 'blockEnd'\n  | 'blockComplete'\n  | 'frozen';\n\nexport type SlotUpdate = {\n  type: SlotUpdateType,\n  slot: number,\n  timestamp: number,\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type SlotUpdatesSubscriptionCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @private\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @private\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string, // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback,\n  commitment: ?Commitment,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @private\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string, // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback,\n  commitment: ?Commitment,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @private\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\ntype SignatureStatusNotification = {\n  type: 'status',\n  result: SignatureResult,\n};\n\ntype SignatureReceivedNotification = {\n  type: 'received',\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionOptions = {\n  commitment: ?Commitment,\n  enableReceivedNotification?: boolean,\n};\n\n/**\n * @private\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature, // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback,\n  options: ?SignatureSubscriptionOptions,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @private\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback,\n  subscriptionId: ?SubscriptionId, // null when there's no current server subscription id\n};\n\n/**\n * Signature result\n *\n * @typedef {Object} SignatureResult\n */\nexport type SignatureResult = {|\n  err: TransactionError | null,\n|};\n\n/**\n * Transaction error\n *\n * @typedef {Object} TransactionError\n */\nexport type TransactionError = {};\n\n/**\n * Signature status\n *\n * @typedef {Object} SignatureStatus\n * @property {number} slot when the transaction was processed\n * @property {number | null} confirmations the number of blocks that have been confirmed and voted on in the fork containing `slot` (TODO)\n * @property {TransactionError | null} err error, if any\n * @property {string | null} confirmationStatus the transaction's cluster confirmation status, if data available. Possible non-null responses: `processed`, `confirmed`, `finalized`\n */\nexport type SignatureStatus = {\n  slot: number,\n  confirmations: number | null,\n  err: TransactionError | null,\n  confirmationStatus: string | null,\n};\n\n/**\n * A confirmed signature with its status\n *\n * @typedef {Object} ConfirmedSignatureInfo\n * @property {string} signature the transaction signature\n * @property {number} slot when the transaction was processed\n * @property {TransactionError | null} err error, if any\n * @property {string | null} memo memo associated with the transaction, if any\n * @property {number | null | undefined} blockTime The unix timestamp of when the transaction was processed\n */\nexport type ConfirmedSignatureInfo = {\n  signature: string,\n  slot: number,\n  err: TransactionError | null,\n  memo: string | null,\n  blockTime?: number | null,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  _rpcEndpoint: string;\n  _rpcRequest: RpcRequest;\n  _rpcWebSocket: RpcWebSocketClient;\n  _rpcWebSocketConnected: boolean = false;\n  _rpcWebSocketHeartbeat: IntervalID | null = null;\n  _rpcWebSocketIdleTimeout: TimeoutID | null = null;\n\n  _commitment: ?Commitment;\n  _blockhashInfo: {\n    recentBlockhash: Blockhash | null,\n    lastFetch: Date,\n    simulatedSignatures: Array<string>,\n    transactionSignatures: Array<string>,\n  };\n  _disableBlockhashCaching: boolean = false;\n  _pollingBlockhash: boolean = false;\n  _accountChangeSubscriptions: {[number]: AccountSubscriptionInfo} = {};\n  _accountChangeSubscriptionCounter: number = 0;\n  _programAccountChangeSubscriptions: {\n    [number]: ProgramAccountSubscriptionInfo,\n  } = {};\n  _programAccountChangeSubscriptionCounter: number = 0;\n  _slotSubscriptions: {\n    [number]: SlotSubscriptionInfo,\n  } = {};\n  _slotSubscriptionCounter: number = 0;\n  _slotUpdateSubscriptions: {\n    [number]: SlotUpdateSubscriptionInfo,\n  } = {};\n  _slotUpdateSubscriptionCounter: number = 0;\n  _signatureSubscriptions: {\n    [number]: SignatureSubscriptionInfo,\n  } = {};\n  _signatureSubscriptionCounter: number = 0;\n  _rootSubscriptions: {\n    [number]: RootSubscriptionInfo,\n  } = {};\n  _rootSubscriptionCounter: number = 0;\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitment optional default commitment level\n   */\n  constructor(endpoint: string, commitment: ?Commitment) {\n    this._rpcEndpoint = endpoint;\n\n    let url = urlParse(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    this._rpcRequest = createRpcRequest(url.href, useHttps);\n    this._commitment = commitment;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: new Date(0),\n      transactionSignatures: [],\n      simulatedSignatures: [],\n    };\n\n    url.protocol = useHttps ? 'wss:' : 'ws:';\n    url.host = '';\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    if (url.port !== null) {\n      url.port = String(Number(url.port) + 1);\n    }\n    this._rpcWebSocket = new RpcWebSocketClient(urlFormat(url), {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): ?Commitment {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if (res.error) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if (res.error) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSupply', args);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if (res.error) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if (res.error) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if (res.error) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>,\n    >,\n  > {\n    let _args = [ownerAddress.toBase58()];\n    if (filter.mint) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if (res.error) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>,\n    >,\n  > {\n    let _args = [ownerAddress.toBase58()];\n    if (filter.mint) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if (res.error) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config: ?GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if (res.error) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>,\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment: ?Commitment,\n    epoch: ?number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if (res.error) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>> {\n    const args = this._buildArgs([programId.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if (res.error) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey,\n      account: AccountInfo<Buffer | ParsedAccountData>,\n    }>,\n  > {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if (res.error) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result, context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve();\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if (res.error) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment: ?Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if (res.error) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment: ?Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if (res.error) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config: ?SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config: ?SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if (res.error) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   */\n  async getTotalSupply(commitment: ?Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTotalSupply', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if (res.error) {\n      throw new Error('failed to get total supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment: ?Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if (res.error) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment: ?Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if (res.error) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if (res.error) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if (res.error) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment: ?Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if (res.error) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment: ?Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>,\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if (res.error) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit: ?number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if (res.error) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value.feeCalculator,\n    };\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment: ?Commitment,\n  ): Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(Version));\n    if (res.error) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block\n   */\n  async getConfirmedBlock(slot: number): Promise<ConfirmedBlock> {\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', [slot]);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if (res.error) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n  ): Promise<ConfirmedTransaction | null> {\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', [\n      signature,\n    ]);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', [\n      signature,\n      'jsonParsed',\n    ]);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress',\n      [address.toBase58(), startSlot, endSlot],\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddressRpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options: ?ConfirmedSignaturesForAddress2Options,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      [address.toBase58(), options],\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if (res.error) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment: ?Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified account\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    amount: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      amount,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if (res.error) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      // Attempt to use a recent blockhash for up to 30 seconds\n      const expired =\n        Date.now() - this._blockhashInfo.lastFetch >=\n        BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: new Date(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transaction: Transaction,\n    signers?: Array<Account>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        // If the signature of this transaction has not been seen before with the\n        // current recentBlockhash, all done.\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          disableCache = true;\n        }\n      }\n    }\n\n    const signData = transaction.serializeMessage();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n    const args = [encodedTransaction, config];\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if (res.error) {\n      throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Account>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        // If the signature of this transaction has not been seen before with the\n        // current recentBlockhash, all done.\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * @private\n   */\n  async validatorExit(): Promise<boolean> {\n    const unsafeRes = await this._rpcRequest('validatorExit', []);\n    const res = create(unsafeRes, jsonRpcResult(boolean()));\n    if (res.error) {\n      throw new Error('validator exit failed: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options: ?SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options: ?SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const args = [encodedTransaction, config];\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if (res.error) {\n      if (res.error.data) {\n        const logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new Error('failed to send transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * @private\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @private\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @private\n   */\n  _wsOnClose(code: number) {\n    clearInterval(this._rpcWebSocketHeartbeat);\n    this._rpcWebSocketHeartbeat = null;\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @private\n   */\n  async _subscribe<SubInfo: {subscriptionId: ?SubscriptionId}, RpcArgs>(\n    sub: SubInfo,\n    rpcMethod: string,\n    rpcArgs: RpcArgs,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        console.error(`${rpcMethod} error for argument`, rpcArgs, err.message);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _unsubscribe<SubInfo: {subscriptionId: ?SubscriptionId}>(\n    sub: SubInfo,\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        console.error(`${rpcMethod} error:`, err.message);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetSubscriptions() {\n    (Object.values(this._accountChangeSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._programAccountChangeSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._signatureSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._slotSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._slotUpdateSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n    (Object.values(this._rootSubscriptions): any).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @private\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnAccountNotification(notification: Object) {\n    const res = create(notification, AccountNotificationResult);\n    if (res.error) {\n      throw new Error('account notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._accountChangeSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._accountChangeSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    if (res.error) {\n      throw new Error(\n        'program account notification failed: ' + res.error.message,\n      );\n    }\n    const keys = Object.keys(this._programAccountChangeSubscriptions).map(\n      Number,\n    );\n    for (let id of keys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    if (res.error) {\n      throw new Error('slot notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._slotSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._slotSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    if (res.error) {\n      throw new Error('slot update notification failed: ' + res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    const keys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override: ?Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @private\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    if (res.error) {\n      throw new Error('signature notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._signatureSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._signatureSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        if (res.result.value.type === 'processedSignature') {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[id];\n          this._updateSubscriptions();\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   * @deprecated Deprecated since v0.93.0, please use `onTransaction`\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment: ?Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onTransaction(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options: ?SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    if (res.error) {\n      throw new Error('root notification failed: ' + res.error.message);\n    }\n    const keys = Object.keys(this._rootSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._rootSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","// @flow\n\nimport {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {Account} from '../account';\nimport type {ConfirmOptions} from '../connection';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Account>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Account>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @typedef {Object} InstructionType\n * @property (index} The Instruction index (from solana upstream program)\n * @property (BufferLayout} The BufferLayout to use to build data\n */\nexport type InstructionType = {|\n  index: number,\n  layout: typeof BufferLayout,\n|};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n */\nexport function encodeData(type: InstructionType, fields: Object): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): Object {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\nimport {encodeData, decodeData} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\n\n/**\n * Create account system transaction params\n * @typedef {Object} CreateAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type CreateAccountParams = {|\n  fromPubkey: PublicKey,\n  newAccountPubkey: PublicKey,\n  lamports: number,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Transfer system transaction params\n * @typedef {Object} TransferParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\nexport type TransferParams = {|\n  fromPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Assign system transaction params\n * @typedef {Object} AssignParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} programId\n */\nexport type AssignParams = {|\n  accountPubkey: PublicKey,\n  programId: PublicKey,\n|};\n\n/**\n * Create account with seed system transaction params\n * @typedef {Object} CreateAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} newAccountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type CreateAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  newAccountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  lamports: number,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Create nonce account system transaction params\n * @typedef {Object} CreateNonceAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {number} lamports\n */\nexport type CreateNonceAccountParams = {|\n  fromPubkey: PublicKey,\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Create nonce account with seed system transaction params\n * @typedef {Object} CreateNonceAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} lamports\n */\nexport type CreateNonceAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  lamports: number,\n  basePubkey: PublicKey,\n  seed: string,\n|};\n\n/**\n * Initialize nonce account system instruction params\n * @typedef {Object} InitializeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type InitializeNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Advance nonce account system instruction params\n * @typedef {Object} AdvanceNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type AdvanceNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Withdraw nonce account system transaction params\n * @typedef {Object} WithdrawNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n */\nexport type WithdrawNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Authorize nonce account system transaction params\n * @typedef {Object} AuthorizeNonceParams\n * @property {PublicKey} noncePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n */\nexport type AuthorizeNonceParams = {|\n  noncePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n|};\n\n/**\n * Allocate account system transaction params\n * @typedef {Object} AllocateParams\n * @property {PublicKey} accountPubkey\n * @property {number} space\n */\nexport type AllocateParams = {|\n  accountPubkey: PublicKey,\n  space: number,\n|};\n\n/**\n * Allocate account with seed system transaction params\n * @typedef {Object} AllocateWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {number} space\n * @property {PublicKey} programId\n */\nexport type AllocateWithSeedParams = {|\n  accountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  space: number,\n  programId: PublicKey,\n|};\n\n/**\n * Assign account with seed system transaction params\n * @typedef {Object} AssignWithSeedParams\n * @property {PublicKey} accountPubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {PublicKey} programId\n */\nexport type AssignWithSeedParams = {|\n  accountPubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  programId: PublicKey,\n|};\n\n/**\n * Transfer with seed system transaction params\n * @typedef {Object} TransferWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} basePubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {string} seed\n * @property {PublicKey} programId\n */\nexport type TransferWithSeedParams = {|\n  fromPubkey: PublicKey,\n  basePubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n  seed: string,\n  programId: PublicKey,\n|};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type;\n    for (const t of Object.keys(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (SYSTEM_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n        type = t;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @private\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @private\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n * @typedef {'Create' | 'Assign' | 'Transfer' | 'CreateWithSeed'\n | 'AdvanceNonceAccount' | 'WithdrawNonceAccount' | 'InitializeNonceAccount'\n | 'AuthorizeNonceAccount'} SystemInstructionType\n */\nexport type SystemInstructionType = $Keys<typeof SYSTEM_INSTRUCTION_LAYOUTS>;\n\n/**\n * An enumeration of valid system InstructionType's\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * Public key that identifies the System program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('11111111111111111111111111111111');\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: params.programId.toBuffer(),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: params.basePubkey.toBuffer(),\n        seed: params.seed,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {programId: params.programId.toBuffer()});\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: params.basePubkey.toBuffer(),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: params.programId.toBuffer(),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if (params.basePubkey && params.seed) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: params.authorizedPubkey.toBuffer(),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: params.newAuthorizedPubkey.toBuffer(),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if (params.basePubkey) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: params.basePubkey.toBuffer(),\n        seed: params.seed,\n        space: params.space,\n        programId: params.programId.toBuffer(),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\n\nimport {Account} from './account';\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport {SystemProgram} from './system-program';\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static get chunkSize(): number {\n    // Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n    // rest of the Transaction fields\n    //\n    // TODO: replace 300 with a proper constant for the size of the other\n    // Transaction fields\n    return PACKET_DATA_SIZE - 300;\n  }\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Account,\n    program: Account,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","// @flow\n\nimport {Account} from './account';\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Account,\n    program: Account,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\nimport {encodeData, decodeData} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\n\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\nexport class Authorized {\n  staker: PublicKey;\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\nexport class Lockup {\n  unixTimestamp: number;\n  epoch: number;\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n}\n\n/**\n * Create stake account transaction params\n * @typedef {Object} CreateStakeAccountParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\nexport type CreateStakeAccountParams = {|\n  fromPubkey: PublicKey,\n  stakePubkey: PublicKey,\n  authorized: Authorized,\n  lockup: Lockup,\n  lamports: number,\n|};\n\n/**\n * Create stake account with seed transaction params\n * @typedef {Object} CreateStakeAccountWithSeedParams\n * @property {PublicKey} fromPubkey\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} basePubkey\n * @property {string} seed\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n * @property {number} lamports\n */\nexport type CreateStakeAccountWithSeedParams = {|\n  fromPubkey: PublicKey,\n  stakePubkey: PublicKey,\n  basePubkey: PublicKey,\n  seed: string,\n  authorized: Authorized,\n  lockup: Lockup,\n  lamports: number,\n|};\n\n/**\n * Initialize stake instruction params\n * @typedef {Object} InitializeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {Authorized} authorized\n * @property {Lockup} lockup\n */\nexport type InitializeStakeParams = {|\n  stakePubkey: PublicKey,\n  authorized: Authorized,\n  lockup: Lockup,\n|};\n\n/**\n * Delegate stake instruction params\n * @typedef {Object} DelegateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} votePubkey\n */\nexport type DelegateStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  votePubkey: PublicKey,\n|};\n\n/**\n * Authorize stake instruction params\n * @typedef {Object} AuthorizeStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\nexport type AuthorizeStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n  stakeAuthorizationType: StakeAuthorizationType,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Authorize stake instruction params using a derived key\n * @typedef {Object} AuthorizeWithSeedStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorityBase\n * @property {string} authoritySeed\n * @property {PublicKey} authorityOwner\n * @property {PublicKey} newAuthorizedPubkey\n * @property {StakeAuthorizationType} stakeAuthorizationType\n * @property {PublicKey} custodianPubkey\n */\nexport type AuthorizeWithSeedStakeParams = {|\n  stakePubkey: PublicKey,\n  authorityBase: PublicKey,\n  authoritySeed: string,\n  authorityOwner: PublicKey,\n  newAuthorizedPubkey: PublicKey,\n  stakeAuthorizationType: StakeAuthorizationType,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Split stake instruction params\n * @typedef {Object} SplitStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} splitStakePubkey\n * @property {number} lamports\n */\nexport type SplitStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  splitStakePubkey: PublicKey,\n  lamports: number,\n|};\n\n/**\n * Withdraw stake instruction params\n * @typedef {Object} WithdrawStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n * @property {PublicKey} toPubkey\n * @property {number} lamports\n * @property {PublicKey} custodianPubkey\n */\nexport type WithdrawStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n  toPubkey: PublicKey,\n  lamports: number,\n  custodianPubkey?: PublicKey,\n|};\n\n/**\n * Deactivate stake instruction params\n * @typedef {Object} DeactivateStakeParams\n * @property {PublicKey} stakePubkey\n * @property {PublicKey} authorizedPubkey\n */\nexport type DeactivateStakeParams = {|\n  stakePubkey: PublicKey,\n  authorizedPubkey: PublicKey,\n|};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type;\n    for (const t of Object.keys(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (STAKE_INSTRUCTION_LAYOUTS[t].index == typeIndex) {\n        type = t;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @private\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @private\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n * @typedef { 'Initialize' | 'Authorize' | 'AuthorizeWithSeed' | 'Delegate' | 'Split' | 'Withdraw'\n | 'Deactivate' } StakeInstructionType\n */\nexport type StakeInstructionType = $Keys<typeof STAKE_INSTRUCTION_LAYOUTS>;\n\n/**\n * An enumeration of valid stake InstructionType's\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * @typedef {Object} StakeAuthorizationType\n * @property (index} The Stake Authorization index (from solana-stake-program)\n */\nexport type StakeAuthorizationType = {|\n  index: number,\n|};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * Public key that identifies the Stake program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('Stake11111111111111111111111111111111111111');\n  }\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static get space(): number {\n    return 200;\n  }\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: authorized.staker.toBuffer(),\n        withdrawer: authorized.withdrawer.toBuffer(),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: lockup.custodian.toBuffer(),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: newAuthorizedPubkey.toBuffer(),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: newAuthorizedPubkey.toBuffer(),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: authorityOwner.toBuffer(),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey,\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport assert from 'assert';\nimport {keccak_256} from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst PUBLIC_KEY_BYTES = 65;\nconst HASHED_PUBKEY_SERIALIZED_SIZE = 20;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Create a Secp256k1 instruction using a public key params\n * @typedef {Object} CreateSecp256k1InstructionWithPublicKeyParams\n * @property {Buffer | Uint8Array | Array<number>} publicKey\n * @property {Buffer | Uint8Array | Array<number>} message\n * @property {Buffer | Uint8Array | Array<number>} signature\n * @property {number} recoveryId\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {|\n  publicKey: Buffer | Uint8Array | Array<number>,\n  message: Buffer | Uint8Array | Array<number>,\n  signature: Buffer | Uint8Array | Array<number>,\n  recoveryId: number,\n|};\n\n/**\n * Create a Secp256k1 instruction using a private key params\n * @typedef {Object} CreateSecp256k1InstructionWithPrivateKeyParams\n * @property {Buffer | Uint8Array | Array<number>} privateKey\n * @property {Buffer | Uint8Array | Array<number>} message\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {|\n  privateKey: Buffer | Uint8Array | Array<number>,\n  message: Buffer | Uint8Array | Array<number>,\n|};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethPublicKey'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * Public key that identifies the Secp256k program\n   */\n  static get programId(): PublicKey {\n    return new PublicKey('KeccakSecp256k11111111111111111111111111111');\n  }\n\n  /**\n   * Create a secp256k1 instruction with public key\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes`,\n    );\n\n    let ethPublicKey;\n    try {\n      ethPublicKey = constructEthPubkey(publicKey);\n    } catch (error) {\n      throw new Error(`Error constructing ethereum public key: ${error}`);\n    }\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethPublicKey.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures: numSignatures,\n        signatureOffset: signatureOffset,\n        signatureInstructionIndex: 0,\n        ethAddressOffset: ethAddressOffset,\n        ethAddressInstructionIndex: 0,\n        messageDataOffset: messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: 0,\n        signature: toBuffer(signature),\n        ethPublicKey: ethPublicKey,\n        recoveryId: recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create a secp256k1 instruction with private key\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes`,\n    );\n\n    try {\n      const publicKey = publicKeyCreate(privateKey, false);\n      const messageHash = Buffer.from(\n        keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n\nfunction constructEthPubkey(\n  publicKey: Buffer | Uint8Array | Array<number>,\n): Buffer {\n  return Buffer.from(\n    keccak_256\n      .update(toBuffer(publicKey.slice(1))) // throw away leading byte\n      .digest(),\n  ).slice(-HASHED_PUBKEY_SERIALIZED_SIZE);\n}\n","// @flow\n\nimport {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @private\n */\ntype ConfigKey = {|\n  publicKey: PublicKey,\n  isSigner: boolean,\n|};\n\n/**\n * Info used to identity validators.\n *\n * @typedef {Object} Info\n * @property {string} name validator name\n * @property {?string} website optional, validator website\n * @property {?string} details optional, extra information the validator chose to share\n * @property {?string} keybaseUsername optional, used to identify validators on keybase.io\n */\nexport type Info = {|\n  name: string,\n  website?: string,\n  details?: string,\n  keybaseUsername?: string,\n|};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","// @flow\nimport * as BufferLayout from 'buffer-layout';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {|\n  slot: number,\n  confirmationCount: number,\n|};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {|\n  epoch: number,\n  credits: number,\n  prevCredits: number,\n|};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @private\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedVoterPubkey'),\n  Layout.publicKey('authorizedWithdrawerPubkey'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64('epoch'),\n  BufferLayout.nu64('credits'),\n  BufferLayout.nu64('lastEpochCredits'),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n]);\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n    va.nodePubkey = new PublicKey(va.nodePubkey);\n    va.authorizedVoterPubkey = new PublicKey(va.authorizedVoterPubkey);\n    va.authorizedWithdrawerPubkey = new PublicKey(\n      va.authorizedWithdrawerPubkey,\n    );\n    if (!va.rootSlotValid) {\n      va.rootSlot = null;\n    }\n    return va;\n  }\n}\n","// @flow\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","//@flow\n\n/**\n * @private\n */\nconst endpoint = {\n  http: {\n    devnet: 'http://devnet.solana.com',\n    testnet: 'http://testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com',\n  },\n  https: {\n    devnet: 'https://devnet.solana.com',\n    testnet: 'https://testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","// @flow\nexport {Account} from './account';\nexport {BPF_LOADER_DEPRECATED_PROGRAM_ID} from './bpf-loader-deprecated';\nexport {BpfLoader, BPF_LOADER_PROGRAM_ID} from './bpf-loader';\nexport {Connection} from './connection';\nexport {Loader} from './loader';\nexport {Message} from './message';\nexport {NonceAccount, NONCE_ACCOUNT_LENGTH} from './nonce-account';\nexport {MAX_SEED_LENGTH, PublicKey} from './publickey';\nexport {\n  STAKE_CONFIG_ID,\n  Authorized,\n  Lockup,\n  StakeAuthorizationLayout,\n  StakeInstruction,\n  STAKE_INSTRUCTION_LAYOUTS,\n  StakeProgram,\n} from './stake-program';\nexport {\n  SystemInstruction,\n  SystemProgram,\n  SYSTEM_INSTRUCTION_LAYOUTS,\n} from './system-program';\nexport {Secp256k1Program} from './secp256k1-program';\nexport {Transaction, TransactionInstruction} from './transaction';\nexport {VALIDATOR_INFO_KEY, ValidatorInfo} from './validator-info';\nexport {VOTE_PROGRAM_ID, VoteAccount} from './vote-account';\nexport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_REWARDS_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  SYSVAR_INSTRUCTIONS_PUBKEY,\n} from './sysvar';\nexport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nexport {sendAndConfirmRawTransaction} from './util/send-and-confirm-raw-transaction';\nexport {clusterApiUrl} from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"]},"metadata":{},"sourceType":"module"}