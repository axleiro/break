{"ast":null,"code":"import _classCallCheck from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{CreateTransactionWorker}from\"./create-transaction-worker\";export var CreateTransactionRPC=/*#__PURE__*/function(){function CreateTransactionRPC(){_classCallCheck(this,CreateTransactionRPC);this.worker=void 0;this.callbacks={};this.worker=new CreateTransactionWorker();this.worker.onmessage=this.handleMessages.bind(this);}_createClass(CreateTransactionRPC,[{key:\"handleMessages\",value:function handleMessages(event){var message=event.data;if(message.trackingId in this.callbacks){var callbacks=this.callbacks[message.trackingId];delete this.callbacks[message.trackingId];if(\"error\"in message){callbacks[1](message.error);return;}callbacks[0](message);}}},{key:\"createTransaction\",value:function createTransaction(message){var _this=this;return new Promise(function(resolve,reject){_this.callbacks[message.trackingId]=[resolve,reject];_this.worker.postMessage(message);});}}]);return CreateTransactionRPC;}();","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/workers/create-transaction-rpc.ts"],"names":["CreateTransactionWorker","CreateTransactionRPC","worker","callbacks","onmessage","handleMessages","bind","event","message","data","trackingId","error","Promise","resolve","reject","postMessage"],"mappings":"oUACA,OAASA,uBAAT,KAAwC,6BAAxC,CAsBA,UAAaC,CAAAA,oBAAb,yBAKE,+BAAc,iDAJNC,MAIM,aAFNC,SAEM,CAF4C,EAE5C,CACZ,KAAKD,MAAL,CAAc,GAAIF,CAAAA,uBAAJ,EAAd,CACA,KAAKE,MAAL,CAAYE,SAAZ,CAAwB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAxB,CACD,CARH,uFAUiBC,KAVjB,CAUsC,CAClC,GAAIC,CAAAA,OAAO,CAAGD,KAAK,CAACE,IAApB,CAEA,GAAID,OAAO,CAACE,UAAR,GAAsB,MAAKP,SAA/B,CAA0C,CACxC,GAAIA,CAAAA,SAAS,CAAG,KAAKA,SAAL,CAAeK,OAAO,CAACE,UAAvB,CAAhB,CACA,MAAO,MAAKP,SAAL,CAAeK,OAAO,CAACE,UAAvB,CAAP,CAEA,GAAI,SAAWF,CAAAA,OAAf,CAAwB,CACtBL,SAAS,CAAC,CAAD,CAAT,CAAaK,OAAO,CAACG,KAArB,EACA,OACD,CAEDR,SAAS,CAAC,CAAD,CAAT,CAAaK,OAAb,EACD,CACF,CAxBH,4DA2BIA,OA3BJ,CA4B+C,gBAC3C,MAAO,IAAII,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,KAAI,CAACX,SAAL,CAAeK,OAAO,CAACE,UAAvB,EAAqC,CAACG,OAAD,CAAUC,MAAV,CAArC,CACA,KAAI,CAACZ,MAAL,CAAYa,WAAZ,CAAwBP,OAAxB,EACD,CAHM,CAAP,CAID,CAjCH","sourcesContent":["import { Blockhash } from \"@solana/web3.js\";\nimport { CreateTransactionWorker } from \"./create-transaction-worker\";\n\nexport interface CreateTransactionMessage {\n  trackingId: number;\n  blockhash: Blockhash;\n  programId: string;\n  bitId: number;\n  feeAccountSecretKey: Buffer;\n  programDataAccount: string;\n}\n\nexport interface CreateTransactionResponseMessage {\n  trackingId: number;\n  signature: Buffer;\n  serializedTransaction: Buffer;\n}\n\nexport interface CreateTransactionErrorMessage {\n  trackingId: string;\n  error: Error;\n}\n\nexport class CreateTransactionRPC {\n  private worker: CreateTransactionWorker;\n\n  private callbacks: { [trackingId: string]: Function[] } = {};\n\n  constructor() {\n    this.worker = new CreateTransactionWorker();\n    this.worker.onmessage = this.handleMessages.bind(this);\n  }\n\n  handleMessages(event: MessageEvent) {\n    let message = event.data;\n\n    if (message.trackingId in this.callbacks) {\n      let callbacks = this.callbacks[message.trackingId];\n      delete this.callbacks[message.trackingId];\n\n      if (\"error\" in message) {\n        callbacks[1](message.error);\n        return;\n      }\n\n      callbacks[0](message);\n    }\n  }\n\n  createTransaction(\n    message: CreateTransactionMessage\n  ): Promise<CreateTransactionResponseMessage> {\n    return new Promise((resolve, reject) => {\n      this.callbacks[message.trackingId] = [resolve, reject];\n      this.worker.postMessage(message);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}