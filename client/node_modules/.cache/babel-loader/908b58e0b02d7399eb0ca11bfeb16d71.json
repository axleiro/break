{"ast":null,"code":"import bs58 from\"bs58\";import{ActionType}from\"./index\";import{CreateTransactionRPC}from\"../../workers/create-transaction-rpc\";var SEND_TIMEOUT_MS=45000;var RETRY_INTERVAL_MS=500;var workerRPC=new CreateTransactionRPC();export function createTransaction(blockhash,programId,accounts,trackingId,dispatch,socket){var feeAccounts=accounts.feeAccounts,programAccounts=accounts.programAccounts;var bitId=Math.floor(trackingId/feeAccounts.length);var accountIndex=trackingId%feeAccounts.length;var programDataAccount=programAccounts[accountIndex];var feeAccount=feeAccounts[accountIndex];workerRPC.createTransaction({trackingId:trackingId,blockhash:blockhash,programId:programId.toBase58(),programDataAccount:programDataAccount.toBase58(),bitId:bitId,feeAccountSecretKey:feeAccount.secretKey}).then(function(response){var signature=response.signature,serializedTransaction=response.serializedTransaction;var sentAt=performance.now();var pendingTransaction={sentAt:sentAt};pendingTransaction.timeoutId=window.setTimeout(function(){dispatch({type:ActionType.TimeoutTransaction,trackingId:trackingId});},SEND_TIMEOUT_MS);var details={id:bitId,feeAccount:feeAccount.publicKey,programAccount:programDataAccount,signature:bs58.encode(signature)};dispatch({type:ActionType.NewTransaction,details:details,trackingId:trackingId,pendingTransaction:pendingTransaction});setTimeout(function(){var retryUntil=new URLSearchParams(window.location.search).get(\"retry_until\");if(retryUntil===null||retryUntil!==\"disabled\"){pendingTransaction.retryId=window.setInterval(function(){if(socket.readyState===WebSocket.OPEN){socket.send(serializedTransaction);}},RETRY_INTERVAL_MS);}},1);},function(error){console.error(error);});}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/transactions/create.tsx"],"names":["bs58","ActionType","CreateTransactionRPC","SEND_TIMEOUT_MS","RETRY_INTERVAL_MS","workerRPC","createTransaction","blockhash","programId","accounts","trackingId","dispatch","socket","feeAccounts","programAccounts","bitId","Math","floor","length","accountIndex","programDataAccount","feeAccount","toBase58","feeAccountSecretKey","secretKey","then","response","signature","serializedTransaction","sentAt","performance","now","pendingTransaction","timeoutId","window","setTimeout","type","TimeoutTransaction","details","id","publicKey","programAccount","encode","NewTransaction","retryUntil","URLSearchParams","location","search","get","retryId","setInterval","readyState","WebSocket","OPEN","send","error","console"],"mappings":"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","sourcesContent":["import { Blockhash, PublicKey } from \"@solana/web3.js\";\nimport bs58 from \"bs58\";\nimport {\n  Dispatch,\n  PendingTransaction,\n  ActionType,\n  TransactionDetails,\n} from \"./index\";\nimport { AccountsConfig } from \"../api/config\";\nimport {\n  CreateTransactionRPC,\n  CreateTransactionResponseMessage,\n} from \"../../workers/create-transaction-rpc\";\n\nconst SEND_TIMEOUT_MS = 45000;\nconst RETRY_INTERVAL_MS = 500;\n\nconst workerRPC = new CreateTransactionRPC();\n\nexport function createTransaction(\n  blockhash: Blockhash,\n  programId: PublicKey,\n  accounts: AccountsConfig,\n  trackingId: number,\n  dispatch: Dispatch,\n  socket: WebSocket\n) {\n  const { feeAccounts, programAccounts } = accounts;\n\n  const bitId = Math.floor(trackingId / feeAccounts.length);\n  const accountIndex = trackingId % feeAccounts.length;\n  const programDataAccount = programAccounts[accountIndex];\n  const feeAccount = feeAccounts[accountIndex];\n\n  workerRPC\n    .createTransaction({\n      trackingId: trackingId,\n      blockhash: blockhash,\n      programId: programId.toBase58(),\n      programDataAccount: programDataAccount.toBase58(),\n      bitId: bitId,\n      feeAccountSecretKey: feeAccount.secretKey,\n    })\n    .then(\n      (response: CreateTransactionResponseMessage) => {\n        const { signature, serializedTransaction } = response;\n\n        const sentAt = performance.now();\n\n        const pendingTransaction: PendingTransaction = { sentAt };\n        pendingTransaction.timeoutId = window.setTimeout(() => {\n          dispatch({ type: ActionType.TimeoutTransaction, trackingId });\n        }, SEND_TIMEOUT_MS);\n\n        const details: TransactionDetails = {\n          id: bitId,\n          feeAccount: feeAccount.publicKey,\n          programAccount: programDataAccount,\n          signature: bs58.encode(signature),\n        };\n\n        dispatch({\n          type: ActionType.NewTransaction,\n          details,\n          trackingId,\n          pendingTransaction,\n        });\n\n        setTimeout(() => {\n          const retryUntil = new URLSearchParams(window.location.search).get(\n            \"retry_until\"\n          );\n          if (retryUntil === null || retryUntil !== \"disabled\") {\n            pendingTransaction.retryId = window.setInterval(() => {\n              if (socket.readyState === WebSocket.OPEN) {\n                socket.send(serializedTransaction);\n              }\n            }, RETRY_INTERVAL_MS);\n          }\n        }, 1);\n      },\n      (error: any) => {\n        console.error(error);\n      }\n    );\n}\n"]},"metadata":{},"sourceType":"module"}