{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/ClusterModal.tsx\";\nimport React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useDebounceCallback } from \"@react-hook/debounce\";\nimport { useServer, serverName, useClusterModal, SERVERS, DEFAULT_SERVER, serverInfo, useCustomUrl } from \"../providers/server\";\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction ClusterModal() {\n  const [show, setShow] = useClusterModal();\n\n  const onClose = () => setShow(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal fade fixed-right${show ? \" show\" : \"\"}`,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"c-pointer\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Choose a Cluster\"), /*#__PURE__*/React.createElement(ClusterToggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nfunction CustomClusterInput({\n  activeSuffix,\n  active\n}) {\n  const [customUrl, setCustomUrl] = useCustomUrl();\n  const [editing, setEditing] = React.useState(false);\n  const query = useQuery();\n  const history = useHistory();\n  const location = useLocation();\n\n  const customClass = prefix => active ? `${prefix}-${activeSuffix}` : \"\";\n\n  const clusterLocation = location => {\n    if (customUrl.length > 0) query.set(\"cluster\", \"custom\");\n    return { ...location,\n      search: query.toString()\n    };\n  };\n\n  const onUrlInput = useDebounceCallback(url => {\n    setCustomUrl(url);\n\n    if (url.length > 0) {\n      query.set(\"cluster\", \"custom\");\n      history.push({ ...location,\n        search: query.toString()\n      });\n    }\n  }, 500);\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return /*#__PURE__*/React.createElement(Link, {\n    to: location => clusterLocation(location),\n    className: \"btn input-group input-group-merge p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    defaultValue: customUrl,\n    className: `form-control form-control-prepended ${inputTextClass} ${customClass(\"border\")}`,\n    onFocus: () => setEditing(true),\n    onBlur: () => setEditing(false),\n    onInput: e => onUrlInput(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `input-group-text pr-0 ${customClass(\"border\")}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: customClass(\"text\") || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Custom:\"))));\n}\n\nfunction ClusterToggle() {\n  const {\n    server\n  } = useServer();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group-toggle d-flex flex-wrap mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, SERVERS.map((next, index) => {\n    const active = next === server;\n    const btnClass = active ? `active btn-dark border-info text-white` : \"btn-dark\";\n\n    const clusterLocation = location => {\n      const params = new URLSearchParams(location.search);\n\n      if (next !== DEFAULT_SERVER) {\n        params.set(\"cluster\", next);\n      } else {\n        params.delete(\"cluster\");\n      }\n\n      return { ...location,\n        search: params.toString()\n      };\n    };\n\n    return /*#__PURE__*/React.createElement(Link, {\n      key: index,\n      className: `btn text-left col-12 mb-3 ${btnClass}`,\n      to: clusterLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, `${serverName(next)}: `, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, serverInfo(next)));\n  }));\n}\n\nexport default ClusterModal;","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/ClusterModal.tsx"],"names":["React","Link","useLocation","useHistory","useDebounceCallback","useServer","serverName","useClusterModal","SERVERS","DEFAULT_SERVER","serverInfo","useCustomUrl","useQuery","URLSearchParams","search","ClusterModal","show","setShow","onClose","e","stopPropagation","CustomClusterInput","activeSuffix","active","customUrl","setCustomUrl","editing","setEditing","useState","query","history","location","customClass","prefix","clusterLocation","length","set","toString","onUrlInput","url","push","inputTextClass","currentTarget","value","ClusterToggle","server","map","next","index","btnClass","params","delete"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useDebounceCallback } from \"@react-hook/debounce\";\nimport { Location } from \"history\";\nimport {\n  useServer,\n  serverName,\n  useClusterModal,\n  SERVERS,\n  DEFAULT_SERVER,\n  serverInfo,\n  useCustomUrl,\n} from \"../providers/server\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction ClusterModal() {\n  const [show, setShow] = useClusterModal();\n  const onClose = () => setShow(false);\n  return (\n    <>\n      <div\n        className={`modal fade fixed-right${show ? \" show\" : \"\"}`}\n        onClick={onClose}\n      >\n        <div className=\"modal-dialog modal-dialog-vertical\">\n          <div className=\"modal-content\">\n            <div className=\"modal-body\" onClick={(e) => e.stopPropagation()}>\n              <span className=\"c-pointer\" onClick={onClose}>\n                &times;\n              </span>\n\n              <h2 className=\"text-center mb-4 mt-4\">Choose a Cluster</h2>\n\n              <ClusterToggle />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype InputProps = { activeSuffix: string; active: boolean };\nfunction CustomClusterInput({ activeSuffix, active }: InputProps) {\n  const [customUrl, setCustomUrl] = useCustomUrl();\n  const [editing, setEditing] = React.useState(false);\n  const query = useQuery();\n  const history = useHistory();\n  const location = useLocation();\n\n  const customClass = (prefix: string) =>\n    active ? `${prefix}-${activeSuffix}` : \"\";\n\n  const clusterLocation = (location: Location) => {\n    if (customUrl.length > 0) query.set(\"cluster\", \"custom\");\n    return {\n      ...location,\n      search: query.toString(),\n    };\n  };\n\n  const onUrlInput = useDebounceCallback((url: string) => {\n    setCustomUrl(url);\n    if (url.length > 0) {\n      query.set(\"cluster\", \"custom\");\n      history.push({ ...location, search: query.toString() });\n    }\n  }, 500);\n\n  const inputTextClass = editing ? \"\" : \"text-muted\";\n  return (\n    <Link\n      to={(location) => clusterLocation(location)}\n      className=\"btn input-group input-group-merge p-0\"\n    >\n      <input\n        type=\"text\"\n        defaultValue={customUrl}\n        className={`form-control form-control-prepended ${inputTextClass} ${customClass(\n          \"border\"\n        )}`}\n        onFocus={() => setEditing(true)}\n        onBlur={() => setEditing(false)}\n        onInput={(e) => onUrlInput(e.currentTarget.value)}\n      />\n      <div className=\"input-group-prepend\">\n        <div className={`input-group-text pr-0 ${customClass(\"border\")}`}>\n          <span className={customClass(\"text\") || \"\"}>Custom:</span>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nfunction ClusterToggle() {\n  const { server } = useServer();\n\n  return (\n    <div className=\"btn-group-toggle d-flex flex-wrap mb-4\">\n      {SERVERS.map((next, index) => {\n        const active = next === server;\n        const btnClass = active\n          ? `active btn-dark border-info text-white`\n          : \"btn-dark\";\n\n        const clusterLocation = (location: Location) => {\n          const params = new URLSearchParams(location.search);\n          if (next !== DEFAULT_SERVER) {\n            params.set(\"cluster\", next);\n          } else {\n            params.delete(\"cluster\");\n          }\n          return {\n            ...location,\n            search: params.toString(),\n          };\n        };\n\n        return (\n          <Link\n            key={index}\n            className={`btn text-left col-12 mb-3 ${btnClass}`}\n            to={clusterLocation}\n          >\n            {`${serverName(next)}: `}\n            <span className=\"text-muted d-inline-block\">\n              {serverInfo(next)}\n            </span>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ClusterModal;\n"]},"metadata":{},"sourceType":"module"}