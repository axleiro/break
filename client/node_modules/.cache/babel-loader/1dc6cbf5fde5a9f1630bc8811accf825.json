{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/providers/account.tsx\";\nimport * as React from \"react\";\nconst StateContext = React.createContext(undefined);\nexport function AccountProvider({\n  children\n}) {\n  const [account, setAccount] = React.useState(undefined);\n  const state = {\n    account,\n    setAccount\n  };\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useAccountState() {\n  const state = React.useContext(StateContext);\n\n  if (state === undefined) {\n    throw new Error(`useAccountState must be used within a AccountProvider`);\n  }\n\n  return [state.account, state.setAccount];\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/account.tsx"],"names":["React","StateContext","createContext","undefined","AccountProvider","children","account","setAccount","useState","state","useAccountState","useContext","Error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,MAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,CAAuCC,SAAvC,CAArB;AAGA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA8C;AACnD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAoCL,SAApC,CAA9B;AACA,QAAMM,KAAK,GAAG;AAAEH,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCJ,QAAtC,CADF;AAGD;AAED,OAAO,SAASK,eAAT,GAA8D;AACnE,QAAMD,KAAK,GAAGT,KAAK,CAACW,UAAN,CAAiBV,YAAjB,CAAd;;AACA,MAAIQ,KAAK,KAAKN,SAAd,EAAyB;AACvB,UAAM,IAAIS,KAAJ,CAAW,uDAAX,CAAN;AACD;;AACD,SAAO,CAACH,KAAK,CAACH,OAAP,EAAgBG,KAAK,CAACF,UAAtB,CAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { Account } from \"@solana/web3.js\";\n\ntype SetAccount = (account: Account | undefined) => void;\ntype State = {\n  account: Account | undefined;\n  setAccount: SetAccount;\n};\n\nconst StateContext = React.createContext<State | undefined>(undefined);\n\ntype Props = { children: React.ReactNode };\nexport function AccountProvider({ children }: Props) {\n  const [account, setAccount] = React.useState<Account | undefined>(undefined);\n  const state = { account, setAccount };\n  return (\n    <StateContext.Provider value={state}>{children}</StateContext.Provider>\n  );\n}\n\nexport function useAccountState(): [Account | undefined, SetAccount] {\n  const state = React.useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(`useAccountState must be used within a AccountProvider`);\n  }\n  return [state.account, state.setAccount];\n}\n"]},"metadata":{},"sourceType":"module"}