{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/Header.tsx\";\nimport * as React from \"react\";\nimport breakSvg from \"images/break.svg\";\nimport solanaSvg from \"images/solana.svg\";\nimport { useGameState, useResetGame, COUNTDOWN_SECS, useCountdown } from \"providers/game\";\nimport ClusterStatusButton from \"./ClusterStatusButton\";\nimport { useBalance } from \"providers/balance\";\nimport { useConfig, useRefreshAccounts } from \"providers/api\";\nexport function Header() {\n  var _useConfig;\n\n  const [gameState] = useGameState();\n  const [countdown] = useCountdown();\n  const [, setRefresh] = React.useState(false);\n  const resetGame = useResetGame();\n  const balance = useBalance();\n  const gameCostLamports = ((_useConfig = useConfig()) === null || _useConfig === void 0 ? void 0 : _useConfig.gameCost) || 0;\n  const refreshAccounts = useRefreshAccounts();\n  const balanceSufficient = balance >= gameCostLamports;\n  React.useEffect(() => {\n    if (countdown !== undefined) {\n      const timerId = setInterval(() => {\n        setRefresh(r => !r);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  }, [countdown]);\n\n  const cta = () => {\n    if (gameState === \"payment\" && balanceSufficient) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn btn-pink lift\",\n        onClick: refreshAccounts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, \"Play\");\n    }\n\n    if (gameState === \"loading\" || gameState === \"payment\") {\n      return null;\n    }\n\n    if (gameState === \"reset\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn btn-pink lift\",\n        onClick: resetGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, \"Play Again\");\n    }\n\n    let secondsRemaining = COUNTDOWN_SECS;\n\n    if (countdown !== undefined) {\n      secondsRemaining = Math.max(0, COUNTDOWN_SECS - Math.floor((performance.now() - countdown) / 1000));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn btn-pink btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fe fe-clock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn btn-pink btn-secondary gameState text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, secondsRemaining, \"s\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header solana-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-body border-dark-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-auto d-flex flex-column d-md-block align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: breakSvg,\n    alt: \"break\",\n    className: \"break mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: solanaSvg,\n    alt: \"solana\",\n    className: \"solana\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, cta(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-md-inline-block d-none ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClusterStatusButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn btn-white lift ml-3\",\n    href: \"https://github.com/solana-labs/break\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fe fe-github mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), \"Source\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center d-md-none mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ClusterStatusButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/Header.tsx"],"names":["React","useGameState","useResetGame","COUNTDOWN_SECS","useCountdown","ClusterStatusButton","useBalance","useConfig","useRefreshAccounts","Header","gameState","countdown","setRefresh","useState","resetGame","balance","gameCostLamports","gameCost","refreshAccounts","balanceSufficient","useEffect","undefined","timerId","setInterval","r","clearTimeout","cta","secondsRemaining","Math","max","floor","performance","now","breakSvg","solanaSvg"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport breakSvg from \"images/break.svg\";\nimport solanaSvg from \"images/solana.svg\";\nimport {\n  useGameState,\n  useResetGame,\n  COUNTDOWN_SECS,\n  useCountdown,\n} from \"providers/game\";\nimport ClusterStatusButton from \"./ClusterStatusButton\";\nimport { useBalance } from \"providers/balance\";\nimport { useConfig, useRefreshAccounts } from \"providers/api\";\n\nexport function Header() {\n  const [gameState] = useGameState();\n  const [countdown] = useCountdown();\n  const [, setRefresh] = React.useState<boolean>(false);\n  const resetGame = useResetGame();\n  const balance = useBalance();\n  const gameCostLamports = useConfig()?.gameCost || 0;\n  const refreshAccounts = useRefreshAccounts();\n  const balanceSufficient = balance >= gameCostLamports;\n\n  React.useEffect(() => {\n    if (countdown !== undefined) {\n      const timerId = setInterval(() => {\n        setRefresh((r) => !r);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  }, [countdown]);\n\n  const cta = () => {\n    if (gameState === \"payment\" && balanceSufficient) {\n      return (\n        <div className=\"btn btn-pink lift\" onClick={refreshAccounts}>\n          Play\n        </div>\n      );\n    }\n\n    if (gameState === \"loading\" || gameState === \"payment\") {\n      return null;\n    }\n\n    if (gameState === \"reset\") {\n      return (\n        <div className=\"btn btn-pink lift\" onClick={resetGame}>\n          Play Again\n        </div>\n      );\n    }\n\n    let secondsRemaining = COUNTDOWN_SECS;\n    if (countdown !== undefined) {\n      secondsRemaining = Math.max(\n        0,\n        COUNTDOWN_SECS - Math.floor((performance.now() - countdown) / 1000)\n      );\n    }\n\n    return (\n      <div className=\"btn-group\">\n        <div className=\"btn btn-pink btn-secondary\">\n          <span className=\"fe fe-clock\" />\n        </div>\n        <div className=\"btn btn-pink btn-secondary gameState text-center\">\n          {secondsRemaining}s\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"header solana-header\">\n      <div className=\"header-body border-dark-purple\">\n        <div className=\"row align-items-center justify-content-between\">\n          <div className=\"col-auto d-flex flex-column d-md-block align-items-center\">\n            <img src={breakSvg} alt=\"break\" className=\"break mr-3\" />\n            <img src={solanaSvg} alt=\"solana\" className=\"solana\" />\n          </div>\n          <div className=\"col-auto\">\n            <div className=\"d-flex flex-row align-items-center\">\n              {cta()}\n              <div className=\"d-md-inline-block d-none ml-3\">\n                <ClusterStatusButton />\n              </div>\n              <a\n                className=\"btn btn-white lift ml-3\"\n                href=\"https://github.com/solana-labs/break\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <span className=\"fe fe-github mr-2\"></span>\n                Source\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row align-items-center d-md-none mt-4\">\n          <div className=\"col-12\">\n            <ClusterStatusButton />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}