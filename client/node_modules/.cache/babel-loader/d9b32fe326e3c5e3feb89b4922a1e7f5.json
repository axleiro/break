{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/pages/ResultsPage.tsx\";\nimport * as React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Header } from \"components/Header\";\nimport { TransactionContainer } from \"components/TxContainer\";\nimport { TransactionModal } from \"components/TxModal\";\nimport { useConfirmedCount, useCreatedCount, useDroppedCount, useAvgConfirmationTime } from \"providers/transactions\";\nimport { COUNTDOWN_SECS } from \"providers/game\";\nexport default function Results() {\n  const createdCount = useCreatedCount();\n  const location = useLocation();\n\n  if (createdCount === 0) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: { ...location,\n        pathname: \"/game\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container min-vh-100 d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Stats, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Summary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex-grow-1 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TransactionModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Summary() {\n  const confirmedCount = useConfirmedCount();\n  const capacityUsed = {\n    solana: 100 * confirmedCount / (COUNTDOWN_SECS * 50000),\n    bitcoin: 100 * confirmedCount / (COUNTDOWN_SECS * 4.6),\n    ethereum: 100 * confirmedCount / (COUNTDOWN_SECS * 15)\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center mb-5 results-summary px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"With\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, confirmedCount), \" \", \"transactions in \", COUNTDOWN_SECS, \" seconds you took up\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, capacityUsed.solana.toFixed(3), \"%\"), \" \", \"of Solana\\u2019s capacity.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Processing the same amount of transactions would have taken up\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, capacityUsed.ethereum.toFixed(1), \"%\"), \" \", \"of Ethereum\\u2019s capacity and\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, capacityUsed.bitcoin.toFixed(1), \"%\"), \" \", \"of Bitcoin\\u2019s capacity.\")));\n}\n\nfunction Stats() {\n  const createdCount = useCreatedCount();\n  const confirmedCount = useConfirmedCount();\n  const droppedCount = useDroppedCount();\n  const avgConfTime = useAvgConfirmationTime();\n  const hasTxData = createdCount > 0;\n  let processingCount = createdCount - confirmedCount - droppedCount;\n  if (!hasTxData) processingCount = 1;\n  const txData = {\n    labels: [\"Confirmed\", \"Dropped\", \"Processing\"],\n    datasets: [{\n      data: [confirmedCount, droppedCount, processingCount],\n      borderColor: [\"#000\", \"#000\", \"#000\"],\n      backgroundColor: [\"#00ffad\", \"#ea134d\", \"#2A2A2A\"]\n    }]\n  };\n  const hasCapacityData = confirmedCount > 0;\n  const capacityUsed = 100 * confirmedCount / (COUNTDOWN_SECS * 50000);\n  const roundCapacityUsed = hasCapacityData ? Math.max(0.5, parseFloat(capacityUsed.toFixed(2))) : 0;\n  const capacityData = {\n    datasets: [{\n      data: [roundCapacityUsed, 100 - roundCapacityUsed],\n      borderColor: [\"#000\", \"#000\"],\n      backgroundColor: [\"#00ffad\", \"#2A2A2A\"]\n    }]\n  };\n  const hasConfData = !!avgConfTime;\n  const numSegments = 50;\n  const confData = {\n    datasets: [{\n      data: new Array(numSegments).fill(1),\n      borderColor: new Array(numSegments).fill(\"#000\"),\n      backgroundColor: new Array(numSegments).fill(hasConfData ? \"#00ffad\" : \"#2A2A2A\")\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats d-flex mb-5 justify-content-between w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatCircle, {\n    data: confData,\n    title: \"Average Confirmation\",\n    value: avgConfTime ? avgConfTime.toFixed(2) + \"s\" : \"---\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StatCircle, {\n    data: txData,\n    title: \"Transactions Processed\",\n    value: `${confirmedCount} of ${createdCount}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StatCircle, {\n    data: capacityData,\n    title: \"Capacity Used\",\n    value: capacityUsed.toFixed(3) + \"%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst STAT_LEGEND = {\n  display: false\n};\nconst STAT_OPTIONS = {\n  showLines: false,\n  cutoutPercentage: 90,\n  maintainAspectRatio: false\n};\n\nfunction StatCircle({\n  data,\n  value,\n  title\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative stat-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    legend: STAT_LEGEND,\n    options: STAT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"donut-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, value), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-muted text-center text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, title))));\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/pages/ResultsPage.tsx"],"names":["React","Doughnut","Redirect","useLocation","Header","TransactionContainer","TransactionModal","useConfirmedCount","useCreatedCount","useDroppedCount","useAvgConfirmationTime","COUNTDOWN_SECS","Results","createdCount","location","pathname","Summary","confirmedCount","capacityUsed","solana","bitcoin","ethereum","toFixed","Stats","droppedCount","avgConfTime","hasTxData","processingCount","txData","labels","datasets","data","borderColor","backgroundColor","hasCapacityData","roundCapacityUsed","Math","max","parseFloat","capacityData","hasConfData","numSegments","confData","Array","fill","STAT_LEGEND","display","STAT_OPTIONS","showLines","cutoutPercentage","maintainAspectRatio","StatCircle","value","title"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Doughnut, ChartData } from \"react-chartjs-2\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nimport { Header } from \"components/Header\";\nimport { TransactionContainer } from \"components/TxContainer\";\nimport { TransactionModal } from \"components/TxModal\";\nimport {\n  useConfirmedCount,\n  useCreatedCount,\n  useDroppedCount,\n  useAvgConfirmationTime,\n} from \"providers/transactions\";\nimport { COUNTDOWN_SECS } from \"providers/game\";\n\nexport default function Results() {\n  const createdCount = useCreatedCount();\n  const location = useLocation();\n\n  if (createdCount === 0) {\n    return <Redirect to={{ ...location, pathname: \"/game\" }} />;\n  }\n\n  return (\n    <div className=\"container min-vh-100 d-flex flex-column\">\n      <div>\n        <Header />\n        <Stats />\n        <Summary />\n      </div>\n      <div className=\"row flex-grow-1 mb-5\">\n        <div className=\"col\">\n          <TransactionContainer />\n        </div>\n      </div>\n      <TransactionModal />\n    </div>\n  );\n}\n\nfunction Summary() {\n  const confirmedCount = useConfirmedCount();\n  const capacityUsed = {\n    solana: (100 * confirmedCount) / (COUNTDOWN_SECS * 50000),\n    bitcoin: (100 * confirmedCount) / (COUNTDOWN_SECS * 4.6),\n    ethereum: (100 * confirmedCount) / (COUNTDOWN_SECS * 15),\n  };\n\n  return (\n    <div className=\"row justify-content-center mb-5 results-summary px-4\">\n      <div className=\"col-12\">\n        <h3 className=\"text-center\">\n          With{\" \"}\n          <span className=\"text-primary font-weight-bold\">\n            {confirmedCount}\n          </span>{\" \"}\n          transactions in {COUNTDOWN_SECS} seconds you took up{\" \"}\n          <span className=\"text-primary font-weight-bold\">\n            {capacityUsed.solana.toFixed(3)}%\n          </span>{\" \"}\n          of Solana’s capacity.\n        </h3>\n        <h3 className=\"text-center\">\n          Processing the same amount of transactions would have taken up{\" \"}\n          <span className=\"text-primary font-weight-bold\">\n            {capacityUsed.ethereum.toFixed(1)}%\n          </span>{\" \"}\n          of Ethereum’s capacity and{\" \"}\n          <span className=\"text-primary font-weight-bold\">\n            {capacityUsed.bitcoin.toFixed(1)}%\n          </span>{\" \"}\n          of Bitcoin’s capacity.\n        </h3>\n      </div>\n    </div>\n  );\n}\n\nfunction Stats() {\n  const createdCount = useCreatedCount();\n  const confirmedCount = useConfirmedCount();\n  const droppedCount = useDroppedCount();\n  const avgConfTime = useAvgConfirmationTime();\n\n  const hasTxData = createdCount > 0;\n  let processingCount = createdCount - confirmedCount - droppedCount;\n  if (!hasTxData) processingCount = 1;\n  const txData = {\n    labels: [\"Confirmed\", \"Dropped\", \"Processing\"],\n    datasets: [\n      {\n        data: [confirmedCount, droppedCount, processingCount],\n        borderColor: [\"#000\", \"#000\", \"#000\"],\n        backgroundColor: [\"#00ffad\", \"#ea134d\", \"#2A2A2A\"],\n      },\n    ],\n  };\n\n  const hasCapacityData = confirmedCount > 0;\n  const capacityUsed = (100 * confirmedCount) / (COUNTDOWN_SECS * 50000);\n  const roundCapacityUsed = hasCapacityData\n    ? Math.max(0.5, parseFloat(capacityUsed.toFixed(2)))\n    : 0;\n  const capacityData = {\n    datasets: [\n      {\n        data: [roundCapacityUsed, 100 - roundCapacityUsed],\n        borderColor: [\"#000\", \"#000\"],\n        backgroundColor: [\"#00ffad\", \"#2A2A2A\"],\n      },\n    ],\n  };\n\n  const hasConfData = !!avgConfTime;\n  const numSegments = 50;\n  const confData = {\n    datasets: [\n      {\n        data: new Array(numSegments).fill(1),\n        borderColor: new Array(numSegments).fill(\"#000\"),\n        backgroundColor: new Array(numSegments).fill(\n          hasConfData ? \"#00ffad\" : \"#2A2A2A\"\n        ),\n      },\n    ],\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"stats d-flex mb-5 justify-content-between w-100\">\n        <StatCircle\n          data={confData}\n          title=\"Average Confirmation\"\n          value={avgConfTime ? avgConfTime.toFixed(2) + \"s\" : \"---\"}\n        />\n        <StatCircle\n          data={txData}\n          title=\"Transactions Processed\"\n          value={`${confirmedCount} of ${createdCount}`}\n        />\n        <StatCircle\n          data={capacityData}\n          title=\"Capacity Used\"\n          value={capacityUsed.toFixed(3) + \"%\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst STAT_LEGEND = {\n  display: false,\n};\n\nconst STAT_OPTIONS = {\n  showLines: false,\n  cutoutPercentage: 90,\n  maintainAspectRatio: false,\n};\n\nfunction StatCircle({\n  data,\n  value,\n  title,\n}: {\n  data: ChartData<Chart.ChartData>;\n  value: string;\n  title: string;\n}) {\n  return (\n    <div className=\"px-4\">\n      <div className=\"position-relative stat-circle\">\n        <Doughnut data={data} legend={STAT_LEGEND} options={STAT_OPTIONS} />\n        <div className=\"donut-content\">\n          <h2 className=\"mb-3\">{value}</h2>\n          <h6 className=\"text-muted text-center text-uppercase\">{title}</h6>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}