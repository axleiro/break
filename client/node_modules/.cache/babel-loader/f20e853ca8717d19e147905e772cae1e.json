{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/pages/SetupPage.tsx\";\nimport * as React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport nacl from \"tweetnacl\";\nimport NodeDetailsManager from \"@toruslabs/fetch-node-details\";\nimport Torus from \"@toruslabs/torus.js\";\nimport { Account } from \"@solana/web3.js\";\nimport { Header } from \"components/Header\";\nimport { LoadingModal } from \"components/LoadingModal\";\nimport { useAccountState } from \"providers/account\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { PAYMENT_ACCOUNT, reportError } from \"utils\";\nconst origin = window.location.origin;\nconst USE_TORUS_TESTNET = origin === \"http://localhost:3000\"; // Torus is only enabled for authorized domains\n\nconst ENABLE_TORUS = USE_TORUS_TESTNET || origin === \"https://break.solana.com\" || origin === \"https://staging.break.solana.com\";\nconst CLIENT_ID = \"785716588020-b5a4fheugq38c23do3p2l73iumfrklnr.apps.googleusercontent.com\";\nconst TEST_CLIENT_ID = \"785716588020-p8kdid1dltqsafcl23g82fb9funikaj7.apps.googleusercontent.com\";\nconst VERIFIER = \"breaksolana-google\";\nconst NODE_DETAILS = USE_TORUS_TESTNET ? new NodeDetailsManager({\n  network: \"ropsten\",\n  proxyAddress: \"0x4023d2a0D330bF11426B12C6144Cfb96B7fa6183\"\n}) : new NodeDetailsManager();\nexport default function Setup() {\n  const [account, setAccount] = useAccountState();\n  const [googleStatus, setGoogleStatus] = React.useState();\n  const [googleResponse, setGoogleResponse] = React.useState();\n  const [nodeDetails, setNodeDetails] = React.useState();\n  const history = useHistory();\n  const location = useLocation();\n  const [error, setError] = React.useState(\"\");\n  const responseGoogle = React.useCallback(async response => {\n    if (!(\"code\" in response)) {\n      setGoogleResponse(response);\n    }\n  }, []);\n  const disconnectGoogle = React.useCallback(() => {\n    if (!googleResponse) return;\n    googleResponse.disconnect();\n    setGoogleResponse(undefined);\n  }, [googleResponse]);\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    clientId: USE_TORUS_TESTNET ? TEST_CLIENT_ID : CLIENT_ID,\n    onSuccess: responseGoogle,\n    onFailure: err => {\n      if (!ENABLE_TORUS) return;\n      reportError(err, \"Google login failed\");\n      setGoogleStatus(undefined);\n      setError(\"Failed to login\");\n    },\n    isSignedIn: ENABLE_TORUS\n  });\n  const onSignIn = React.useCallback(status => {\n    setGoogleStatus(status);\n\n    if (status === \"fresh\") {\n      disconnectGoogle();\n      signIn();\n    }\n  }, [disconnectGoogle, signIn]);\n  React.useEffect(() => {\n    if (!ENABLE_TORUS) return;\n    let unmounted = false;\n    NODE_DETAILS.getNodeDetails().then(details => {\n      !unmounted && setNodeDetails(details);\n    }).catch(err => {\n      reportError(err, \"Fetching torus node details\");\n    });\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  React.useEffect(() => {\n    if (!nodeDetails || !googleResponse || !googleStatus) return;\n    let unmounted = false;\n\n    (async () => {\n      const torus = new Torus({});\n      const {\n        torusNodeEndpoints,\n        torusNodePub,\n        torusIndexes\n      } = nodeDetails;\n\n      try {\n        const verifierId = googleResponse.getBasicProfile().getEmail(); // Creates a new key for the verifierId if it doesn't exist yet\n\n        await torus.getPublicAddress(torusNodeEndpoints, torusNodePub, {\n          verifier: VERIFIER,\n          verifierId\n        }, false);\n        let idToken = googleResponse.getAuthResponse().id_token;\n\n        if (googleStatus === \"cached\") {\n          idToken = (await googleResponse.reloadAuthResponse()).id_token;\n        }\n\n        const {\n          privKey\n        } = await torus.retrieveShares(torusNodeEndpoints, torusIndexes, VERIFIER, {\n          verifier_id: verifierId\n        }, idToken);\n        if (unmounted) return;\n        const torusKey = Buffer.from(privKey.toString(), \"hex\");\n        const keyPair = nacl.sign.keyPair.fromSeed(torusKey);\n        setAccount(new Account(keyPair.secretKey));\n      } catch (err) {\n        reportError(err, \"failed to fetch torus key\");\n        setGoogleStatus(undefined);\n        setError(\"Failed to fetch Torus key\");\n      }\n    })();\n\n    return () => {\n      unmounted = true;\n    };\n  }, [nodeDetails, googleResponse, googleStatus, setAccount]);\n  React.useEffect(() => {\n    if (account) {\n      history.push({ ...location,\n        pathname: \"/game\"\n      });\n    }\n  }, [account, history, location]);\n  const loadingWallet = !!googleResponse;\n  const showWalletSetup = loaded && !googleStatus;\n  const showLoading = !showWalletSetup;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal z-auto fade${showWalletSetup ? \" show\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-card card mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-shrink-0 flex-basis-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Select Wallet\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-truncate text-warning small ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush list my-n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, googleResponse && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }, \"Current wallet\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"small mb-0 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }, \"Account:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, googleResponse.getBasicProfile().getEmail()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn btn-primary\",\n    onClick: () => onSignIn(\"cached\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, \"Select\")))), ENABLE_TORUS && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 27\n    }\n  }, \"Recoverable wallet\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"small mb-0 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 27\n    }\n  }, \"Powered by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://tor.us/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 40\n    }\n  }, \"Torus\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn btn-white\",\n    onClick: () => onSignIn(\"fresh\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: \"18\",\n    width: \"18\",\n    src: \"/google.svg\",\n    className: \"mt-n1\",\n    alt: \"Google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, \"Local wallet\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"small mb-0 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, \"Saved to browser storage\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn btn-white\",\n    onClick: () => {\n      disconnectGoogle();\n      setAccount(PAYMENT_ACCOUNT);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, \"Select\")))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container min-vh-100 d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(LoadingModal, {\n    show: showLoading,\n    wallet: loadingWallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Overlay, {\n    show: showLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Overlay({\n  show\n}) {\n  if (show) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-backdrop fade show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 20\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/pages/SetupPage.tsx"],"names":["React","useHistory","useLocation","nacl","NodeDetailsManager","Torus","Account","Header","LoadingModal","useAccountState","useGoogleLogin","PAYMENT_ACCOUNT","reportError","origin","window","location","USE_TORUS_TESTNET","ENABLE_TORUS","CLIENT_ID","TEST_CLIENT_ID","VERIFIER","NODE_DETAILS","network","proxyAddress","Setup","account","setAccount","googleStatus","setGoogleStatus","useState","googleResponse","setGoogleResponse","nodeDetails","setNodeDetails","history","error","setError","responseGoogle","useCallback","response","disconnectGoogle","disconnect","undefined","signIn","loaded","clientId","onSuccess","onFailure","err","isSignedIn","onSignIn","status","useEffect","unmounted","getNodeDetails","then","details","catch","torus","torusNodeEndpoints","torusNodePub","torusIndexes","verifierId","getBasicProfile","getEmail","getPublicAddress","verifier","idToken","getAuthResponse","id_token","reloadAuthResponse","privKey","retrieveShares","verifier_id","torusKey","Buffer","from","toString","keyPair","sign","fromSeed","secretKey","push","pathname","loadingWallet","showWalletSetup","showLoading","Overlay","show"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport nacl from \"tweetnacl\";\nimport NodeDetailsManager from \"@toruslabs/fetch-node-details\";\nimport Torus from \"@toruslabs/torus.js\";\nimport { Account } from \"@solana/web3.js\";\n\nimport { Header } from \"components/Header\";\nimport { LoadingModal } from \"components/LoadingModal\";\nimport { useAccountState } from \"providers/account\";\nimport {\n  useGoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { PAYMENT_ACCOUNT, reportError } from \"utils\";\n\nconst origin = window.location.origin;\nconst USE_TORUS_TESTNET = origin === \"http://localhost:3000\";\n\n// Torus is only enabled for authorized domains\nconst ENABLE_TORUS =\n  USE_TORUS_TESTNET ||\n  origin === \"https://break.solana.com\" ||\n  origin === \"https://staging.break.solana.com\";\n\ntype NodeDetails = {\n  torusNodeEndpoints: any;\n  torusIndexes: any;\n  torusNodePub: any;\n};\n\nconst CLIENT_ID =\n  \"785716588020-b5a4fheugq38c23do3p2l73iumfrklnr.apps.googleusercontent.com\";\nconst TEST_CLIENT_ID =\n  \"785716588020-p8kdid1dltqsafcl23g82fb9funikaj7.apps.googleusercontent.com\";\nconst VERIFIER = \"breaksolana-google\";\n\nconst NODE_DETAILS = USE_TORUS_TESTNET\n  ? new NodeDetailsManager({\n      network: \"ropsten\",\n      proxyAddress: \"0x4023d2a0D330bF11426B12C6144Cfb96B7fa6183\",\n    })\n  : (new (NodeDetailsManager as any)() as NodeDetailsManager);\n\ntype GoogleStatus = \"cached\" | \"fresh\";\nexport default function Setup() {\n  const [account, setAccount] = useAccountState();\n  const [googleStatus, setGoogleStatus] = React.useState<GoogleStatus>();\n  const [googleResponse, setGoogleResponse] = React.useState<\n    GoogleLoginResponse\n  >();\n  const [nodeDetails, setNodeDetails] = React.useState<NodeDetails>();\n  const history = useHistory();\n  const location = useLocation();\n  const [error, setError] = React.useState(\"\");\n\n  const responseGoogle = React.useCallback(\n    async (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n      if (!(\"code\" in response)) {\n        setGoogleResponse(response);\n      }\n    },\n    []\n  );\n\n  const disconnectGoogle = React.useCallback(() => {\n    if (!googleResponse) return;\n    googleResponse.disconnect();\n    setGoogleResponse(undefined);\n  }, [googleResponse]);\n\n  const { signIn, loaded } = useGoogleLogin({\n    clientId: USE_TORUS_TESTNET ? TEST_CLIENT_ID : CLIENT_ID,\n    onSuccess: responseGoogle,\n    onFailure: (err) => {\n      if (!ENABLE_TORUS) return;\n      reportError(err, \"Google login failed\");\n      setGoogleStatus(undefined);\n      setError(\"Failed to login\");\n    },\n    isSignedIn: ENABLE_TORUS,\n  });\n\n  const onSignIn = React.useCallback(\n    (status: GoogleStatus) => {\n      setGoogleStatus(status);\n      if (status === \"fresh\") {\n        disconnectGoogle();\n        signIn();\n      }\n    },\n    [disconnectGoogle, signIn]\n  );\n\n  React.useEffect(() => {\n    if (!ENABLE_TORUS) return;\n\n    let unmounted = false;\n    NODE_DETAILS.getNodeDetails()\n      .then((details) => {\n        !unmounted && setNodeDetails(details);\n      })\n      .catch((err) => {\n        reportError(err, \"Fetching torus node details\");\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!nodeDetails || !googleResponse || !googleStatus) return;\n\n    let unmounted = false;\n    (async () => {\n      const torus = new Torus({});\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = nodeDetails;\n\n      try {\n        const verifierId = googleResponse.getBasicProfile().getEmail();\n\n        // Creates a new key for the verifierId if it doesn't exist yet\n        await torus.getPublicAddress(\n          torusNodeEndpoints,\n          torusNodePub,\n          { verifier: VERIFIER, verifierId },\n          false\n        );\n\n        let idToken = googleResponse.getAuthResponse().id_token;\n        if (googleStatus === \"cached\") {\n          idToken = (await googleResponse.reloadAuthResponse()).id_token;\n        }\n\n        const { privKey } = await torus.retrieveShares(\n          torusNodeEndpoints,\n          torusIndexes,\n          VERIFIER,\n          { verifier_id: verifierId },\n          idToken\n        );\n        if (unmounted) return;\n        const torusKey = Buffer.from(privKey.toString(), \"hex\");\n        const keyPair = nacl.sign.keyPair.fromSeed(torusKey);\n        setAccount(new Account(keyPair.secretKey));\n      } catch (err) {\n        reportError(err, \"failed to fetch torus key\");\n        setGoogleStatus(undefined);\n        setError(\"Failed to fetch Torus key\");\n      }\n    })();\n\n    return () => {\n      unmounted = true;\n    };\n  }, [nodeDetails, googleResponse, googleStatus, setAccount]);\n\n  React.useEffect(() => {\n    if (account) {\n      history.push({ ...location, pathname: \"/game\" });\n    }\n  }, [account, history, location]);\n\n  const loadingWallet = !!googleResponse;\n  const showWalletSetup = loaded && !googleStatus;\n  const showLoading = !showWalletSetup;\n  return (\n    <>\n      <div className={`modal z-auto fade${showWalletSetup ? \" show\" : \"\"}`}>\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-card card mb-0\">\n              <div className=\"card-header\">\n                <div className=\"flex-shrink-0 flex-basis-auto\">\n                  Select Wallet\n                </div>\n                <div className=\"text-truncate text-warning small ml-5\">\n                  {error}\n                </div>\n              </div>\n\n              <div className=\"card-body\">\n                <ul className=\"list-group list-group-flush list my-n4\">\n                  {googleResponse && (\n                    <li className=\"list-group-item\">\n                      <div className=\"row align-items-center\">\n                        <div className=\"col\">\n                          <h4 className=\"mb-1\">Current wallet</h4>\n                          <p className=\"small mb-0 text-muted\">\n                            Account:{\" \"}\n                            <span className=\"text-primary\">\n                              {googleResponse.getBasicProfile().getEmail()}\n                            </span>\n                          </p>\n                        </div>\n                        <div className=\"col-auto\">\n                          <span\n                            className=\"btn btn-primary\"\n                            onClick={() => onSignIn(\"cached\")}\n                          >\n                            Select\n                          </span>\n                        </div>\n                      </div>\n                    </li>\n                  )}\n\n                  {ENABLE_TORUS && (\n                    <li className=\"list-group-item\">\n                      <div className=\"row align-items-center\">\n                        <div className=\"col\">\n                          <h4 className=\"mb-1\">Recoverable wallet</h4>\n                          <p className=\"small mb-0 text-muted\">\n                            Powered by <a href=\"https://tor.us/\">Torus</a>\n                          </p>\n                        </div>\n                        <div className=\"col-auto\">\n                          <span\n                            className=\"btn btn-white\"\n                            onClick={() => onSignIn(\"fresh\")}\n                          >\n                            <img\n                              height=\"18\"\n                              width=\"18\"\n                              src=\"/google.svg\"\n                              className=\"mt-n1\"\n                              alt=\"Google\"\n                            />\n                          </span>\n                        </div>\n                      </div>\n                    </li>\n                  )}\n\n                  <li className=\"list-group-item\">\n                    <div className=\"row align-items-center\">\n                      <div className=\"col\">\n                        <h4 className=\"mb-1\">Local wallet</h4>\n                        <p className=\"small mb-0 text-muted\">\n                          Saved to browser storage\n                        </p>\n                      </div>\n                      <div className=\"col-auto\">\n                        <span\n                          className=\"btn btn-white\"\n                          onClick={() => {\n                            disconnectGoogle();\n                            setAccount(PAYMENT_ACCOUNT);\n                          }}\n                        >\n                          Select\n                        </span>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container min-vh-100 d-flex flex-column\">\n        <Header />\n      </div>\n      <LoadingModal show={showLoading} wallet={loadingWallet} />\n      <Overlay show={showLoading} />\n    </>\n  );\n}\n\nfunction Overlay({ show }: { show: boolean }) {\n  if (show) return <div className=\"modal-backdrop fade show\"></div>;\n  return <div className=\"fade\"></div>;\n}\n"]},"metadata":{},"sourceType":"module"}