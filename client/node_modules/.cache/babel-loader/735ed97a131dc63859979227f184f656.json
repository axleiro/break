{"ast":null,"code":"import _objectSpread from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import{Doughnut}from\"react-chartjs-2\";import{Redirect,useLocation}from\"react-router-dom\";import{Header}from\"components/Header\";import{TransactionContainer}from\"components/TxContainer\";import{TransactionModal}from\"components/TxModal\";import{useConfirmedCount,useCreatedCount,useDroppedCount,useAvgConfirmationTime}from\"providers/transactions\";import{COUNTDOWN_SECS}from\"providers/game\";export default function Results(){var createdCount=useCreatedCount();var location=useLocation();if(createdCount===0){return/*#__PURE__*/React.createElement(Redirect,{to:_objectSpread(_objectSpread({},location),{},{pathname:\"/game\"})});}return/*#__PURE__*/React.createElement(\"div\",{className:\"container min-vh-100 d-flex flex-column\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Stats,null),/*#__PURE__*/React.createElement(Summary,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"row flex-grow-1 mb-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(TransactionContainer,null))),/*#__PURE__*/React.createElement(TransactionModal,null));}function Summary(){var confirmedCount=useConfirmedCount();var capacityUsed=100*confirmedCount/(COUNTDOWN_SECS*50000);return/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center mb-5 results-summary px-4\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-center\"},\"With\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-primary font-weight-bold\"},confirmedCount),\" \",\"transactions in \",COUNTDOWN_SECS,\" seconds you took up\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-primary font-weight-bold\"},capacityUsed.toFixed(3),\"%\"),\" \",\"of Solana\\u2019s capacity.\"));}function Stats(){var createdCount=useCreatedCount();var confirmedCount=useConfirmedCount();var droppedCount=useDroppedCount();var avgConfTime=useAvgConfirmationTime();var hasTxData=createdCount>0;var processingCount=createdCount-confirmedCount-droppedCount;if(!hasTxData)processingCount=1;var txData={labels:[\"Confirmed\",\"Dropped\",\"Processing\"],datasets:[{data:[confirmedCount,droppedCount,processingCount],borderColor:[\"#000\",\"#000\",\"#000\"],backgroundColor:[\"#00ffad\",\"#ea134d\",\"#2A2A2A\"]}]};var hasCapacityData=confirmedCount>0;var capacityUsed=100*confirmedCount/(COUNTDOWN_SECS*50000);var roundCapacityUsed=hasCapacityData?Math.max(0.5,parseFloat(capacityUsed.toFixed(2))):0;var capacityData={datasets:[{data:[roundCapacityUsed,100-roundCapacityUsed],borderColor:[\"#000\",\"#000\"],backgroundColor:[\"#00ffad\",\"#2A2A2A\"]}]};var hasConfData=!!avgConfTime;var numSegments=50;var confData={datasets:[{data:new Array(numSegments).fill(1),borderColor:new Array(numSegments).fill(\"#000\"),backgroundColor:new Array(numSegments).fill(hasConfData?\"#00ffad\":\"#2A2A2A\")}]};return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"stats d-flex mb-5 justify-content-between w-100\"},/*#__PURE__*/React.createElement(StatCircle,{data:confData,title:\"Average Confirmation\",value:avgConfTime?avgConfTime.toFixed(2)+\"s\":\"---\"}),/*#__PURE__*/React.createElement(StatCircle,{data:txData,title:\"Transactions Processed\",value:\"\".concat(confirmedCount,\" of \").concat(createdCount)}),/*#__PURE__*/React.createElement(StatCircle,{data:capacityData,title:\"Capacity Used\",value:capacityUsed.toFixed(3)+\"%\"})));}var STAT_LEGEND={display:false};var STAT_OPTIONS={showLines:false,cutoutPercentage:90,maintainAspectRatio:false};function StatCircle(_ref){var data=_ref.data,value=_ref.value,title=_ref.title;return/*#__PURE__*/React.createElement(\"div\",{className:\"px-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-relative stat-circle\"},/*#__PURE__*/React.createElement(Doughnut,{data:data,legend:STAT_LEGEND,options:STAT_OPTIONS}),/*#__PURE__*/React.createElement(\"div\",{className:\"donut-content\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"mb-3\"},value),/*#__PURE__*/React.createElement(\"h6\",{className:\"text-muted text-center text-uppercase\"},title))));}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/pages/ResultsPage.tsx"],"names":["React","Doughnut","Redirect","useLocation","Header","TransactionContainer","TransactionModal","useConfirmedCount","useCreatedCount","useDroppedCount","useAvgConfirmationTime","COUNTDOWN_SECS","Results","createdCount","location","pathname","Summary","confirmedCount","capacityUsed","toFixed","Stats","droppedCount","avgConfTime","hasTxData","processingCount","txData","labels","datasets","data","borderColor","backgroundColor","hasCapacityData","roundCapacityUsed","Math","max","parseFloat","capacityData","hasConfData","numSegments","confData","Array","fill","STAT_LEGEND","display","STAT_OPTIONS","showLines","cutoutPercentage","maintainAspectRatio","StatCircle","value","title"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Doughnut, ChartData } from \"react-chartjs-2\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nimport { Header } from \"components/Header\";\nimport { TransactionContainer } from \"components/TxContainer\";\nimport { TransactionModal } from \"components/TxModal\";\nimport {\n  useConfirmedCount,\n  useCreatedCount,\n  useDroppedCount,\n  useAvgConfirmationTime,\n} from \"providers/transactions\";\nimport { COUNTDOWN_SECS } from \"providers/game\";\n\nexport default function Results() {\n  const createdCount = useCreatedCount();\n  const location = useLocation();\n\n  if (createdCount === 0) {\n    return <Redirect to={{ ...location, pathname: \"/game\" }} />;\n  }\n\n  return (\n    <div className=\"container min-vh-100 d-flex flex-column\">\n      <div>\n        <Header />\n        <Stats />\n        <Summary />\n      </div>\n      <div className=\"row flex-grow-1 mb-5\">\n        <div className=\"col\">\n          <TransactionContainer />\n        </div>\n      </div>\n      <TransactionModal />\n    </div>\n  );\n}\n\nfunction Summary() {\n  const confirmedCount = useConfirmedCount();\n  const capacityUsed = (100 * confirmedCount) / (COUNTDOWN_SECS * 50000);\n  return (\n    <div className=\"row justify-content-center mb-5 results-summary px-4\">\n      <h3 className=\"text-center\">\n        With{\" \"}\n        <span className=\"text-primary font-weight-bold\">{confirmedCount}</span>{\" \"}\n        transactions in {COUNTDOWN_SECS} seconds you took up{\" \"}\n        <span className=\"text-primary font-weight-bold\">\n          {capacityUsed.toFixed(3)}%\n        </span>{\" \"}\n        of Solana’s capacity.\n      </h3>\n      {/* <h3 className=\"text-center\">\n        Today, players around the world have submitted{\" \"}\n        <span className=\"text-primary font-weight-bold\">{confirmedCount}</span>{\" \"}\n        transactions, which is{\" \"}\n        <span className=\"text-primary font-weight-bold\">\n          {capacityUsed.toFixed(3)}%\n        </span>{\" \"}\n        of Solana’s capacity.\n      </h3> */}\n    </div>\n  );\n}\n\nfunction Stats() {\n  const createdCount = useCreatedCount();\n  const confirmedCount = useConfirmedCount();\n  const droppedCount = useDroppedCount();\n  const avgConfTime = useAvgConfirmationTime();\n\n  const hasTxData = createdCount > 0;\n  let processingCount = createdCount - confirmedCount - droppedCount;\n  if (!hasTxData) processingCount = 1;\n  const txData = {\n    labels: [\"Confirmed\", \"Dropped\", \"Processing\"],\n    datasets: [\n      {\n        data: [confirmedCount, droppedCount, processingCount],\n        borderColor: [\"#000\", \"#000\", \"#000\"],\n        backgroundColor: [\"#00ffad\", \"#ea134d\", \"#2A2A2A\"],\n      },\n    ],\n  };\n\n  const hasCapacityData = confirmedCount > 0;\n  const capacityUsed = (100 * confirmedCount) / (COUNTDOWN_SECS * 50000);\n  const roundCapacityUsed = hasCapacityData\n    ? Math.max(0.5, parseFloat(capacityUsed.toFixed(2)))\n    : 0;\n  const capacityData = {\n    datasets: [\n      {\n        data: [roundCapacityUsed, 100 - roundCapacityUsed],\n        borderColor: [\"#000\", \"#000\"],\n        backgroundColor: [\"#00ffad\", \"#2A2A2A\"],\n      },\n    ],\n  };\n\n  const hasConfData = !!avgConfTime;\n  const numSegments = 50;\n  const confData = {\n    datasets: [\n      {\n        data: new Array(numSegments).fill(1),\n        borderColor: new Array(numSegments).fill(\"#000\"),\n        backgroundColor: new Array(numSegments).fill(\n          hasConfData ? \"#00ffad\" : \"#2A2A2A\"\n        ),\n      },\n    ],\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"stats d-flex mb-5 justify-content-between w-100\">\n        <StatCircle\n          data={confData}\n          title=\"Average Confirmation\"\n          value={avgConfTime ? avgConfTime.toFixed(2) + \"s\" : \"---\"}\n        />\n        <StatCircle\n          data={txData}\n          title=\"Transactions Processed\"\n          value={`${confirmedCount} of ${createdCount}`}\n        />\n        <StatCircle\n          data={capacityData}\n          title=\"Capacity Used\"\n          value={capacityUsed.toFixed(3) + \"%\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst STAT_LEGEND = {\n  display: false,\n};\n\nconst STAT_OPTIONS = {\n  showLines: false,\n  cutoutPercentage: 90,\n  maintainAspectRatio: false,\n};\n\nfunction StatCircle({\n  data,\n  value,\n  title,\n}: {\n  data: ChartData<Chart.ChartData>;\n  value: string;\n  title: string;\n}) {\n  return (\n    <div className=\"px-4\">\n      <div className=\"position-relative stat-circle\">\n        <Doughnut data={data} legend={STAT_LEGEND} options={STAT_OPTIONS} />\n        <div className=\"donut-content\">\n          <h2 className=\"mb-3\">{value}</h2>\n          <h6 className=\"text-muted text-center text-uppercase\">{title}</h6>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}