{"ast":null,"code":"import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{useTransactions}from\"./index\";export var SelectedContext=React.createContext(undefined);export function SelectedTxProvider(_ref){var children=_ref.children;var transactions=useTransactions();var _React$useState=React.useState(undefined),_React$useState2=_slicedToArray(_React$useState,2),signature=_React$useState2[0],selectSignature=_React$useState2[1];var _React$useState3=React.useState(undefined),_React$useState4=_slicedToArray(_React$useState3,2),transaction=_React$useState4[0],selectTransaction=_React$useState4[1];React.useEffect(function(){selectTransaction(transactions.find(function(tx){return tx.details.signature===signature;}));},[transactions,signature]);var selectedState=React.useMemo(function(){return[transaction,selectSignature];},[transaction]);return/*#__PURE__*/React.createElement(SelectedContext.Provider,{value:selectedState},children);}export function useSelectedTransaction(){var state=React.useContext(SelectedContext);if(!state){throw new Error(\"useSelectedTx must be used within a TransactionsProvider\");}return state[0];}export function useSelectTransaction(){var state=React.useContext(SelectedContext);if(!state){throw new Error(\"useSelectTx must be used within a TransactionsProvider\");}return state[1];}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/transactions/selected.tsx"],"names":["React","useTransactions","SelectedContext","createContext","undefined","SelectedTxProvider","children","transactions","useState","signature","selectSignature","transaction","selectTransaction","useEffect","find","tx","details","selectedState","useMemo","useSelectedTransaction","state","useContext","Error","useSelectTransaction"],"mappings":"mKAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,eAAT,KAAkD,SAAlD,CAIA,MAAO,IAAMC,CAAAA,eAAe,CAAGF,KAAK,CAACG,aAAN,CAC7BC,SAD6B,CAAxB,CAIP,MAAO,SAASC,CAAAA,kBAAT,MAAyD,IAA3BC,CAAAA,QAA2B,MAA3BA,QAA2B,CAC9D,GAAMC,CAAAA,YAAY,CAAGN,eAAe,EAApC,CAD8D,oBAEzBD,KAAK,CAACQ,QAAN,CACnCJ,SADmC,CAFyB,oDAEvDK,SAFuD,qBAE5CC,eAF4C,0CAKrBV,KAAK,CAACQ,QAAN,CAEvCJ,SAFuC,CALqB,qDAKvDO,WALuD,qBAK1CC,iBAL0C,qBAS9DZ,KAAK,CAACa,SAAN,CAAgB,UAAM,CACpBD,iBAAiB,CACfL,YAAY,CAACO,IAAb,CAAkB,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,OAAH,CAAWP,SAAX,GAAyBA,SAAjC,EAAlB,CADe,CAAjB,CAGD,CAJD,CAIG,CAACF,YAAD,CAAeE,SAAf,CAJH,EAMA,GAAMQ,CAAAA,aAA4B,CAAGjB,KAAK,CAACkB,OAAN,CAAc,UAAM,CACvD,MAAO,CAACP,WAAD,CAAcD,eAAd,CAAP,CACD,CAFoC,CAElC,CAACC,WAAD,CAFkC,CAArC,CAIA,mBACE,oBAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAEM,aAAjC,EACGX,QADH,CADF,CAKD,CAED,MAAO,SAASa,CAAAA,sBAAT,EAAkC,CACvC,GAAMC,CAAAA,KAAK,CAAGpB,KAAK,CAACqB,UAAN,CAAiBnB,eAAjB,CAAd,CACA,GAAI,CAACkB,KAAL,CAAY,CACV,KAAM,IAAIE,CAAAA,KAAJ,4DAAN,CACD,CACD,MAAOF,CAAAA,KAAK,CAAC,CAAD,CAAZ,CACD,CAED,MAAO,SAASG,CAAAA,oBAAT,EAAgC,CACrC,GAAMH,CAAAA,KAAK,CAAGpB,KAAK,CAACqB,UAAN,CAAiBnB,eAAjB,CAAd,CACA,GAAI,CAACkB,KAAL,CAAY,CACV,KAAM,IAAIE,CAAAA,KAAJ,0DAAN,CACD,CACD,MAAOF,CAAAA,KAAK,CAAC,CAAD,CAAZ,CACD","sourcesContent":["import * as React from \"react\";\nimport { useTransactions, TransactionState } from \"./index\";\n\ntype SetSelected = React.Dispatch<React.SetStateAction<string | undefined>>;\ntype SelectedState = [TransactionState | undefined, SetSelected];\nexport const SelectedContext = React.createContext<SelectedState | undefined>(\n  undefined\n);\ntype ProviderProps = { children: React.ReactNode };\nexport function SelectedTxProvider({ children }: ProviderProps) {\n  const transactions = useTransactions();\n  const [signature, selectSignature] = React.useState<string | undefined>(\n    undefined\n  );\n  const [transaction, selectTransaction] = React.useState<\n    TransactionState | undefined\n  >(undefined);\n\n  React.useEffect(() => {\n    selectTransaction(\n      transactions.find((tx) => tx.details.signature === signature)\n    );\n  }, [transactions, signature]);\n\n  const selectedState: SelectedState = React.useMemo(() => {\n    return [transaction, selectSignature];\n  }, [transaction]);\n\n  return (\n    <SelectedContext.Provider value={selectedState}>\n      {children}\n    </SelectedContext.Provider>\n  );\n}\n\nexport function useSelectedTransaction() {\n  const state = React.useContext(SelectedContext);\n  if (!state) {\n    throw new Error(`useSelectedTx must be used within a TransactionsProvider`);\n  }\n  return state[0];\n}\n\nexport function useSelectTransaction() {\n  const state = React.useContext(SelectedContext);\n  if (!state) {\n    throw new Error(`useSelectTx must be used within a TransactionsProvider`);\n  }\n  return state[1];\n}\n"]},"metadata":{},"sourceType":"module"}