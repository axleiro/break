{"ast":null,"code":"var _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/components/LoadingModal.tsx\";\nimport React from \"react\";\nimport { useClusterModal } from \"providers/server\";\nexport function LoadingModal({\n  show,\n  wallet\n}) {\n  const [cancel, setCancel] = React.useState(false);\n  const [showModal, setShowModal] = useClusterModal();\n\n  if (cancel && (!show || showModal)) {\n    setCancel(false);\n  }\n\n  React.useEffect(() => {\n    if (wallet !== undefined || !show || showModal) return;\n    const timeoutId = window.setTimeout(() => {\n      setCancel(true);\n    }, 10000);\n    return () => clearTimeout(timeoutId);\n  });\n\n  const renderContent = () => {\n    if (!show) return null;\n    const loadingText = wallet ? \"Fetching wallet\" : \"Loading\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered lift justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content w-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-4 pl-4 pr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-grow spinner-grow-sm mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, !cancel ? loadingText : \"Retrying\", \"...\"))), cancel && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4 border-top-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => setShowModal(true),\n      className: \"btn btn-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Try another cluster\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal fade${show ? \" show\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, renderContent());\n}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/LoadingModal.tsx"],"names":["React","useClusterModal","LoadingModal","show","wallet","cancel","setCancel","useState","showModal","setShowModal","useEffect","undefined","timeoutId","window","setTimeout","clearTimeout","renderContent","loadingText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAO,SAASC,YAAT,CAAsB;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA;AAF2B,CAAtB,EAMJ;AACD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAA5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,eAAe,EAAjD;;AAEA,MAAII,MAAM,KAAK,CAACF,IAAD,IAASK,SAAd,CAAV,EAAoC;AAClCF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAEDN,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,QAAIN,MAAM,KAAKO,SAAX,IAAwB,CAACR,IAAzB,IAAiCK,SAArC,EAAgD;AAEhD,UAAMI,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACxCR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFiB,EAEf,KAFe,CAAlB;AAIA,WAAO,MAAMS,YAAY,CAACH,SAAD,CAAzB;AACD,GARD;;AAUA,QAAMI,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACb,IAAL,EAAW,OAAO,IAAP;AACX,UAAMc,WAAW,GAAGb,MAAM,GAAG,iBAAH,GAAuB,SAAjD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,CAACC,MAAD,GAAUY,WAAV,GAAwB,UAA9C,QAFF,CADF,CADF,EAOGZ,MAAM,iBACL;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,OAAO,EAAE,MAAMI,YAAY,CAAC,IAAD,CAAjC;AAAyC,MAAA,SAAS,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CARJ,CADF,CADF;AAmBD,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAG,aAAYN,IAAI,GAAG,OAAH,GAAa,EAAG,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDa,aAAa,EAAlE,CADF;AAGD","sourcesContent":["import React from \"react\";\nimport { useClusterModal } from \"providers/server\";\n\nexport function LoadingModal({\n  show,\n  wallet,\n}: {\n  show: boolean;\n  wallet?: boolean;\n}) {\n  const [cancel, setCancel] = React.useState(false);\n  const [showModal, setShowModal] = useClusterModal();\n\n  if (cancel && (!show || showModal)) {\n    setCancel(false);\n  }\n\n  React.useEffect(() => {\n    if (wallet !== undefined || !show || showModal) return;\n\n    const timeoutId = window.setTimeout(() => {\n      setCancel(true);\n    }, 10000);\n\n    return () => clearTimeout(timeoutId);\n  });\n\n  const renderContent = () => {\n    if (!show) return null;\n    const loadingText = wallet ? \"Fetching wallet\" : \"Loading\";\n    return (\n      <div className=\"modal-dialog modal-dialog-centered lift justify-content-center\">\n        <div className=\"modal-content w-auto\">\n          <div className=\"py-4 pl-4 pr-5\">\n            <div className=\"d-flex align-items-center justify-content-center\">\n              <span className=\"spinner-grow spinner-grow-sm mr-3\"></span>\n              <h2 className=\"mb-0\">{!cancel ? loadingText : \"Retrying\"}...</h2>\n            </div>\n          </div>\n          {cancel && (\n            <div className=\"p-4 border-top-dark\">\n              <span onClick={() => setShowModal(true)} className=\"btn btn-info\">\n                Try another cluster\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`modal fade${show ? \" show\" : \"\"}`}>{renderContent()}</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}