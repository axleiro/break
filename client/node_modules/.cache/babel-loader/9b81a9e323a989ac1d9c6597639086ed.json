{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/providers/wallet.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nconst StateContext = /*#__PURE__*/React.createContext(undefined);\nexport function WalletProvider({\n  children\n}) {\n  _s();\n\n  const state = React.useState();\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletProvider, \"TB5q0vVTSBe3rtUyWC7Zc0y6MUY=\");\n\n_c = WalletProvider;\nexport function usePayerState() {\n  _s2();\n\n  const state = React.useContext(StateContext);\n\n  if (state === undefined) {\n    throw new Error(`usePayerState must be used within a WalletProvider`);\n  }\n\n  return state;\n}\n\n_s2(usePayerState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/wallet.tsx"],"names":["React","StateContext","createContext","undefined","WalletProvider","children","state","useState","usePayerState","useContext","Error"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAMA,MAAMC,YAAY,gBAAGD,KAAK,CAACE,aAAN,CAAuCC,SAAvC,CAArB;AAGA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAA6C;AAAA;;AAClD,QAAMC,KAAK,GAAGN,KAAK,CAACO,QAAN,EAAd;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA,cAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GALeD,c;;KAAAA,c;AAOhB,OAAO,SAASI,aAAT,GAAgC;AAAA;;AACrC,QAAMF,KAAK,GAAGN,KAAK,CAACS,UAAN,CAAiBR,YAAjB,CAAd;;AACA,MAAIK,KAAK,KAAKH,SAAd,EAAyB;AACvB,UAAM,IAAIO,KAAJ,CAAW,oDAAX,CAAN;AACD;;AACD,SAAOJ,KAAP;AACD;;IANeE,a","sourcesContent":["import * as React from \"react\";\nimport { Account } from \"@solana/web3.js\";\n\ntype SetAccount = (account: Account | undefined) => void;\ntype State = [Account | undefined, SetAccount];\n\nconst StateContext = React.createContext<State | undefined>(undefined);\n\ntype Props = { children: React.ReactNode };\nexport function WalletProvider({ children }: Props) {\n  const state = React.useState<Account>();\n  return (\n    <StateContext.Provider value={state}>{children}</StateContext.Provider>\n  );\n}\n\nexport function usePayerState(): State {\n  const state = React.useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(`usePayerState must be used within a WalletProvider`);\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}