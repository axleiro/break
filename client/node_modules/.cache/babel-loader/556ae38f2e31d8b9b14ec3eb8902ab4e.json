{"ast":null,"code":"import _objectSpread from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{useHistory,useLocation}from\"react-router-dom\";import nacl from\"tweetnacl\";import NodeDetailsManager from\"@toruslabs/fetch-node-details\";import Torus from\"@toruslabs/torus.js\";import{Account}from\"@solana/web3.js\";import{Header}from\"components/Header\";import{LoadingModal}from\"components/LoadingModal\";import{useAccountState}from\"providers/account\";import{useGoogleLogin}from\"react-google-login\";import{PAYMENT_ACCOUNT,reportError}from\"utils\";var origin=window.location.origin;var USE_TORUS_TESTNET=origin===\"http://localhost:3000\";// Torus is only enabled for authorized domains\nvar ENABLE_TORUS=USE_TORUS_TESTNET||origin===\"https://break.solana.com\"||origin===\"https://staging.break.solana.com\";var CLIENT_ID=\"785716588020-b5a4fheugq38c23do3p2l73iumfrklnr.apps.googleusercontent.com\";var TEST_CLIENT_ID=\"785716588020-p8kdid1dltqsafcl23g82fb9funikaj7.apps.googleusercontent.com\";var VERIFIER=\"breaksolana-google\";var NODE_DETAILS=USE_TORUS_TESTNET?new NodeDetailsManager({network:\"ropsten\",proxyAddress:\"0x4023d2a0D330bF11426B12C6144Cfb96B7fa6183\"}):new NodeDetailsManager();export default function Setup(){var _useAccountState=useAccountState(),_useAccountState2=_slicedToArray(_useAccountState,2),account=_useAccountState2[0],setAccount=_useAccountState2[1];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),googleStatus=_React$useState2[0],setGoogleStatus=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),googleResponse=_React$useState4[0],setGoogleResponse=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),nodeDetails=_React$useState6[0],setNodeDetails=_React$useState6[1];var history=useHistory();var location=useLocation();var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),error=_React$useState8[0],setError=_React$useState8[1];var responseGoogle=React.useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(\"code\"in response)){setGoogleResponse(response);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var disconnectGoogle=React.useCallback(function(){if(!googleResponse)return;googleResponse.disconnect();setGoogleResponse(undefined);},[googleResponse]);var _useGoogleLogin=useGoogleLogin({clientId:USE_TORUS_TESTNET?TEST_CLIENT_ID:CLIENT_ID,onSuccess:responseGoogle,onFailure:function onFailure(err){if(!ENABLE_TORUS)return;reportError(err,\"Google login failed\");setGoogleStatus(undefined);setError(\"Failed to login\");},isSignedIn:ENABLE_TORUS}),signIn=_useGoogleLogin.signIn,loaded=_useGoogleLogin.loaded;var onSignIn=React.useCallback(function(status){setGoogleStatus(status);if(status===\"fresh\"){disconnectGoogle();signIn();}},[disconnectGoogle,signIn]);React.useEffect(function(){if(!ENABLE_TORUS)return;var unmounted=false;NODE_DETAILS.getNodeDetails().then(function(details){!unmounted&&setNodeDetails(details);}).catch(function(err){reportError(err,\"Fetching torus node details\");});return function(){unmounted=true;};},[]);React.useEffect(function(){if(!nodeDetails||!googleResponse||!googleStatus)return;var unmounted=false;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var torus,torusNodeEndpoints,torusNodePub,torusIndexes,verifierId,idToken,_yield$torus$retrieve,privKey,torusKey,keyPair;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:torus=new Torus({});torusNodeEndpoints=nodeDetails.torusNodeEndpoints,torusNodePub=nodeDetails.torusNodePub,torusIndexes=nodeDetails.torusIndexes;_context2.prev=2;verifierId=googleResponse.getBasicProfile().getEmail();// Creates a new key for the verifierId if it doesn't exist yet\n_context2.next=6;return torus.getPublicAddress(torusNodeEndpoints,torusNodePub,{verifier:VERIFIER,verifierId:verifierId},false);case 6:idToken=googleResponse.getAuthResponse().id_token;if(!(googleStatus===\"cached\")){_context2.next=11;break;}_context2.next=10;return googleResponse.reloadAuthResponse();case 10:idToken=_context2.sent.id_token;case 11:_context2.next=13;return torus.retrieveShares(torusNodeEndpoints,torusIndexes,VERIFIER,{verifier_id:verifierId},idToken);case 13:_yield$torus$retrieve=_context2.sent;privKey=_yield$torus$retrieve.privKey;if(!unmounted){_context2.next=17;break;}return _context2.abrupt(\"return\");case 17:torusKey=Buffer.from(privKey.toString(),\"hex\");keyPair=nacl.sign.keyPair.fromSeed(torusKey);setAccount(new Account(keyPair.secretKey));_context2.next=27;break;case 22:_context2.prev=22;_context2.t0=_context2[\"catch\"](2);reportError(_context2.t0,\"failed to fetch torus key\");setGoogleStatus(undefined);setError(\"Failed to fetch Torus key\");case 27:case\"end\":return _context2.stop();}}},_callee2,null,[[2,22]]);}))();return function(){unmounted=true;};},[nodeDetails,googleResponse,googleStatus,setAccount]);React.useEffect(function(){if(account){history.push(_objectSpread(_objectSpread({},location),{},{pathname:\"/game\"}));}},[account,history,location]);var loadingWallet=!!googleResponse;var showWalletSetup=loaded&&!googleStatus;var showLoading=!showWalletSetup;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal z-auto fade\".concat(showWalletSetup?\" show\":\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-centered\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-card card mb-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex-shrink-0 flex-basis-auto\"},\"Select Wallet\"),/*#__PURE__*/React.createElement(\"div\",{className:\"text-truncate text-warning small ml-5\"},error)),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flush list my-n4\"},googleResponse&&/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-1\"},\"Current wallet\"),/*#__PURE__*/React.createElement(\"p\",{className:\"small mb-0 text-muted\"},\"Account:\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-primary\"},googleResponse.getBasicProfile().getEmail()))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-auto\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-primary\",onClick:function onClick(){return onSignIn(\"cached\");}},\"Select\")))),ENABLE_TORUS&&/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-1\"},\"Recoverable wallet\"),/*#__PURE__*/React.createElement(\"p\",{className:\"small mb-0 text-muted\"},\"Powered by \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://tor.us/\"},\"Torus\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-auto\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-white\",onClick:function onClick(){return onSignIn(\"fresh\");}},/*#__PURE__*/React.createElement(\"img\",{height:\"18\",width:\"18\",src:\"/google.svg\",className:\"mt-n1\",alt:\"Google\"}))))),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-1\"},\"Local wallet\"),/*#__PURE__*/React.createElement(\"p\",{className:\"small mb-0 text-muted\"},\"Saved to browser storage\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-auto\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-white\",onClick:function onClick(){disconnectGoogle();setAccount(PAYMENT_ACCOUNT);}},\"Select\")))))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"container min-vh-100 d-flex flex-column\"},/*#__PURE__*/React.createElement(Header,null)),/*#__PURE__*/React.createElement(LoadingModal,{show:showLoading,wallet:loadingWallet}),/*#__PURE__*/React.createElement(Overlay,{show:showLoading}));}function Overlay(_ref3){var show=_ref3.show;if(show)return/*#__PURE__*/React.createElement(\"div\",{className:\"modal-backdrop fade show\"});return/*#__PURE__*/React.createElement(\"div\",{className:\"fade\"});}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/pages/SetupPage.tsx"],"names":["React","useHistory","useLocation","nacl","NodeDetailsManager","Torus","Account","Header","LoadingModal","useAccountState","useGoogleLogin","PAYMENT_ACCOUNT","reportError","origin","window","location","USE_TORUS_TESTNET","ENABLE_TORUS","CLIENT_ID","TEST_CLIENT_ID","VERIFIER","NODE_DETAILS","network","proxyAddress","Setup","account","setAccount","useState","googleStatus","setGoogleStatus","googleResponse","setGoogleResponse","nodeDetails","setNodeDetails","history","error","setError","responseGoogle","useCallback","response","disconnectGoogle","disconnect","undefined","clientId","onSuccess","onFailure","err","isSignedIn","signIn","loaded","onSignIn","status","useEffect","unmounted","getNodeDetails","then","details","catch","torus","torusNodeEndpoints","torusNodePub","torusIndexes","verifierId","getBasicProfile","getEmail","getPublicAddress","verifier","idToken","getAuthResponse","id_token","reloadAuthResponse","retrieveShares","verifier_id","privKey","torusKey","Buffer","from","toString","keyPair","sign","fromSeed","secretKey","push","pathname","loadingWallet","showWalletSetup","showLoading","Overlay","show"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport nacl from \"tweetnacl\";\nimport NodeDetailsManager from \"@toruslabs/fetch-node-details\";\nimport Torus from \"@toruslabs/torus.js\";\nimport { Account } from \"@solana/web3.js\";\n\nimport { Header } from \"components/Header\";\nimport { LoadingModal } from \"components/LoadingModal\";\nimport { useAccountState } from \"providers/account\";\nimport {\n  useGoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { PAYMENT_ACCOUNT, reportError } from \"utils\";\n\nconst origin = window.location.origin;\nconst USE_TORUS_TESTNET = origin === \"http://localhost:3000\";\n\n// Torus is only enabled for authorized domains\nconst ENABLE_TORUS =\n  USE_TORUS_TESTNET ||\n  origin === \"https://break.solana.com\" ||\n  origin === \"https://staging.break.solana.com\";\n\ntype NodeDetails = {\n  torusNodeEndpoints: any;\n  torusIndexes: any;\n  torusNodePub: any;\n};\n\nconst CLIENT_ID =\n  \"785716588020-b5a4fheugq38c23do3p2l73iumfrklnr.apps.googleusercontent.com\";\nconst TEST_CLIENT_ID =\n  \"785716588020-p8kdid1dltqsafcl23g82fb9funikaj7.apps.googleusercontent.com\";\nconst VERIFIER = \"breaksolana-google\";\n\nconst NODE_DETAILS = USE_TORUS_TESTNET\n  ? new NodeDetailsManager({\n      network: \"ropsten\",\n      proxyAddress: \"0x4023d2a0D330bF11426B12C6144Cfb96B7fa6183\",\n    })\n  : (new (NodeDetailsManager as any)() as NodeDetailsManager);\n\ntype GoogleStatus = \"cached\" | \"fresh\";\nexport default function Setup() {\n  const [account, setAccount] = useAccountState();\n  const [googleStatus, setGoogleStatus] = React.useState<GoogleStatus>();\n  const [googleResponse, setGoogleResponse] = React.useState<\n    GoogleLoginResponse\n  >();\n  const [nodeDetails, setNodeDetails] = React.useState<NodeDetails>();\n  const history = useHistory();\n  const location = useLocation();\n  const [error, setError] = React.useState(\"\");\n\n  const responseGoogle = React.useCallback(\n    async (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n      if (!(\"code\" in response)) {\n        setGoogleResponse(response);\n      }\n    },\n    []\n  );\n\n  const disconnectGoogle = React.useCallback(() => {\n    if (!googleResponse) return;\n    googleResponse.disconnect();\n    setGoogleResponse(undefined);\n  }, [googleResponse]);\n\n  const { signIn, loaded } = useGoogleLogin({\n    clientId: USE_TORUS_TESTNET ? TEST_CLIENT_ID : CLIENT_ID,\n    onSuccess: responseGoogle,\n    onFailure: (err) => {\n      if (!ENABLE_TORUS) return;\n      reportError(err, \"Google login failed\");\n      setGoogleStatus(undefined);\n      setError(\"Failed to login\");\n    },\n    isSignedIn: ENABLE_TORUS,\n  });\n\n  const onSignIn = React.useCallback(\n    (status: GoogleStatus) => {\n      setGoogleStatus(status);\n      if (status === \"fresh\") {\n        disconnectGoogle();\n        signIn();\n      }\n    },\n    [disconnectGoogle, signIn]\n  );\n\n  React.useEffect(() => {\n    if (!ENABLE_TORUS) return;\n\n    let unmounted = false;\n    NODE_DETAILS.getNodeDetails()\n      .then((details) => {\n        !unmounted && setNodeDetails(details);\n      })\n      .catch((err) => {\n        reportError(err, \"Fetching torus node details\");\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!nodeDetails || !googleResponse || !googleStatus) return;\n\n    let unmounted = false;\n    (async () => {\n      const torus = new Torus({});\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = nodeDetails;\n\n      try {\n        const verifierId = googleResponse.getBasicProfile().getEmail();\n\n        // Creates a new key for the verifierId if it doesn't exist yet\n        await torus.getPublicAddress(\n          torusNodeEndpoints,\n          torusNodePub,\n          { verifier: VERIFIER, verifierId },\n          false\n        );\n\n        let idToken = googleResponse.getAuthResponse().id_token;\n        if (googleStatus === \"cached\") {\n          idToken = (await googleResponse.reloadAuthResponse()).id_token;\n        }\n\n        const { privKey } = await torus.retrieveShares(\n          torusNodeEndpoints,\n          torusIndexes,\n          VERIFIER,\n          { verifier_id: verifierId },\n          idToken\n        );\n        if (unmounted) return;\n        const torusKey = Buffer.from(privKey.toString(), \"hex\");\n        const keyPair = nacl.sign.keyPair.fromSeed(torusKey);\n        setAccount(new Account(keyPair.secretKey));\n      } catch (err) {\n        reportError(err, \"failed to fetch torus key\");\n        setGoogleStatus(undefined);\n        setError(\"Failed to fetch Torus key\");\n      }\n    })();\n\n    return () => {\n      unmounted = true;\n    };\n  }, [nodeDetails, googleResponse, googleStatus, setAccount]);\n\n  React.useEffect(() => {\n    if (account) {\n      history.push({ ...location, pathname: \"/game\" });\n    }\n  }, [account, history, location]);\n\n  const loadingWallet = !!googleResponse;\n  const showWalletSetup = loaded && !googleStatus;\n  const showLoading = !showWalletSetup;\n  return (\n    <>\n      <div className={`modal z-auto fade${showWalletSetup ? \" show\" : \"\"}`}>\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-card card mb-0\">\n              <div className=\"card-header\">\n                <div className=\"flex-shrink-0 flex-basis-auto\">\n                  Select Wallet\n                </div>\n                <div className=\"text-truncate text-warning small ml-5\">\n                  {error}\n                </div>\n              </div>\n\n              <div className=\"card-body\">\n                <ul className=\"list-group list-group-flush list my-n4\">\n                  {googleResponse && (\n                    <li className=\"list-group-item\">\n                      <div className=\"row align-items-center\">\n                        <div className=\"col\">\n                          <h4 className=\"mb-1\">Current wallet</h4>\n                          <p className=\"small mb-0 text-muted\">\n                            Account:{\" \"}\n                            <span className=\"text-primary\">\n                              {googleResponse.getBasicProfile().getEmail()}\n                            </span>\n                          </p>\n                        </div>\n                        <div className=\"col-auto\">\n                          <span\n                            className=\"btn btn-primary\"\n                            onClick={() => onSignIn(\"cached\")}\n                          >\n                            Select\n                          </span>\n                        </div>\n                      </div>\n                    </li>\n                  )}\n\n                  {ENABLE_TORUS && (\n                    <li className=\"list-group-item\">\n                      <div className=\"row align-items-center\">\n                        <div className=\"col\">\n                          <h4 className=\"mb-1\">Recoverable wallet</h4>\n                          <p className=\"small mb-0 text-muted\">\n                            Powered by <a href=\"https://tor.us/\">Torus</a>\n                          </p>\n                        </div>\n                        <div className=\"col-auto\">\n                          <span\n                            className=\"btn btn-white\"\n                            onClick={() => onSignIn(\"fresh\")}\n                          >\n                            <img\n                              height=\"18\"\n                              width=\"18\"\n                              src=\"/google.svg\"\n                              className=\"mt-n1\"\n                              alt=\"Google\"\n                            />\n                          </span>\n                        </div>\n                      </div>\n                    </li>\n                  )}\n\n                  <li className=\"list-group-item\">\n                    <div className=\"row align-items-center\">\n                      <div className=\"col\">\n                        <h4 className=\"mb-1\">Local wallet</h4>\n                        <p className=\"small mb-0 text-muted\">\n                          Saved to browser storage\n                        </p>\n                      </div>\n                      <div className=\"col-auto\">\n                        <span\n                          className=\"btn btn-white\"\n                          onClick={() => {\n                            disconnectGoogle();\n                            setAccount(PAYMENT_ACCOUNT);\n                          }}\n                        >\n                          Select\n                        </span>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container min-vh-100 d-flex flex-column\">\n        <Header />\n      </div>\n      <LoadingModal show={showLoading} wallet={loadingWallet} />\n      <Overlay show={showLoading} />\n    </>\n  );\n}\n\nfunction Overlay({ show }: { show: boolean }) {\n  if (show) return <div className=\"modal-backdrop fade show\"></div>;\n  return <div className=\"fade\"></div>;\n}\n"]},"metadata":{},"sourceType":"module"}