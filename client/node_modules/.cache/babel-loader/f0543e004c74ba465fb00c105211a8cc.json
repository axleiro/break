{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jstarry/Workspace/solana/break/client/src/providers/game.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport { useConfig, useAccounts, useIsFetching } from \"providers/server/http\";\nimport { useSocket } from \"providers/server/socket\";\nimport { useBlockhash } from \"providers/rpc/blockhash\";\nimport { useConnection } from \"./rpc\";\nexport const COUNTDOWN_SECS = 1500;\nconst GameStateContext = /*#__PURE__*/React.createContext(undefined);\nconst CountdownContext = /*#__PURE__*/React.createContext(undefined);\nexport function GameStateProvider({\n  children\n}) {\n  _s();\n\n  const [countdown, setCountdown] = React.useState();\n  const [gameState, setGameState] = React.useState(\"loading\");\n  const resultsTimerRef = React.useRef();\n  const connection = useConnection();\n  const history = useHistory();\n  const location = useLocation();\n  const blockhash = useBlockhash();\n  const config = useConfig();\n  const accounts = useAccounts();\n  const socket = useSocket();\n  const isResultsRoute = !!useRouteMatch(\"/results\");\n  const isGameRoute = !!useRouteMatch(\"/game\");\n  const isFetching = useIsFetching();\n  React.useEffect(() => {\n    setCountdown(undefined);\n  }, [isGameRoute, connection]);\n  React.useEffect(() => {\n    const paymentRequired = (config === null || config === void 0 ? void 0 : config.paymentRequired) === true;\n    const needsPayment = paymentRequired && !isFetching && !accounts;\n    const doneLoading = blockhash && config && socket && (needsPayment || accounts);\n\n    if (!doneLoading) {\n      setGameState(\"loading\");\n    } else if (needsPayment) {\n      setGameState(\"payment\");\n    } else {\n      setGameState(gameState => {\n        if (gameState === \"loading\" || gameState === \"payment\") {\n          return isResultsRoute ? \"reset\" : \"play\";\n        }\n\n        return gameState;\n      });\n    }\n  }, [isResultsRoute, isFetching, blockhash, config, accounts, socket]);\n  React.useEffect(() => {\n    if (countdown !== undefined) {\n      if (!resultsTimerRef.current) {\n        resultsTimerRef.current = setTimeout(() => {\n          setGameState(\"reset\");\n          history.push({ ...location,\n            pathname: \"/results\"\n          });\n        }, COUNTDOWN_SECS * 1000);\n      }\n    } else if (resultsTimerRef.current) {\n      clearTimeout(resultsTimerRef.current);\n      resultsTimerRef.current = undefined;\n    }\n  }, [countdown, history, location]);\n  const countdownState = React.useMemo(() => {\n    return [countdown, setCountdown];\n  }, [countdown]);\n  return /*#__PURE__*/_jsxDEV(GameStateContext.Provider, {\n    value: gameState,\n    children: /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n      value: countdownState,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameStateProvider, \"/V57j7yK3ybk8H6y+EzG5sSJ9sQ=\", false, function () {\n  return [useConnection, useHistory, useLocation, useBlockhash, useConfig, useAccounts, useSocket, useRouteMatch, useRouteMatch, useIsFetching];\n});\n\n_c = GameStateProvider;\nexport function useGameState() {\n  _s2();\n\n  const context = React.useContext(GameStateContext);\n\n  if (!context) {\n    throw new Error(`useGameState must be used within a GameStateProvider`);\n  }\n\n  return context;\n}\n\n_s2(useGameState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useCountdown() {\n  _s3();\n\n  const context = React.useContext(CountdownContext);\n\n  if (!context) {\n    throw new Error(`useCountdown must be used within a GameStateProvider`);\n  }\n\n  return context;\n}\n\n_s3(useCountdown, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GameStateProvider\");","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/game.tsx"],"names":["React","useHistory","useRouteMatch","useLocation","useConfig","useAccounts","useIsFetching","useSocket","useBlockhash","useConnection","COUNTDOWN_SECS","GameStateContext","createContext","undefined","CountdownContext","GameStateProvider","children","countdown","setCountdown","useState","gameState","setGameState","resultsTimerRef","useRef","connection","history","location","blockhash","config","accounts","socket","isResultsRoute","isGameRoute","isFetching","useEffect","paymentRequired","needsPayment","doneLoading","current","setTimeout","push","pathname","clearTimeout","countdownState","useMemo","useGameState","context","useContext","Error","useCountdown"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport {\n  useConfig,\n  useRefreshAccounts,\n  useAccounts,\n  useIsFetching,\n  useClearAccounts,\n} from \"providers/server/http\";\nimport { useSocket } from \"providers/server/socket\";\nimport { useBlockhash } from \"providers/rpc/blockhash\";\nimport { useDispatch } from \"providers/transactions\";\nimport { useConnection } from \"./rpc\";\n\nexport const COUNTDOWN_SECS = 1500;\n\ntype GameState = \"loading\" | \"payment\" | \"play\" | \"reset\";\nconst GameStateContext = React.createContext<GameState | undefined>(undefined);\n\ntype SetCountdown = React.Dispatch<React.SetStateAction<number | undefined>>;\ntype CountdownState = [number | undefined, SetCountdown];\nconst CountdownContext = React.createContext<CountdownState | undefined>(\n  undefined\n);\n\ntype Props = { children: React.ReactNode };\nexport function GameStateProvider({ children }: Props) {\n  const [countdown, setCountdown] = React.useState<number>();\n  const [gameState, setGameState] = React.useState<GameState>(\"loading\");\n  const resultsTimerRef = React.useRef<NodeJS.Timer>();\n  const connection = useConnection();\n  const history = useHistory();\n  const location = useLocation();\n  const blockhash = useBlockhash();\n  const config = useConfig();\n  const accounts = useAccounts();\n  const socket = useSocket();\n  const isResultsRoute = !!useRouteMatch(\"/results\");\n  const isGameRoute = !!useRouteMatch(\"/game\");\n  const isFetching = useIsFetching();\n\n  React.useEffect(() => {\n    setCountdown(undefined);\n  }, [isGameRoute, connection]);\n\n  React.useEffect(() => {\n    const paymentRequired = config?.paymentRequired === true;\n    const needsPayment = paymentRequired && !isFetching && !accounts;\n    const doneLoading =\n      blockhash && config && socket && (needsPayment || accounts);\n    if (!doneLoading) {\n      setGameState(\"loading\");\n    } else if (needsPayment) {\n      setGameState(\"payment\");\n    } else {\n      setGameState((gameState) => {\n        if (gameState === \"loading\" || gameState === \"payment\") {\n          return isResultsRoute ? \"reset\" : \"play\";\n        }\n        return gameState;\n      });\n    }\n  }, [isResultsRoute, isFetching, blockhash, config, accounts, socket]);\n\n  React.useEffect(() => {\n    if (countdown !== undefined) {\n      if (!resultsTimerRef.current) {\n        resultsTimerRef.current = setTimeout(() => {\n          setGameState(\"reset\");\n          history.push({ ...location, pathname: \"/results\" });\n        }, COUNTDOWN_SECS * 1000);\n      }\n    } else if (resultsTimerRef.current) {\n      clearTimeout(resultsTimerRef.current);\n      resultsTimerRef.current = undefined;\n    }\n  }, [countdown, history, location]);\n\n  const countdownState: CountdownState = React.useMemo(() => {\n    return [countdown, setCountdown];\n  }, [countdown]);\n\n  return (\n    <GameStateContext.Provider value={gameState}>\n      <CountdownContext.Provider value={countdownState}>\n        {children}\n      </CountdownContext.Provider>\n    </GameStateContext.Provider>\n  );\n}\n\nexport function useGameState() {\n  const context = React.useContext(GameStateContext);\n  if (!context) {\n    throw new Error(`useGameState must be used within a GameStateProvider`);\n  }\n  return context;\n}\n\nexport function useCountdown() {\n  const context = React.useContext(CountdownContext);\n  if (!context) {\n    throw new Error(`useCountdown must be used within a GameStateProvider`);\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}