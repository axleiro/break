{"ast":null,"code":"import { Account } from \"@solana/web3.js\";\nimport * as Sentry from \"@sentry/react\";\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function reportError(err, context) {\n  console.error(context, err);\n\n  if (process.env.NODE_ENV === \"production\") {\n    Sentry.captureException(err, {\n      tags: {\n        context\n      }\n    });\n  }\n}\nexport function isLocalHost() {\n  return window.location.hostname === \"localhost\";\n}\nexport const PAYMENT_ACCOUNT = (() => {\n  const paymentKey = window.localStorage.getItem(\"paymentKey\");\n\n  if (paymentKey) {\n    return new Account(Buffer.from(paymentKey, \"base64\"));\n  } else {\n    const paymentAccount = new Account();\n    window.localStorage.setItem(\"paymentKey\", Buffer.from(paymentAccount.secretKey).toString(\"base64\"));\n    return paymentAccount;\n  }\n})();","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/utils/index.ts"],"names":["Account","Sentry","sleep","ms","Promise","resolve","setTimeout","reportError","err","context","console","error","process","env","NODE_ENV","captureException","tags","isLocalHost","window","location","hostname","PAYMENT_ACCOUNT","paymentKey","localStorage","getItem","Buffer","from","paymentAccount","setItem","secretKey","toString"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,EAAf,EAA0C;AAC/C,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD;AAED,OAAO,SAASI,WAAT,CAAqBC,GAArB,EAAiCC,OAAjC,EAAkD;AACvDC,EAAAA,OAAO,CAACC,KAAR,CAAcF,OAAd,EAAuBD,GAAvB;;AACA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCb,IAAAA,MAAM,CAACc,gBAAP,CAAwBP,GAAxB,EAA6B;AAC3BQ,MAAAA,IAAI,EAAE;AAAEP,QAAAA;AAAF;AADqB,KAA7B;AAGD;AACF;AAED,OAAO,SAASQ,WAAT,GAAuB;AAC5B,SAAOC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAApC;AACD;AAED,OAAO,MAAMC,eAAe,GAAG,CAAC,MAAM;AACpC,QAAMC,UAAU,GAAGJ,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAnB;;AACA,MAAIF,UAAJ,EAAgB;AACd,WAAO,IAAItB,OAAJ,CAAYyB,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwB,QAAxB,CAAZ,CAAP;AACD,GAFD,MAEO;AACL,UAAMK,cAAc,GAAG,IAAI3B,OAAJ,EAAvB;AACAkB,IAAAA,MAAM,CAACK,YAAP,CAAoBK,OAApB,CACE,YADF,EAEEH,MAAM,CAACC,IAAP,CAAYC,cAAc,CAACE,SAA3B,EAAsCC,QAAtC,CAA+C,QAA/C,CAFF;AAIA,WAAOH,cAAP;AACD;AACF,CAZ8B,GAAxB","sourcesContent":["import { Account } from \"@solana/web3.js\";\nimport * as Sentry from \"@sentry/react\";\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function reportError(err: Error, context: string) {\n  console.error(context, err);\n  if (process.env.NODE_ENV === \"production\") {\n    Sentry.captureException(err, {\n      tags: { context },\n    });\n  }\n}\n\nexport function isLocalHost() {\n  return window.location.hostname === \"localhost\";\n}\n\nexport const PAYMENT_ACCOUNT = (() => {\n  const paymentKey = window.localStorage.getItem(\"paymentKey\");\n  if (paymentKey) {\n    return new Account(Buffer.from(paymentKey, \"base64\"));\n  } else {\n    const paymentAccount = new Account();\n    window.localStorage.setItem(\n      \"paymentKey\",\n      Buffer.from(paymentAccount.secretKey).toString(\"base64\")\n    );\n    return paymentAccount;\n  }\n})();\n"]},"metadata":{},"sourceType":"module"}