{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as React from\"react\";import{useThrottle}from\"@react-hook/throttle\";import{ConfirmedHelper,DEBUG_MODE}from\"./confirmed\";import{TpsProvider,TpsContext}from\"./tps\";import{CreateTxContext,CreateTxProvider}from\"./create\";import{SelectedTxProvider}from\"./selected\";import{useConnection}from\"providers/rpc\";import{useSlotTiming}from\"providers/slot\";import{jsx as _jsx}from\"react/jsx-runtime\";export var COMMITMENT_PARAM=function(){var commitment=new URLSearchParams(window.location.search).get(\"commitment\");switch(commitment){case\"recent\":{return commitment;}default:{return\"singleGossip\";}}}();export var getCommitmentName=function getCommitmentName(commitment){if(commitment===\"singleGossip\"){return\"confirmed\";}else{return\"processed\";}};function reducer(state,action){switch(action.type){case\"new\":{var details=action.details,pendingTransaction=action.pendingTransaction;return[].concat(_toConsumableArray(state),[{details:details,status:\"pending\",received:[],pending:pendingTransaction,timing:{}}]);}case\"subscribed\":{var trackingId=action.trackingId;if(trackingId>=state.length)return state;var transaction=state[trackingId];return state.map(function(tx){if(tx.details.signature===transaction.details.signature){if(tx.status!==\"timeout\"){return _objectSpread(_objectSpread({},tx),{},{timing:_objectSpread(_objectSpread({},tx.timing),{},{subscribed:action.timestamp})});}}return tx;});}case\"received\":{var _trackingId=action.trackingId;if(_trackingId>=state.length)return state;var _transaction=state[_trackingId];return state.map(function(tx){if(tx.details.signature===_transaction.details.signature){if(tx.status!==\"timeout\"){return _objectSpread(_objectSpread({},tx),{},{received:[].concat(_toConsumableArray(tx.received),[{slot:action.slot,timestamp:action.timestamp}])});}}return tx;});}case\"landed\":{return state.map(function(tx){if(tx.status===\"success\"){var index=action.signatures.findIndex(function(val){return val===tx.details.signature;});if(index>=0){return _objectSpread(_objectSpread({},tx),{},{slot:_objectSpread(_objectSpread({},tx.slot),{},{landed:action.slots[index]})});}}return tx;});}case\"track\":{var _trackingId2=action.trackingId;if(_trackingId2>=state.length)return state;var _transaction2=state[_trackingId2];return state.map(function(tx){if(tx.details.signature===_transaction2.details.signature){if(tx.status===\"pending\"){return{status:\"success\",details:tx.details,received:tx.received,slot:{target:tx.pending.targetSlot},timing:_objectSpread(_objectSpread({},tx.timing),{},_defineProperty({},action.commitmentName,action.timestamp)),pending:tx.pending};}else if(tx.status===\"success\"){return _objectSpread(_objectSpread({},tx),{},{timing:_objectSpread(_objectSpread({},tx.timing),{},_defineProperty({},action.commitmentName,action.timestamp))});}}return tx;});}case\"timeout\":{var _trackingId3=action.trackingId;if(_trackingId3>=state.length)return state;var timeout=state[_trackingId3];if(timeout.status!==\"pending\")return state;clearInterval(timeout.pending.retryId);return state.map(function(tx){if(tx.details.signature===timeout.details.signature){return{status:\"timeout\",details:tx.details};}else{return tx;}});}case\"update\":{var _action$activeIdParti=action.activeIdPartition,ids=_action$activeIdParti.ids,partition=_action$activeIdParti.partition,partitionCount=_action$activeIdParti.partitionCount;return state.map(function(tx,trackingId){if(trackingId%partitionCount!==partition)return tx;var id=Math.floor(trackingId/partitionCount);if(tx.status===\"pending\"&&ids.has(id)){// Optimistically confirmed, no need to continue retry\nif(action.commitment===\"singleGossip\"){clearInterval(tx.pending.retryId);clearTimeout(tx.pending.timeoutId);}var commitmentName=getCommitmentName(action.commitment);return{status:\"success\",details:tx.details,received:tx.received,slot:{target:tx.pending.targetSlot,landed:action.estimatedSlot},timing:_objectSpread(_objectSpread({},tx.timing),{},_defineProperty({},commitmentName,timeElapsed(tx.timing.subscribed,action.receivedAt))),pending:tx.pending};}else if(tx.status===\"success\"){if(ids.has(id)){var _commitmentName=getCommitmentName(action.commitment);// Already recorded conf time\nif(tx.timing[_commitmentName]!==undefined){return tx;}// Optimistically confirmed, no need to continue retry\nif(tx.pending&&action.commitment===\"singleGossip\"){clearInterval(tx.pending.retryId);clearTimeout(tx.pending.timeoutId);}return _objectSpread(_objectSpread({},tx),{},{timing:_objectSpread(_objectSpread({},tx.timing),{},_defineProperty({},_commitmentName,timeElapsed(tx.timing.subscribed,action.receivedAt)))});}else if(action.commitment===\"recent\"&&tx.pending&&!ids.has(id)){// Don't revert to pending state if we already received timing info for other commitments\nif(tx.timing[\"confirmed\"]!==undefined){return _objectSpread(_objectSpread({},tx),{},{timing:_objectSpread(_objectSpread({},tx.timing),{},{processed:undefined})});}// Revert to pending state because the previous notification likely came from a fork\nreturn{status:\"pending\",details:tx.details,received:tx.received,pending:_objectSpread({},tx.pending),timing:tx.timing};}}return tx;});}case\"reset\":{state.forEach(function(tx){if(tx.status===\"pending\"){clearTimeout(tx.pending.timeoutId);clearInterval(tx.pending.retryId);}else if(tx.status===\"success\"&&tx.pending){clearTimeout(tx.pending.timeoutId);clearInterval(tx.pending.retryId);}});return[];}case\"root\":{var foundRooted=state.find(function(tx){if(tx.status===\"success\"&&tx.pending){return tx.slot.landed===action.root;}else{return false;}});// Avoid re-allocating state map\nif(!foundRooted)return state;return state.map(function(tx){if(tx.status===\"success\"&&tx.pending){if(tx.slot.landed===action.root){clearInterval(tx.pending.retryId);clearTimeout(tx.pending.timeoutId);return _objectSpread(_objectSpread({},tx),{},{pending:undefined});}}return tx;});}}}var StateContext=/*#__PURE__*/React.createContext(undefined);var DispatchContext=/*#__PURE__*/React.createContext(undefined);export function TransactionsProvider(_ref){var children=_ref.children;var _React$useReducer=React.useReducer(reducer,[]),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];var connection=useConnection();var stateRef=React.useRef(state);React.useEffect(function(){stateRef.current=state;},[state]);React.useEffect(function(){dispatch({type:\"reset\"});if(connection===undefined)return;var rootSubscription=connection.onRootChange(function(root){dispatch({type:\"root\",root:root});});// Poll for signature statuses to determine which slot a tx landed in\nvar intervalId=DEBUG_MODE?setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchStatuses,slots,signatures,statuses,i,status;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetchStatuses=[];stateRef.current.forEach(function(tx){if(tx.status===\"success\"&&tx.slot.landed===undefined){fetchStatuses.push(tx.details.signature);}});if(!(fetchStatuses.length===0)){_context.next=4;break;}return _context.abrupt(\"return\");case 4:slots=[];signatures=[];_context.next=8;return connection.getSignatureStatuses(fetchStatuses);case 8:statuses=_context.sent.value;for(i=0;i<statuses.length;i++){status=statuses[i];if(status!==null){slots.push(status.slot);signatures.push(fetchStatuses[i]);}}if(!(slots.length===0)){_context.next=12;break;}return _context.abrupt(\"return\");case 12:dispatch({type:\"landed\",slots:slots,signatures:signatures});case 13:case\"end\":return _context.stop();}}},_callee);})),2000):undefined;return function(){connection.removeRootChangeListener(rootSubscription);intervalId!==undefined&&clearInterval(intervalId);};},[connection]);var _useThrottle=useThrottle(state,10),_useThrottle2=_slicedToArray(_useThrottle,2),throttledState=_useThrottle2[0],setThrottledState=_useThrottle2[1];React.useEffect(function(){setThrottledState(state);},[state,setThrottledState]);return/*#__PURE__*/_jsx(StateContext.Provider,{value:throttledState,children:/*#__PURE__*/_jsx(DispatchContext.Provider,{value:dispatch,children:/*#__PURE__*/_jsx(SelectedTxProvider,{children:/*#__PURE__*/_jsx(CreateTxProvider,{children:/*#__PURE__*/_jsx(ConfirmedHelper,{children:/*#__PURE__*/_jsx(TpsProvider,{children:children})})})})})});}function timeElapsed(sentAt,receivedAt){if(sentAt===undefined||receivedAt===undefined)return;return parseFloat(((receivedAt-sentAt)/1000).toFixed(3));}export function useDispatch(){var dispatch=React.useContext(DispatchContext);if(!dispatch){throw new Error(\"useDispatch must be used within a TransactionsProvider\");}return dispatch;}export function useTransactions(){var state=React.useContext(StateContext);if(!state){throw new Error(\"useTransactions must be used within a TransactionsProvider\");}return state;}export function useConfirmedCount(){var state=React.useContext(StateContext);if(!state){throw new Error(\"useConfirmedCount must be used within a TransactionsProvider\");}return state.filter(function(_ref3){var status=_ref3.status;return status===\"success\";}).length;}export function useDroppedCount(){var state=React.useContext(StateContext);if(!state){throw new Error(\"useDroppedCount must be used within a TransactionsProvider\");}return state.filter(function(_ref4){var status=_ref4.status;return status===\"timeout\";}).length;}export function useAvgConfirmationTime(){var slotMetrics=useSlotTiming();var state=React.useContext(StateContext);if(!state){throw new Error(\"useAvgConfirmationTime must be used within a TransactionsProvider\");}var confirmedTimes=state.reduce(function(confirmedTimes,tx){if(tx.status===\"success\"){var subscribed=tx.timing.subscribed;if(subscribed!==undefined&&tx.slot.landed!==undefined){var slotTiming=slotMetrics.current.get(tx.slot.landed);var confirmed=slotTiming===null||slotTiming===void 0?void 0:slotTiming.confirmed;var confTime=timeElapsed(subscribed,confirmed);if(confTime)confirmedTimes.push(confTime);}}return confirmedTimes;},[]);var count=confirmedTimes.length;if(count===0)return 0;var sum=confirmedTimes.reduce(function(sum,time){return sum+time;},0);return sum/count;}export function useCreatedCount(){var state=React.useContext(StateContext);if(!state){throw new Error(\"useCreatedCount must be used within a TransactionsProvider\");}return state.length;}export function useTps(){var tps=React.useContext(TpsContext);if(tps===undefined)throw new Error(\"useTps must be used within a TransactionsProvider\");return tps;}export function useCreateTxRef(){var createTxRef=React.useContext(CreateTxContext);if(createTxRef===undefined)throw new Error(\"useCreateTxRef must be used within a TransactionsProvider\");return createTxRef;}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/transactions/index.tsx"],"names":["React","useThrottle","ConfirmedHelper","DEBUG_MODE","TpsProvider","TpsContext","CreateTxContext","CreateTxProvider","SelectedTxProvider","useConnection","useSlotTiming","COMMITMENT_PARAM","commitment","URLSearchParams","window","location","search","get","getCommitmentName","reducer","state","action","type","details","pendingTransaction","status","received","pending","timing","trackingId","length","transaction","map","tx","signature","subscribed","timestamp","slot","index","signatures","findIndex","val","landed","slots","target","targetSlot","commitmentName","timeout","clearInterval","retryId","activeIdPartition","ids","partition","partitionCount","id","Math","floor","has","clearTimeout","timeoutId","estimatedSlot","timeElapsed","receivedAt","undefined","processed","forEach","foundRooted","find","root","StateContext","createContext","DispatchContext","TransactionsProvider","children","useReducer","dispatch","connection","stateRef","useRef","useEffect","current","rootSubscription","onRootChange","intervalId","setInterval","fetchStatuses","push","getSignatureStatuses","statuses","value","i","removeRootChangeListener","throttledState","setThrottledState","sentAt","parseFloat","toFixed","useDispatch","useContext","Error","useTransactions","useConfirmedCount","filter","useDroppedCount","useAvgConfirmationTime","slotMetrics","confirmedTimes","reduce","slotTiming","confirmed","confTime","count","sum","time","useCreatedCount","useTps","tps","useCreateTxRef","createTxRef"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useThrottle } from \"@react-hook/throttle\";\nimport { TransactionSignature, PublicKey } from \"@solana/web3.js\";\nimport { ConfirmedHelper, DEBUG_MODE } from \"./confirmed\";\nimport { TpsProvider, TpsContext } from \"./tps\";\nimport { CreateTxContext, CreateTxProvider } from \"./create\";\nimport { SelectedTxProvider } from \"./selected\";\nimport { useConnection } from \"providers/rpc\";\nimport { useSlotTiming } from \"providers/slot\";\n\nexport type ReceivedRecord = {\n  timestamp: number;\n  slot: number;\n};\n\nexport type PendingTransaction = {\n  targetSlot: number;\n  retryId?: number;\n  timeoutId?: number;\n};\n\nexport type TransactionDetails = {\n  id: number;\n  feeAccount: PublicKey;\n  programAccount: PublicKey;\n  signature: TransactionSignature;\n};\n\ntype Timing = {\n  subscribed?: number;\n  processed?: number;\n  confirmed?: number;\n};\n\ntype TimeoutState = {\n  status: \"timeout\";\n  details: TransactionDetails;\n};\n\ntype PendingState = {\n  status: \"pending\";\n  details: TransactionDetails;\n  received: Array<ReceivedRecord>;\n  pending: PendingTransaction;\n  timing: Timing;\n};\n\ntype SuccessState = {\n  status: \"success\";\n  details: TransactionDetails;\n  received: Array<ReceivedRecord>;\n  slot: {\n    target: number;\n    landed?: number;\n  };\n  timing: Timing;\n  pending?: PendingTransaction;\n};\n\nexport const COMMITMENT_PARAM = ((): TrackedCommitment => {\n  const commitment = new URLSearchParams(window.location.search).get(\n    \"commitment\"\n  );\n  switch (commitment) {\n    case \"recent\": {\n      return commitment;\n    }\n    default: {\n      return \"singleGossip\";\n    }\n  }\n})();\n\nexport const getCommitmentName = (\n  commitment: TrackedCommitment\n): CommitmentName => {\n  if (commitment === \"singleGossip\") {\n    return \"confirmed\";\n  } else {\n    return \"processed\";\n  }\n};\n\nexport type CommitmentName = \"processed\" | \"confirmed\";\n\nexport type TrackedCommitment = \"singleGossip\" | \"recent\";\n\nexport type TransactionStatus = \"success\" | \"timeout\" | \"pending\";\n\nexport type TransactionState = SuccessState | TimeoutState | PendingState;\n\ntype NewTransaction = {\n  type: \"new\";\n  trackingId: number;\n  details: TransactionDetails;\n  pendingTransaction: PendingTransaction;\n};\n\ntype UpdateIds = {\n  type: \"update\";\n  activeIdPartition: {\n    ids: Set<number>;\n    partition: number;\n    partitionCount: number;\n  };\n  commitment: TrackedCommitment;\n  receivedAt: number;\n  estimatedSlot: number;\n};\n\ntype TrackTransaction = {\n  type: \"track\";\n  commitmentName: CommitmentName;\n  trackingId: number;\n  slot: number;\n  timestamp: number;\n};\n\ntype TimeoutTransaction = {\n  type: \"timeout\";\n  trackingId: number;\n};\n\ntype ResetState = {\n  type: \"reset\";\n};\n\ntype RecordRoot = {\n  type: \"root\";\n  root: number;\n};\n\ntype SignatureReceived = {\n  type: \"received\";\n  timestamp: number;\n  trackingId: number;\n  slot: number;\n};\n\ntype SignatureSubscribed = {\n  type: \"subscribed\";\n  timestamp: number;\n  trackingId: number;\n  slot: number;\n};\n\ntype SignatureLanded = {\n  type: \"landed\";\n  signatures: TransactionSignature[];\n  slots: number[];\n};\n\ntype Action =\n  | NewTransaction\n  | UpdateIds\n  | TimeoutTransaction\n  | ResetState\n  | RecordRoot\n  | TrackTransaction\n  | SignatureReceived\n  | SignatureSubscribed\n  | SignatureLanded;\n\ntype State = TransactionState[];\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"new\": {\n      const { details, pendingTransaction } = action;\n      return [\n        ...state,\n        {\n          details,\n          status: \"pending\",\n          received: [],\n          pending: pendingTransaction,\n          timing: {},\n        },\n      ];\n    }\n\n    case \"subscribed\": {\n      const trackingId = action.trackingId;\n      if (trackingId >= state.length) return state;\n      const transaction = state[trackingId];\n      return state.map((tx) => {\n        if (tx.details.signature === transaction.details.signature) {\n          if (tx.status !== \"timeout\") {\n            return {\n              ...tx,\n              timing: {\n                ...tx.timing,\n                subscribed: action.timestamp,\n              },\n            };\n          }\n        }\n        return tx;\n      });\n    }\n\n    case \"received\": {\n      const trackingId = action.trackingId;\n      if (trackingId >= state.length) return state;\n      const transaction = state[trackingId];\n      return state.map((tx) => {\n        if (tx.details.signature === transaction.details.signature) {\n          if (tx.status !== \"timeout\") {\n            return {\n              ...tx,\n              received: [\n                ...tx.received,\n                {\n                  slot: action.slot,\n                  timestamp: action.timestamp,\n                },\n              ],\n            };\n          }\n        }\n        return tx;\n      });\n    }\n\n    case \"landed\": {\n      return state.map((tx) => {\n        if (tx.status === \"success\") {\n          const index = action.signatures.findIndex(\n            (val) => val === tx.details.signature\n          );\n          if (index >= 0) {\n            return {\n              ...tx,\n              slot: {\n                ...tx.slot,\n                landed: action.slots[index],\n              },\n            };\n          }\n        }\n        return tx;\n      });\n    }\n\n    case \"track\": {\n      const trackingId = action.trackingId;\n      if (trackingId >= state.length) return state;\n      const transaction = state[trackingId];\n\n      return state.map((tx) => {\n        if (tx.details.signature === transaction.details.signature) {\n          if (tx.status === \"pending\") {\n            return {\n              status: \"success\",\n              details: tx.details,\n              received: tx.received,\n              slot: {\n                target: tx.pending.targetSlot,\n              },\n              timing: {\n                ...tx.timing,\n                [action.commitmentName]: action.timestamp,\n              },\n              pending: tx.pending,\n            };\n          } else if (tx.status === \"success\") {\n            return {\n              ...tx,\n              timing: {\n                ...tx.timing,\n                [action.commitmentName]: action.timestamp,\n              },\n            };\n          }\n        }\n        return tx;\n      });\n    }\n\n    case \"timeout\": {\n      const trackingId = action.trackingId;\n      if (trackingId >= state.length) return state;\n      const timeout = state[trackingId];\n      if (timeout.status !== \"pending\") return state;\n      clearInterval(timeout.pending.retryId);\n\n      return state.map((tx) => {\n        if (tx.details.signature === timeout.details.signature) {\n          return {\n            status: \"timeout\",\n            details: tx.details,\n          };\n        } else {\n          return tx;\n        }\n      });\n    }\n\n    case \"update\": {\n      const { ids, partition, partitionCount } = action.activeIdPartition;\n      return state.map((tx, trackingId) => {\n        if (trackingId % partitionCount !== partition) return tx;\n        const id = Math.floor(trackingId / partitionCount);\n        if (tx.status === \"pending\" && ids.has(id)) {\n          // Optimistically confirmed, no need to continue retry\n          if (action.commitment === \"singleGossip\") {\n            clearInterval(tx.pending.retryId);\n            clearTimeout(tx.pending.timeoutId);\n          }\n\n          const commitmentName = getCommitmentName(action.commitment);\n          return {\n            status: \"success\",\n            details: tx.details,\n            received: tx.received,\n            slot: {\n              target: tx.pending.targetSlot,\n              landed: action.estimatedSlot,\n            },\n            timing: {\n              ...tx.timing,\n              [commitmentName]: timeElapsed(\n                tx.timing.subscribed,\n                action.receivedAt\n              ),\n            },\n            pending: tx.pending,\n          };\n        } else if (tx.status === \"success\") {\n          if (ids.has(id)) {\n            const commitmentName = getCommitmentName(action.commitment);\n            // Already recorded conf time\n            if (tx.timing[commitmentName] !== undefined) {\n              return tx;\n            }\n\n            // Optimistically confirmed, no need to continue retry\n            if (tx.pending && action.commitment === \"singleGossip\") {\n              clearInterval(tx.pending.retryId);\n              clearTimeout(tx.pending.timeoutId);\n            }\n\n            return {\n              ...tx,\n              timing: {\n                ...tx.timing,\n                [commitmentName]: timeElapsed(\n                  tx.timing.subscribed,\n                  action.receivedAt\n                ),\n              },\n            };\n          } else if (\n            action.commitment === \"recent\" &&\n            tx.pending &&\n            !ids.has(id)\n          ) {\n            // Don't revert to pending state if we already received timing info for other commitments\n            if (tx.timing[\"confirmed\"] !== undefined) {\n              return {\n                ...tx,\n                timing: {\n                  ...tx.timing,\n                  processed: undefined,\n                },\n              };\n            }\n\n            // Revert to pending state because the previous notification likely came from a fork\n            return {\n              status: \"pending\",\n              details: tx.details,\n              received: tx.received,\n              pending: { ...tx.pending },\n              timing: tx.timing,\n            };\n          }\n        }\n        return tx;\n      });\n    }\n\n    case \"reset\": {\n      state.forEach((tx) => {\n        if (tx.status === \"pending\") {\n          clearTimeout(tx.pending.timeoutId);\n          clearInterval(tx.pending.retryId);\n        } else if (tx.status === \"success\" && tx.pending) {\n          clearTimeout(tx.pending.timeoutId);\n          clearInterval(tx.pending.retryId);\n        }\n      });\n      return [];\n    }\n\n    case \"root\": {\n      const foundRooted = state.find((tx) => {\n        if (tx.status === \"success\" && tx.pending) {\n          return tx.slot.landed === action.root;\n        } else {\n          return false;\n        }\n      });\n\n      // Avoid re-allocating state map\n      if (!foundRooted) return state;\n\n      return state.map((tx) => {\n        if (tx.status === \"success\" && tx.pending) {\n          if (tx.slot.landed === action.root) {\n            clearInterval(tx.pending.retryId);\n            clearTimeout(tx.pending.timeoutId);\n            return {\n              ...tx,\n              pending: undefined,\n            };\n          }\n        }\n        return tx;\n      });\n    }\n  }\n}\n\nexport type Dispatch = (action: Action) => void;\nconst StateContext = React.createContext<State | undefined>(undefined);\nconst DispatchContext = React.createContext<Dispatch | undefined>(undefined);\n\ntype ProviderProps = { children: React.ReactNode };\nexport function TransactionsProvider({ children }: ProviderProps) {\n  const [state, dispatch] = React.useReducer(reducer, []);\n  const connection = useConnection();\n  const stateRef = React.useRef(state);\n\n  React.useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"reset\",\n    });\n\n    if (connection === undefined) return;\n    const rootSubscription = connection.onRootChange((root) => {\n      dispatch({ type: \"root\", root });\n    });\n\n    // Poll for signature statuses to determine which slot a tx landed in\n    const intervalId = DEBUG_MODE\n      ? setInterval(async () => {\n          const fetchStatuses: string[] = [];\n          stateRef.current.forEach((tx) => {\n            if (tx.status === \"success\" && tx.slot.landed === undefined) {\n              fetchStatuses.push(tx.details.signature);\n            }\n          });\n\n          if (fetchStatuses.length === 0) return;\n\n          const slots: number[] = [];\n          const signatures: TransactionSignature[] = [];\n          const statuses = (\n            await connection.getSignatureStatuses(fetchStatuses)\n          ).value;\n          for (var i = 0; i < statuses.length; i++) {\n            const status = statuses[i];\n            if (status !== null) {\n              slots.push(status.slot);\n              signatures.push(fetchStatuses[i]);\n            }\n          }\n          if (slots.length === 0) return;\n          dispatch({ type: \"landed\", slots, signatures });\n        }, 2000)\n      : undefined;\n\n    return () => {\n      connection.removeRootChangeListener(rootSubscription);\n      intervalId !== undefined && clearInterval(intervalId);\n    };\n  }, [connection]);\n\n  const [throttledState, setThrottledState] = useThrottle(state, 10);\n  React.useEffect(() => {\n    setThrottledState(state);\n  }, [state, setThrottledState]);\n\n  return (\n    <StateContext.Provider value={throttledState}>\n      <DispatchContext.Provider value={dispatch}>\n        <SelectedTxProvider>\n          <CreateTxProvider>\n            <ConfirmedHelper>\n              <TpsProvider>{children}</TpsProvider>\n            </ConfirmedHelper>\n          </CreateTxProvider>\n        </SelectedTxProvider>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n}\n\nfunction timeElapsed(\n  sentAt: number | undefined,\n  receivedAt: number | undefined\n): number | undefined {\n  if (sentAt === undefined || receivedAt === undefined) return;\n  return parseFloat(((receivedAt - sentAt) / 1000).toFixed(3));\n}\n\nexport function useDispatch() {\n  const dispatch = React.useContext(DispatchContext);\n  if (!dispatch) {\n    throw new Error(`useDispatch must be used within a TransactionsProvider`);\n  }\n\n  return dispatch;\n}\n\nexport function useTransactions() {\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(\n      `useTransactions must be used within a TransactionsProvider`\n    );\n  }\n\n  return state;\n}\n\nexport function useConfirmedCount() {\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(\n      `useConfirmedCount must be used within a TransactionsProvider`\n    );\n  }\n  return state.filter(({ status }) => status === \"success\").length;\n}\n\nexport function useDroppedCount() {\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(\n      `useDroppedCount must be used within a TransactionsProvider`\n    );\n  }\n  return state.filter(({ status }) => status === \"timeout\").length;\n}\n\nexport function useAvgConfirmationTime() {\n  const slotMetrics = useSlotTiming();\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(\n      `useAvgConfirmationTime must be used within a TransactionsProvider`\n    );\n  }\n\n  const confirmedTimes = state.reduce((confirmedTimes: number[], tx) => {\n    if (tx.status === \"success\") {\n      const subscribed = tx.timing.subscribed;\n      if (subscribed !== undefined && tx.slot.landed !== undefined) {\n        const slotTiming = slotMetrics.current.get(tx.slot.landed);\n        const confirmed = slotTiming?.confirmed;\n        const confTime = timeElapsed(subscribed, confirmed);\n        if (confTime) confirmedTimes.push(confTime);\n      }\n    }\n    return confirmedTimes;\n  }, []);\n\n  const count = confirmedTimes.length;\n  if (count === 0) return 0;\n  const sum = confirmedTimes.reduce((sum, time) => sum + time, 0);\n  return sum / count;\n}\n\nexport function useCreatedCount() {\n  const state = React.useContext(StateContext);\n  if (!state) {\n    throw new Error(\n      `useCreatedCount must be used within a TransactionsProvider`\n    );\n  }\n  return state.length;\n}\n\nexport function useTps() {\n  const tps = React.useContext(TpsContext);\n  if (tps === undefined)\n    throw new Error(`useTps must be used within a TransactionsProvider`);\n  return tps;\n}\n\nexport function useCreateTxRef() {\n  const createTxRef = React.useContext(CreateTxContext);\n  if (createTxRef === undefined)\n    throw new Error(\n      `useCreateTxRef must be used within a TransactionsProvider`\n    );\n  return createTxRef;\n}\n"]},"metadata":{},"sourceType":"module"}