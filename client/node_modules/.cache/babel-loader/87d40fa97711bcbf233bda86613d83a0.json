{"ast":null,"code":"import _slicedToArray from\"/Users/jstarry/Workspace/solana/break/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";var StateContext=React.createContext(undefined);export function AccountProvider(_ref){var children=_ref.children;var _React$useState=React.useState(undefined),_React$useState2=_slicedToArray(_React$useState,2),account=_React$useState2[0],setAccount=_React$useState2[1];var state={account:account,setAccount:setAccount};return/*#__PURE__*/React.createElement(StateContext.Provider,{value:state},children);}export function useAccountState(){var state=React.useContext(StateContext);if(state===undefined){throw new Error(\"useAccountState must be used within a AccountProvider\");}return[state.account,state.setAccount];}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/providers/account.tsx"],"names":["React","StateContext","createContext","undefined","AccountProvider","children","useState","account","setAccount","state","useAccountState","useContext","Error"],"mappings":"mKAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CASA,GAAMC,CAAAA,YAAY,CAAGD,KAAK,CAACE,aAAN,CAAuCC,SAAvC,CAArB,CAGA,MAAO,SAASC,CAAAA,eAAT,MAA8C,IAAnBC,CAAAA,QAAmB,MAAnBA,QAAmB,qBACrBL,KAAK,CAACM,QAAN,CAAoCH,SAApC,CADqB,oDAC5CI,OAD4C,qBACnCC,UADmC,qBAEnD,GAAMC,CAAAA,KAAK,CAAG,CAAEF,OAAO,CAAPA,OAAF,CAAWC,UAAU,CAAVA,UAAX,CAAd,CACA,mBACE,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEC,KAA9B,EAAsCJ,QAAtC,CADF,CAGD,CAED,MAAO,SAASK,CAAAA,eAAT,EAA8D,CACnE,GAAMD,CAAAA,KAAK,CAAGT,KAAK,CAACW,UAAN,CAAiBV,YAAjB,CAAd,CACA,GAAIQ,KAAK,GAAKN,SAAd,CAAyB,CACvB,KAAM,IAAIS,CAAAA,KAAJ,yDAAN,CACD,CACD,MAAO,CAACH,KAAK,CAACF,OAAP,CAAgBE,KAAK,CAACD,UAAtB,CAAP,CACD","sourcesContent":["import * as React from \"react\";\nimport { Account } from \"@solana/web3.js\";\n\ntype SetAccount = (account: Account | undefined) => void;\ntype State = {\n  account: Account | undefined;\n  setAccount: SetAccount;\n};\n\nconst StateContext = React.createContext<State | undefined>(undefined);\n\ntype Props = { children: React.ReactNode };\nexport function AccountProvider({ children }: Props) {\n  const [account, setAccount] = React.useState<Account | undefined>(undefined);\n  const state = { account, setAccount };\n  return (\n    <StateContext.Provider value={state}>{children}</StateContext.Provider>\n  );\n}\n\nexport function useAccountState(): [Account | undefined, SetAccount] {\n  const state = React.useContext(StateContext);\n  if (state === undefined) {\n    throw new Error(`useAccountState must be used within a AccountProvider`);\n  }\n  return [state.account, state.setAccount];\n}\n"]},"metadata":{},"sourceType":"module"}