{"ast":null,"code":"import*as React from\"react\";import\"styles/animate.scss\";import{useSelectTransaction}from\"providers/transactions/selected\";export function TxTableRow(_ref){var _timing,_timing$recent,_timing2,_timing2$recentSignat,_timing3,_timing3$singleGossip,_timing4,_timing4$single;var transaction=_ref.transaction;var signature=transaction.details.signature;var selectTransaction=useSelectTransaction();var targetSlot;var landedSlot;var timing;if(transaction.status===\"success\"){targetSlot=transaction.slot.target;landedSlot=transaction.slot.landed;timing=transaction.timing;}else if(transaction.status===\"timeout\"){}else{targetSlot=transaction.pending.targetSlot;}return/*#__PURE__*/React.createElement(\"tr\",{className:\"debug-row\",onClick:function onClick(){return selectTransaction(signature);}},/*#__PURE__*/React.createElement(\"td\",{className:\"text-monospace\"},signature.slice(0,10),\"...\"),/*#__PURE__*/React.createElement(\"td\",null,targetSlot||\"-\"),/*#__PURE__*/React.createElement(\"td\",null,landedSlot||\"-\"),/*#__PURE__*/React.createElement(\"td\",null,((_timing=timing)===null||_timing===void 0?void 0:(_timing$recent=_timing.recent)===null||_timing$recent===void 0?void 0:_timing$recent.toFixed(3))||\"-\"),/*#__PURE__*/React.createElement(\"td\",null,((_timing2=timing)===null||_timing2===void 0?void 0:(_timing2$recentSignat=_timing2.recentSignature)===null||_timing2$recentSignat===void 0?void 0:_timing2$recentSignat.toFixed(3))||\"-\"),/*#__PURE__*/React.createElement(\"td\",null,((_timing3=timing)===null||_timing3===void 0?void 0:(_timing3$singleGossip=_timing3.singleGossip)===null||_timing3$singleGossip===void 0?void 0:_timing3$singleGossip.toFixed(3))||\"-\"),/*#__PURE__*/React.createElement(\"td\",null,((_timing4=timing)===null||_timing4===void 0?void 0:(_timing4$single=_timing4.single)===null||_timing4$single===void 0?void 0:_timing4$single.toFixed(3))||\"-\"));}","map":{"version":3,"sources":["/Users/jstarry/Workspace/solana/break/client/src/components/TxTableRow.tsx"],"names":["React","useSelectTransaction","TxTableRow","transaction","signature","details","selectTransaction","targetSlot","landedSlot","timing","status","slot","target","landed","pending","slice","recent","toFixed","recentSignature","singleGossip","single"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,qBAAP,CAEA,OAASC,oBAAT,KAAqC,iCAArC,CAMA,MAAO,SAASC,CAAAA,UAAT,MAA4C,sHAAtBC,CAAAA,WAAsB,MAAtBA,WAAsB,CACjD,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAACE,OAAZ,CAAoBD,SAAtC,CACA,GAAME,CAAAA,iBAAiB,CAAGL,oBAAoB,EAA9C,CAEA,GAAIM,CAAAA,UAAJ,CACA,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAIN,WAAW,CAACO,MAAZ,GAAuB,SAA3B,CAAsC,CACpCH,UAAU,CAAGJ,WAAW,CAACQ,IAAZ,CAAiBC,MAA9B,CACAJ,UAAU,CAAGL,WAAW,CAACQ,IAAZ,CAAiBE,MAA9B,CACAJ,MAAM,CAAGN,WAAW,CAACM,MAArB,CACD,CAJD,IAIO,IAAIN,WAAW,CAACO,MAAZ,GAAuB,SAA3B,CAAsC,CAC5C,CADM,IACA,CACLH,UAAU,CAAGJ,WAAW,CAACW,OAAZ,CAAoBP,UAAjC,CACD,CAED,mBACE,0BAAI,SAAS,CAAC,WAAd,CAA0B,OAAO,CAAE,yBAAMD,CAAAA,iBAAiB,CAACF,SAAD,CAAvB,EAAnC,eACE,0BAAI,SAAS,CAAC,gBAAd,EAAgCA,SAAS,CAACW,KAAV,CAAgB,CAAhB,CAAmB,EAAnB,CAAhC,OADF,cAEE,8BAAKR,UAAU,EAAI,GAAnB,CAFF,cAGE,8BAAKC,UAAU,EAAI,GAAnB,CAHF,cAIE,8BAAK,UAAAC,MAAM,QAAN,kDAAQO,MAAR,wDAAgBC,OAAhB,CAAwB,CAAxB,IAA8B,GAAnC,CAJF,cAKE,8BAAK,WAAAR,MAAM,QAAN,2DAAQS,eAAR,sEAAyBD,OAAzB,CAAiC,CAAjC,IAAuC,GAA5C,CALF,cAME,8BAAK,WAAAR,MAAM,QAAN,2DAAQU,YAAR,sEAAsBF,OAAtB,CAA8B,CAA9B,IAAoC,GAAzC,CANF,cAOE,8BAAK,WAAAR,MAAM,QAAN,qDAAQW,MAAR,0DAAgBH,OAAhB,CAAwB,CAAxB,IAA8B,GAAnC,CAPF,CADF,CAWD","sourcesContent":["import * as React from \"react\";\n\nimport \"styles/animate.scss\";\nimport { TransactionState } from \"providers/transactions\";\nimport { useSelectTransaction } from \"providers/transactions/selected\";\n\ninterface Props {\n  transaction: TransactionState;\n}\n\nexport function TxTableRow({ transaction }: Props) {\n  const signature = transaction.details.signature;\n  const selectTransaction = useSelectTransaction();\n\n  let targetSlot;\n  let landedSlot;\n  let timing;\n  if (transaction.status === \"success\") {\n    targetSlot = transaction.slot.target;\n    landedSlot = transaction.slot.landed;\n    timing = transaction.timing;\n  } else if (transaction.status === \"timeout\") {\n  } else {\n    targetSlot = transaction.pending.targetSlot;\n  }\n\n  return (\n    <tr className=\"debug-row\" onClick={() => selectTransaction(signature)}>\n      <td className=\"text-monospace\">{signature.slice(0, 10)}...</td>\n      <td>{targetSlot || \"-\"}</td>\n      <td>{landedSlot || \"-\"}</td>\n      <td>{timing?.recent?.toFixed(3) || \"-\"}</td>\n      <td>{timing?.recentSignature?.toFixed(3) || \"-\"}</td>\n      <td>{timing?.singleGossip?.toFixed(3) || \"-\"}</td>\n      <td>{timing?.single?.toFixed(3) || \"-\"}</td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}